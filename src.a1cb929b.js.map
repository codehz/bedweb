{"version":3,"sources":["../src/utils.js","../src/property.js","../src/render.js","../src/emitter.js","../src/cache.js","../src/define.js","../src/parent.js","../src/children.js","../../src/template/utils.js","../../../src/template/resolvers/array.js","../../../src/template/resolvers/value.js","../../../src/template/resolvers/event.js","../../../src/template/resolvers/class.js","../../../src/template/resolvers/style.js","../../../src/template/resolvers/property.js","../../src/template/core.js","../../src/template/helpers.js","../../src/template/index.js","../src/index.js","xterm.css","webpack:///src/public/AddonManager.ts","webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///src/common/services/Services.ts","webpack:///src/common/EventEmitter.ts","webpack:///src/common/Lifecycle.ts","webpack:///src/common/buffer/Constants.ts","webpack:///src/browser/services/Services.ts","webpack:///src/common/buffer/CellData.ts","webpack:///src/common/buffer/AttributeData.ts","webpack:///src/browser/Lifecycle.ts","webpack:///src/common/input/TextDecoder.ts","webpack:///src/browser/renderer/atlas/Constants.ts","webpack:///src/browser/Color.ts","webpack:///src/common/Platform.ts","webpack:///src/common/data/EscapeSequences.ts","webpack:///src/browser/renderer/BaseRenderLayer.ts","webpack:///src/common/services/ServiceRegistry.ts","webpack:///src/common/TypedArrayUtils.ts","webpack:///src/common/buffer/BufferLine.ts","webpack:///src/browser/LocalizableStrings.ts","webpack:///src/common/data/Charsets.ts","webpack:///src/common/CharWidth.ts","webpack:///src/common/parser/Params.ts","webpack:///src/common/parser/OscParser.ts","webpack:///src/common/parser/Constants.ts","webpack:///src/common/parser/DcsParser.ts","webpack:///src/browser/renderer/atlas/CharAtlasCache.ts","webpack:///src/browser/renderer/atlas/CharAtlasUtils.ts","webpack:///src/browser/ColorManager.ts","webpack:///src/browser/renderer/RendererUtils.ts","webpack:///src/browser/renderer/CharacterJoinerRegistry.ts","webpack:///src/browser/input/Mouse.ts","webpack:///src/browser/RenderDebouncer.ts","webpack:///src/browser/ScreenDprMonitor.ts","webpack:///src/common/Clone.ts","webpack:///src/public/Terminal.ts","webpack:///src/Terminal.ts","webpack:///src/browser/input/CompositionHelper.ts","webpack:///src/browser/Viewport.ts","webpack:///src/browser/Clipboard.ts","webpack:///src/InputHandler.ts","webpack:///src/common/parser/EscapeSequenceParser.ts","webpack:///src/browser/renderer/Renderer.ts","webpack:///src/browser/renderer/TextRenderLayer.ts","webpack:///src/browser/renderer/GridCache.ts","webpack:///src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack:///src/browser/renderer/atlas/BaseCharAtlas.ts","webpack:///src/browser/ColorContrastCache.ts","webpack:///src/browser/renderer/atlas/LRUMap.ts","webpack:///src/browser/renderer/SelectionRenderLayer.ts","webpack:///src/browser/renderer/CursorRenderLayer.ts","webpack:///src/browser/renderer/LinkRenderLayer.ts","webpack:///src/browser/Linkifier.ts","webpack:///src/browser/services/SelectionService.ts","webpack:///src/browser/selection/SelectionModel.ts","webpack:///src/browser/input/MoveToCell.ts","webpack:///src/browser/services/SoundService.ts","webpack:///src/browser/MouseZoneManager.ts","webpack:///src/AccessibilityManager.ts","webpack:///src/browser/renderer/dom/DomRenderer.ts","webpack:///src/browser/renderer/dom/DomRendererRowFactory.ts","webpack:///src/common/input/Keyboard.ts","webpack:///src/common/WindowsMode.ts","webpack:///src/browser/services/RenderService.ts","webpack:///src/common/services/OptionsService.ts","webpack:///src/browser/services/CharSizeService.ts","webpack:///src/common/services/BufferService.ts","webpack:///src/common/buffer/BufferSet.ts","webpack:///src/common/buffer/Buffer.ts","webpack:///src/common/CircularList.ts","webpack:///src/common/buffer/BufferReflow.ts","webpack:///src/common/buffer/Marker.ts","webpack:///src/browser/services/MouseService.ts","webpack:///src/common/services/CoreService.ts","webpack:///src/common/services/LogService.ts","webpack:///src/common/services/DirtyRowService.ts","webpack:///src/common/services/InstantiationService.ts","webpack:///src/common/services/CoreMouseService.ts","webpack:///src/common/input/WriteBuffer.ts","webpack:///src/browser/services/CoreBrowserService.ts","xterm.ts","components/input-wrapper.css","components/input-wrapper.ts","components/button-wrapper.css","components/button-wrapper.ts","../node_modules/form-data-entries/index.js","components/login-panel.css","components/login-panel.ts","preloader.ts","index.css","app.css","components/tab-item.ts","components/tab-group.css","../node_modules/rematrix/dist/rematrix.es.js","../node_modules/flipping/src/constants.ts","../node_modules/flipping/src/utils.ts","../node_modules/flipping/src/plugins/mirror.ts","../node_modules/flipping/src/plugins/radius.ts","../node_modules/flipping/src/Flipping.ts","../node_modules/flipping/src/animations.ts","../node_modules/flipping/src/adapters/web.ts","utils.ts","components/tab-group.ts","event-emitter.ts","wsrpc.ts","components/tab-context.css","components/sysinfo/basic-card.css","components/sysinfo/basic-card.ts","components/sysinfo/cpu-info.css","components/sysinfo/cpu-info.ts","components/x-chart.ts","../node_modules/tslib/tslib.es6.js","../../../src/internal/util/isFunction.ts","../../src/internal/config.ts","../../../src/internal/util/hostReportError.ts","../../src/internal/Observer.ts","../../../src/internal/util/isArray.ts","../../../src/internal/util/isObject.ts","../../../src/internal/util/UnsubscriptionError.ts","../../src/internal/Subscription.ts","../../../src/internal/symbol/rxSubscriber.ts","../../src/internal/Subscriber.ts","../../../src/internal/util/canReportError.ts","../../../src/internal/util/toSubscriber.ts","../../../src/internal/symbol/observable.ts","../../../src/internal/util/noop.ts","../../../src/internal/util/pipe.ts","../../src/internal/Observable.ts","../../../src/internal/util/ObjectUnsubscribedError.ts","../../src/internal/SubjectSubscription.ts","../../src/internal/Subject.ts","../../../src/internal/operators/refCount.ts","../../../src/internal/observable/ConnectableObservable.ts","../../../src/internal/operators/groupBy.ts","../../src/internal/BehaviorSubject.ts","../../../src/internal/scheduler/Action.ts","../../../src/internal/scheduler/AsyncAction.ts","../../../src/internal/scheduler/QueueAction.ts","../../src/internal/Scheduler.ts","../../../src/internal/scheduler/AsyncScheduler.ts","../../../src/internal/scheduler/QueueScheduler.ts","../../../src/internal/scheduler/queue.ts","../../../src/internal/observable/empty.ts","../../../src/internal/util/isScheduler.ts","../../../src/internal/util/subscribeToArray.ts","../../../src/internal/scheduled/scheduleArray.ts","../../../src/internal/observable/fromArray.ts","../../../src/internal/observable/of.ts","../../../src/internal/observable/throwError.ts","../../src/internal/Notification.ts","../../../src/internal/operators/observeOn.ts","../../src/internal/ReplaySubject.ts","../../src/internal/AsyncSubject.ts","../../../src/internal/util/Immediate.ts","../../../src/internal/scheduler/AsapAction.ts","../../../src/internal/scheduler/AsapScheduler.ts","../../../src/internal/scheduler/asap.ts","../../../src/internal/scheduler/async.ts","../../../src/internal/scheduler/AnimationFrameAction.ts","../../../src/internal/scheduler/AnimationFrameScheduler.ts","../../../src/internal/scheduler/animationFrame.ts","../../../src/internal/scheduler/VirtualTimeScheduler.ts","../../../src/internal/util/identity.ts","../../../src/internal/util/isObservable.ts","../../../src/internal/util/ArgumentOutOfRangeError.ts","../../../src/internal/util/EmptyError.ts","../../../src/internal/util/TimeoutError.ts","../../../src/internal/operators/map.ts","../../../src/internal/observable/bindCallback.ts","../../../src/internal/observable/bindNodeCallback.ts","../../src/internal/OuterSubscriber.ts","../../src/internal/InnerSubscriber.ts","../../../src/internal/util/subscribeToPromise.ts","../../../src/internal/symbol/iterator.ts","../../../src/internal/util/subscribeToIterable.ts","../../../src/internal/util/subscribeToObservable.ts","../../../src/internal/util/isArrayLike.ts","../../../src/internal/util/isPromise.ts","../../../src/internal/util/subscribeTo.ts","../../../src/internal/util/subscribeToResult.ts","../../../src/internal/observable/combineLatest.ts","../../../src/internal/scheduled/scheduleObservable.ts","../../../src/internal/scheduled/schedulePromise.ts","../../../src/internal/scheduled/scheduleIterable.ts","../../../src/internal/util/isInteropObservable.ts","../../../src/internal/util/isIterable.ts","../../../src/internal/scheduled/scheduled.ts","../../../src/internal/observable/from.ts","../../../src/internal/operators/mergeMap.ts","../../../src/internal/operators/mergeAll.ts","../../../src/internal/operators/concatAll.ts","../../../src/internal/observable/concat.ts","../../../src/internal/observable/defer.ts","../../../src/internal/observable/forkJoin.ts","../../../src/internal/observable/fromEvent.ts","../../../src/internal/observable/fromEventPattern.ts","../../../src/internal/observable/generate.ts","../../../src/internal/observable/iif.ts","../../../src/internal/util/isNumeric.ts","../../../src/internal/observable/interval.ts","../../../src/internal/observable/merge.ts","../../../src/internal/observable/never.ts","../../../src/internal/observable/onErrorResumeNext.ts","../../../src/internal/observable/pairs.ts","../../../src/internal/util/not.ts","../../../src/internal/operators/filter.ts","../../../src/internal/observable/partition.ts","../../../src/internal/observable/race.ts","../../../src/internal/observable/range.ts","../../../src/internal/observable/timer.ts","../../../src/internal/observable/using.ts","../../../src/internal/observable/zip.ts","../src/index.ts","../../../src/internal/operators/audit.ts","../../../src/internal/operators/auditTime.ts","../../../src/internal/operators/buffer.ts","../../../src/internal/operators/bufferCount.ts","../../../src/internal/operators/bufferTime.ts","../../../src/internal/operators/bufferToggle.ts","../../../src/internal/operators/bufferWhen.ts","../../../src/internal/operators/catchError.ts","../../../src/internal/operators/combineAll.ts","../../../src/internal/operators/combineLatest.ts","../../../src/internal/operators/concat.ts","../../../src/internal/operators/concatMap.ts","../../../src/internal/operators/concatMapTo.ts","../../../src/internal/operators/count.ts","../../../src/internal/operators/debounce.ts","../../../src/internal/operators/debounceTime.ts","../../../src/internal/operators/defaultIfEmpty.ts","../../../src/internal/util/isDate.ts","../../../src/internal/operators/delay.ts","../../../src/internal/operators/delayWhen.ts","../../../src/internal/operators/dematerialize.ts","../../../src/internal/operators/distinct.ts","../../../src/internal/operators/distinctUntilChanged.ts","../../../src/internal/operators/distinctUntilKeyChanged.ts","../../../src/internal/operators/throwIfEmpty.ts","../../../src/internal/operators/take.ts","../../../src/internal/operators/elementAt.ts","../../../src/internal/operators/endWith.ts","../../../src/internal/operators/every.ts","../../../src/internal/operators/exhaust.ts","../../../src/internal/operators/exhaustMap.ts","../../../src/internal/operators/expand.ts","../../../src/internal/operators/finalize.ts","../../../src/internal/operators/find.ts","../../../src/internal/operators/findIndex.ts","../../../src/internal/operators/first.ts","../../../src/internal/operators/ignoreElements.ts","../../../src/internal/operators/isEmpty.ts","../../../src/internal/operators/takeLast.ts","../../../src/internal/operators/last.ts","../../../src/internal/operators/mapTo.ts","../../../src/internal/operators/materialize.ts","../../../src/internal/operators/scan.ts","../../../src/internal/operators/reduce.ts","../../../src/internal/operators/max.ts","../../../src/internal/operators/merge.ts","../../../src/internal/operators/mergeMapTo.ts","../../../src/internal/operators/mergeScan.ts","../../../src/internal/operators/min.ts","../../../src/internal/operators/multicast.ts","../../../src/internal/operators/onErrorResumeNext.ts","../../../src/internal/operators/pairwise.ts","../../../src/internal/operators/partition.ts","../../../src/internal/operators/pluck.ts","../../../src/internal/operators/publish.ts","../../../src/internal/operators/publishBehavior.ts","../../../src/internal/operators/publishLast.ts","../../../src/internal/operators/publishReplay.ts","../../../src/internal/operators/race.ts","../../../src/internal/operators/repeat.ts","../../../src/internal/operators/repeatWhen.ts","../../../src/internal/operators/retry.ts","../../../src/internal/operators/retryWhen.ts","../../../src/internal/operators/sample.ts","../../../src/internal/operators/sampleTime.ts","../../../src/internal/operators/sequenceEqual.ts","../../../src/internal/operators/share.ts","../../../src/internal/operators/shareReplay.ts","../../../src/internal/operators/single.ts","../../../src/internal/operators/skip.ts","../../../src/internal/operators/skipLast.ts","../../../src/internal/operators/skipUntil.ts","../../../src/internal/operators/skipWhile.ts","../../../src/internal/operators/startWith.ts","../../../src/internal/observable/SubscribeOnObservable.ts","../../../src/internal/operators/subscribeOn.ts","../../../src/internal/operators/switchMap.ts","../../../src/internal/operators/switchAll.ts","../../../src/internal/operators/switchMapTo.ts","../../../src/internal/operators/takeUntil.ts","../../../src/internal/operators/takeWhile.ts","../../../src/internal/operators/tap.ts","../../../src/internal/operators/throttle.ts","../../../src/internal/operators/throttleTime.ts","../../../src/internal/operators/timeInterval.ts","../../../src/internal/operators/timeoutWith.ts","../../../src/internal/operators/timeout.ts","../../../src/internal/operators/timestamp.ts","../../../src/internal/operators/toArray.ts","../../../src/internal/operators/window.ts","../../../src/internal/operators/windowCount.ts","../../../src/internal/operators/windowTime.ts","../../../src/internal/operators/windowToggle.ts","../../../src/internal/operators/windowWhen.ts","../../../src/internal/operators/withLatestFrom.ts","../../../src/internal/operators/zip.ts","../../../src/internal/operators/zipAll.ts","../../src/operators/index.ts","components/sysinfo/cpu-usage.css","components/sysinfo/cpu-usage.ts","components/sysinfo/mem-info.css","components/sysinfo/mem-info.ts","../node_modules/ev-emitter/ev-emitter.js","../node_modules/get-size/get-size.js","../node_modules/desandro-matches-selector/matches-selector.js","../node_modules/fizzy-ui-utils/utils.js","../node_modules/outlayer/item.js","../node_modules/outlayer/outlayer.js","../node_modules/masonry-layout/masonry.js","components/masonry-layout.ts","components/sysinfo/disk-info.css","filesize.js","components/sysinfo/disk-info.ts","components/file-explorer.css","res/icons.json","res/icons.ts","components/file-explorer.ts","components/terminal-manager.css","components/terminal-connection.ts","components/terminal-manager.ts","components/tab-context.ts","index.ts"],"names":["camelToDashMap","Map","camelToDash","str","result","get","undefined","replace","toLowerCase","set","pascalToDash","dispatch","host","eventType","options","dispatchEvent","CustomEvent","bubbles","shadyCSS","fn","fallback","shady","window","ShadyCSS","nativeShadow","stringifyElement","element","tagName","String","IS_IE","deferred","Promise","resolve","defaultTransform","v","objectTransform","value","TypeError","Object","freeze","property","connect","type","transform","Number","Boolean","val","oldValue","key","invalidate","attrName","hasAttribute","attrValue","getAttribute","render","customOptions","shadowRoot","shadowRootInit","mode","assign","update","target","attachShadow","observe","flush","callbacks","WeakMap","queue","Set","execute","forEach","delete","e","size","requestAnimationFrame","add","subscribe","cb","entries","getEntry","targetMap","entry","contexts","deps","state","checksum","observed","calculateChecksum","depEntry","dispatchDeep","emitter","contextStack","getter","has","Error","context","nextValue","setter","force","newValue","clearValue","lastValue","unsubscribe","process","walkInShadow","updateQueue","defaultMethod","compile","Hybrid","descriptors","hybrids","keys","desc","config","Array","isArray","defineProperty","prototype","cache","enumerable","configurable","push","disconnects","defineElement","hybridsOrConstructor","CustomElement","customElements","define","HTMLElement","constructor","list","index","length","defineMap","elements","reduce","acc","walk","node","parentElement","parentNode","parent","hybridsOrFn","items","from","children","child","deep","nested","observer","MutationObserver","childList","subtree","disconnect","map","dataMap","defaultValue","getTemplateEnd","data","endNode","removeTemplate","nodeType","Node","TEXT_NODE","childNodes","removeChild","startNode","lastNextSibling","nextSibling","arrayMap","movePlaceholder","previousSibling","insertBefore","prevNode","nextNode","resolveArray","lastEntries","item","id","hasOwnProperty","call","placeholder","available","ids","filter","lastIndex","matchedEntry","i","document","createTextNode","resolveValue","textContent","targets","resolveEventListener","eventMap","removeEventListener","callback","bind","addEventListener","normalizeValue","className","classMap","resolveClassList","previousList","classList","remove","styleMap","resolveStyle","previousMap","nextMap","dashKey","styleValue","style","setProperty","removeProperty","resolveProperty","propertyName","isSVG","substr","resolveStyleList","SVGElement","removeAttribute","setAttribute","TIMESTAMP","Date","now","getPlaceholder","PLACEHOLDER_REGEXP_TEXT","PLACEHOLDER_REGEXP_EQUAL","RegExp","PLACEHOLDER_REGEXP_ALL","ATTR_PREFIX","ATTR_REGEXP","preparedTemplates","applyShadyCSS","template","clone","createElement","content","appendChild","cloneNode","styles","querySelectorAll","count","prepareTemplate","createSignature","parts","signature","part","slice","join","match","getPropertyName","string","split","pop","replaceComments","fragment","iterator","createNodeIterator","NodeFilter","SHOW_COMMENT","test","createInternalWalker","currentNode","createExternalWalker","createTreeWalker","SHOW_ELEMENT","SHOW_TEXT","createWalker","ShadyDOM","inUse","container","compileTemplate","rawParts","innerHTML","svgRoot","firstChild","compileWalker","compileIndex","text","results","before","next","equal","ELEMENT_NODE","attributes","attr","trim","name","partialName","args","prevArgs","importNode","renderWalker","clonedParts","renderIndex","currentPart","shift","markers","previousChild","marker","styleSubtree","styleElement","setCache","arguments","promiseMap","promise","delay","timeout","setTimeout","then","clearTimeout","PLACEHOLDER","SVG_PLACEHOLDER","templatesMap","stylesMap","methods","create","createTemplate","html","svg","helpers","module","exports","AddonManager","root","factory","amd","a","installedModules","__webpack_require__","moduleId","l","modules","m","c","d","o","r","Symbol","toStringTag","t","__esModule","ns","n","object","p","s","IBufferService","createDecorator","ICoreMouseService","ICoreService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","_listeners","_disposed","this","_event","listener","dispose","splice","fire","EventEmitter","_disposables","_isDisposed","register","unregister","indexOf","Disposable","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","ICharSizeService","ICoreBrowserService","IMouseService","IRenderService","ISelectionService","ISoundService","fg","bg","combinedData","fromCharData","obj","CellData","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","AttributeData","toColorRGB","fromColorRGB","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","getFgColor","getBgColor","handler","useCapture","codePoint","fromCharCode","start","end","codepoint","_interim","clear","decode","input","startPos","StringToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","toPaddedHex","toString","toCss","g","b","toRgba","fromRgba","rgbRelativeLuminance","rgb","rgbRelativeLuminance2","rs","gs","bs","Math","pow","contrastRatio","l1","l2","rgbaToColor","css","rgba","ensureContrastRatioRgba","bgRgba","fgRgba","ratio","bgL","fgL","reduceLuminance","increaseLuminance","bgR","bgG","bgB","fgR","fgG","fgB","cr","max","ceil","min","round","parseInt","color","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","_container","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","_initCanvas","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","replaceChild","rows","acquireCharAtlas","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","contrastColor","_getContrastColor","_drawUncachedChars","drawBoldTextInBrightColors","draw","fgOverride","save","opaque","ansi","foreground","globalAlpha","restore","beginPath","rect","cols","clip","fontWeightBold","fontWeight","fontSize","fontFamily","minimumContrastRatio","adjustedColor","contrastCache","getColor","fgColor","fgColorMode","bgColor","bgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","setColor","inverse","BaseRenderLayer","DI_TARGET","DI_DEPENDENCIES","storeServiceDependency","serviceRegistry","ctor","decorator","fillFallback","array","CELL_SIZE","DEFAULT_ATTR_DATA","fillCellData","isWrapped","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","deleteCells","replaceCells","subarray","copyFrom","line","newLine","BufferLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","promptLabel","tooMuchOutput","CHARSETS","DEFAULT_CHARSET","wcwidth","opts","COMBINING_BMP","COMBINING_HIGH","control","table","nul","num","ucs","mid","MAX_SUBPARAMS","maxLength","maxSubParamsLength","params","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","Params","k","addSubParam","addParam","newParams","toArray","res","reset","hasSubParams","idx","getSubParams","getSubParamsAll","addDigit","store","cur","_state","_id","_handlers","_handlerFb","addHandler","ident","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","j","_put","put","utf32ToString","_end","success","OscParser","_handler","_hitLimit","PAYLOAD_LIMIT","ret","OscHandler","EMPTY_HANDLERS","_active","_ident","unhook","hook","DcsParser","_params","DcsHandler","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","ownedBy","configEquals","atlas","newEntry","DynamicCharAtlas","clonedColors","cursor","cursorAccent","selection","allowTransparency","colorCode","DEFAULT_FOREGROUND","fromCss","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","ColorContrastCache","selectionOpaque","blend","onOptionsChange","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","console","warn","getImageData","ColorManager","firstCell","_width","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","substring","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","newRange","inRange","range","getCoordsRelativeToElement","event","getBoundingClientRect","clientX","left","clientY","top","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","coords","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","ScreenDprMonitor","depth","clonedObject","_core","Terminal","_addonManager","onLineFeed","onSelectionChange","onData","onBinary","onTitleChange","onScroll","onKey","onRender","onResize","_parser","ParserApi","textarea","BufferApiView","blur","focus","columns","_verifyIntegers","open","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","addMarker","cursorYOffset","hasSelection","select","column","getSelection","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","writeUtf8","writeln","paste","getOption","optionsService","setOption","loadAddon","addon","Strings","Infinity","isNaN","_buffer","ydisp","ybase","getLine","BufferLineApiView","_line","getCell","BufferCellApiView","startColumn","endColumn","_x","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","browser","Browser","mouseEvents","_keyDownHandled","_blankLine","_onCursorMove","_onData","_onBinary","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","_instantiationService","InstantiationService","OptionsService","setService","createInstance","BufferService","_logService","LogService","_coreService","CoreService","_coreMouseService","CoreMouseService","_dirtyRowService","DirtyRowService","_setupOptionsListeners","_setup","_writeBuffer","WriteBuffer","_inputHandler","parse","_windowsMode","_renderService","_customKeyEventHandler","_parent","body","applicationKeypad","originMode","insertMode","wraparoundMode","bracketedPasteMode","charset","gcharset","glevel","charsets","curAttrData","_eraseAttrData","currentParam","_userScrolling","InputHandler","linkifier","Linkifier","windowsMode","_enableWindowsMode","handleWindowsModeLineFeed","buffers","active","eraseAttrData","preventScroll","onOptionChange","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","_initGlobal","_bindKeys","addDisposableDomListener","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","_document","ownerDocument","dir","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","coreBrowserService","CoreBrowserService","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onDimensionsChange","SelectionService","onRedrawRequest","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","self","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","preventDefault","onProtocolChange","events","logLevel","debug","explainEvents","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","isCursorInitialized","scroll","eraseAttr","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","markRangeDirty","disp","suppressScrollEvent","oldYdisp","scrollAmount","normal","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","metaKey","keyCode","setgLevel","setgCharset","charCode","which","bell","_soundBell","playBellSound","_visualBell","_visualBellTimer","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","is","term","termName","handleTitle","title","inputHandler","userScrolling","cancelEvents","stopPropagation","bellStyle","writeSync","_textarea","_isComposing","_isSendingComposition","_compositionPosition","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","diff","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","FALLBACK_SCROLL_BAR_WIDTH","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","dimensions","offsetHeight","newBufferHeight","newScrollTop","offsetParent","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","position","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","GLEVEL","concat","pt","cursorStyle","cursorBlink","_terminal","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","final","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","tabSet","setOscHandler","setTitle","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","selectDefaultCharset","flag","selectCharset","screenAlignmentPattern","setErrorHandler","error","setDcsHandler","DECRQSS","cursorStartX","cursorStartY","clearRange","len","chWidth","curAttr","bufferRow","markDirty","ch","getNullCell","precedingCodepoint","convertEol","_restrictCursor","originalX","nextStop","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","trimStart","scrollBottomRowsOffset","scrollBottomAbsolute","savedCols","activeEncoding","isCursorHidden","activateAltBuffer","activateNormalBuffer","_extractColor","accu","cSpace","advance","subparams","isBlinking","bottom","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","collectAndFlag","level","yOffset","markAllDirty","setDefault","addMany","codes","TransitionTable","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","TRANSITIONS","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","abort","handlersEsc","jj","nextRendererId","_screenElement","_linkifier","_onRequestRefreshRows","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","characterJoinerRegistry","bufferService","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","beginFrame","overlaps","measureText","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_color","_rgba","setCss","getCss","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_onRequestRefreshRowsEvent","_coreBrowserService","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","_renderBlurCursor","isCursorVisible","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","is256Color","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","rex","source","flags","stringIndex","uri","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","getStringCellWidth","MouseZone","_createLinkHoverEvent","clickCallback","hoverCallback","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","onBufferActivate","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","getCoords","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","mod","rpt","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","destination","base64","binaryString","atob","bytes","dataURI","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","_getSelectionLength","currentSelectionLength","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","char","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","_announceCharacters","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","SELECTION_CLASS","nextTerminalId","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","cursorX","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","_applyMinimumContrast","_addStyle","padStart","ensureContrastRatio","padChar","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","onRequestRefreshRows","IntersectionObserver","_onIntersectionChange","threshold","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","scrollback","disableStdin","tabStopWidth","screenKeys","useFlowControl","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","_sanitizeAndValidateOption","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet","_normal","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","triggerBinaryEvent","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","_entries","service","instance","ServiceCollection","_services","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","DOWN","UP","MOVE","WHEEL","e1","e2","_action","_callbacks","_pendingData","_bufferOffset","_innerWrite","startTime","activeElement","hasFocus","_addons","terminal","loadedAddon","_wrappedAddonDispose","activate","formDataEntries","FormData","form","toUpperCase","disabled","checked","getElementsByTagName","option","selected","format","matrix","identity","RangeError","s0","s1","s2","s3","s4","s5","c5","c4","c3","c2","c1","c0","determinant","multiply","fm","fx","product","parseFloat","rotateX","angle","theta","PI","cos","sin","rotateY","rotateZ","scale","scalar","scalarY","scaleX","scaleY","scaleZ","skew","angleX","angleY","thetaX","tan","thetaY","skewX","skewY","translate","distanceX","distanceY","translateX","distance","translateY","translateZ","extendStatics","setPrototypeOf","__proto__","__extends","__","__assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","done","__generator","_","f","label","sent","trys","ops","verb","op","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","jl","__await","__asyncGenerator","asyncIterator","q","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","default","__importDefault","global","symbol","iec","bits","jedec","fullform","filesize","arg","base","full","fullforms","locale","localeOptions","neg","output","unix","separator","spacer","standard","symbols","descriptor","exponent","toFixed","toLocaleString","partial","opt","file","folder","plugin","link","unavailable","sync"],"mappings":"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,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAA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","file":"src.a1cb929b.js","sourceRoot":"../src","sourcesContent":["const camelToDashMap = new Map();\nexport function camelToDash(str) {\n  let result = camelToDashMap.get(str);\n  if (result === undefined) {\n    result = str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    camelToDashMap.set(str, result);\n  }\n  return result;\n}\n\nexport function pascalToDash(str) {\n  return camelToDash(str.replace(/((?!([A-Z]{2}|^))[A-Z])/g, '-$1'));\n}\n\nexport function dispatch(host, eventType, options = {}) {\n  return host.dispatchEvent(new CustomEvent(eventType, { bubbles: false, ...options }));\n}\n\nexport function shadyCSS(fn, fallback) {\n  const shady = window.ShadyCSS;\n\n  /* istanbul ignore next */\n  if (shady && !shady.nativeShadow) {\n    return fn(shady);\n  }\n\n  return fallback;\n}\n\nexport function stringifyElement(element) {\n  const tagName = String(element.tagName).toLowerCase();\n  return `<${tagName}>`;\n}\n\nexport const IS_IE = 'ActiveXObject' in window;\nexport const deferred = Promise.resolve();\n","import { camelToDash } from './utils';\n\nconst defaultTransform = (v) => v;\n\nconst objectTransform = (value) => {\n  if (typeof value !== 'object') {\n    throw TypeError(`Assigned value must be an object: ${typeof value}`);\n  }\n  return value && Object.freeze(value);\n};\n\nexport default function property(value, connect) {\n  const type = typeof value;\n  let transform = defaultTransform;\n\n  switch (type) {\n    case 'string':\n      transform = String;\n      break;\n    case 'number':\n      transform = Number;\n      break;\n    case 'boolean':\n      transform = Boolean;\n      break;\n    case 'function':\n      transform = value;\n      value = transform();\n      break;\n    case 'object':\n      if (value) Object.freeze(value);\n      transform = objectTransform;\n      break;\n    default: break;\n  }\n\n  return {\n    get: (host, val = value) => val,\n    set: (host, val, oldValue) => transform(val, oldValue),\n    connect: type !== 'object' && type !== 'undefined'\n      ? (host, key, invalidate) => {\n        if (host[key] === value) {\n          const attrName = camelToDash(key);\n\n          if (host.hasAttribute(attrName)) {\n            const attrValue = host.getAttribute(attrName);\n            host[key] = attrValue === '' && transform === Boolean ? true : attrValue;\n          }\n        }\n\n        return connect && connect(host, key, invalidate);\n      }\n      : connect,\n  };\n}\n","export default function render(fn, customOptions = {}) {\n  if (typeof fn !== 'function') {\n    throw TypeError(`The first argument must be a function: ${typeof fn}`);\n  }\n\n  const options = { shadowRoot: true, ...customOptions };\n  const shadowRootInit = { mode: 'open' };\n\n  if (typeof options.shadowRoot === 'object') {\n    Object.assign(shadowRootInit, options.shadowRoot);\n  }\n\n  return {\n    get(host) {\n      const update = fn(host);\n      let target = host;\n\n      if (options.shadowRoot) {\n        if (!host.shadowRoot) host.attachShadow(shadowRootInit);\n        target = host.shadowRoot;\n      }\n\n      return function flush() {\n        update(host, target);\n        return target;\n      };\n    },\n    observe(host, flush) {\n      flush();\n    },\n  };\n}\n","const callbacks = new WeakMap();\nconst queue = new Set();\n\nfunction execute() {\n  try {\n    queue.forEach((target) => {\n      try {\n        callbacks.get(target)();\n        queue.delete(target);\n      } catch (e) {\n        queue.delete(target);\n        throw e;\n      }\n    });\n  } catch (e) {\n    if (queue.size) execute();\n    throw e;\n  }\n}\n\nexport function dispatch(target) {\n  if (!queue.size) {\n    requestAnimationFrame(execute);\n  }\n  queue.add(target);\n}\n\nexport function subscribe(target, cb) {\n  callbacks.set(target, cb);\n  dispatch(target);\n\n  return function unsubscribe() {\n    queue.delete(target);\n    callbacks.delete(target);\n  };\n}\n","import { stringifyElement } from './utils';\nimport * as emitter from './emitter';\n\nconst entries = new WeakMap();\nexport function getEntry(target, key) {\n  let targetMap = entries.get(target);\n  if (!targetMap) {\n    targetMap = new Map();\n    entries.set(target, targetMap);\n  }\n\n  let entry = targetMap.get(key);\n\n  if (!entry) {\n    entry = {\n      target,\n      key,\n      value: undefined,\n      contexts: undefined,\n      deps: undefined,\n      state: 0,\n      checksum: 0,\n      observed: false,\n    };\n    targetMap.set(key, entry);\n  }\n\n  return entry;\n}\n\nfunction calculateChecksum(entry) {\n  let checksum = entry.state;\n  if (entry.deps) {\n    entry.deps.forEach((depEntry) => {\n      checksum += depEntry.state;\n    });\n  }\n\n  return checksum;\n}\n\nfunction dispatchDeep(entry) {\n  if (entry.observed) emitter.dispatch(entry);\n  if (entry.contexts) entry.contexts.forEach(dispatchDeep);\n}\n\nconst contextStack = new Set();\nexport function get(target, key, getter) {\n  const entry = getEntry(target, key);\n\n  if (contextStack.size && contextStack.has(entry)) {\n    throw Error(`Circular get invocation of the '${key}' property in '${stringifyElement(target)}'`);\n  }\n\n  contextStack.forEach((context) => {\n    context.deps = context.deps || new Set();\n    context.deps.add(entry);\n\n    if (context.observed) {\n      entry.contexts = entry.contexts || new Set();\n      entry.contexts.add(context);\n    }\n  });\n\n  if (entry.checksum && entry.checksum === calculateChecksum(entry)) {\n    return entry.value;\n  }\n\n  try {\n    contextStack.add(entry);\n\n    if (entry.observed && entry.deps && entry.deps.size) {\n      entry.deps.forEach((depEntry) => {\n        depEntry.contexts.delete(entry);\n      });\n    }\n\n    entry.deps = undefined;\n    const nextValue = getter(target, entry.value);\n\n    if (nextValue !== entry.value) {\n      entry.state += 1;\n      entry.value = nextValue;\n\n      dispatchDeep(entry);\n    }\n\n    entry.checksum = calculateChecksum(entry);\n    contextStack.delete(entry);\n  } catch (e) {\n    entry.checksum = 0;\n\n    contextStack.delete(entry);\n    contextStack.forEach((context) => {\n      context.deps.delete(entry);\n      if (context.observed) entry.contexts.delete(context);\n    });\n\n    throw e;\n  }\n\n  return entry.value;\n}\n\nexport function set(target, key, setter, value, force) {\n  if (contextStack.size && !force) {\n    throw Error(`Try to set '${key}' of '${stringifyElement(target)}' in get call`);\n  }\n\n  const entry = getEntry(target, key);\n  const newValue = setter(target, value, entry.value);\n\n  if (newValue !== entry.value) {\n    entry.checksum = 0;\n    entry.state += 1;\n    entry.value = newValue;\n\n    dispatchDeep(entry);\n  }\n}\n\nexport function invalidate(target, key, clearValue) {\n  if (contextStack.size) {\n    throw Error(`Try to invalidate '${key}' in '${stringifyElement(target)}' get call`);\n  }\n\n  const entry = getEntry(target, key);\n\n  entry.checksum = 0;\n  entry.state += 1;\n\n  dispatchDeep(entry);\n\n  if (clearValue) {\n    entry.value = undefined;\n  }\n}\n\nexport function observe(target, key, getter, fn) {\n  const entry = getEntry(target, key);\n  entry.observed = true;\n\n  let lastValue;\n  const unsubscribe = emitter.subscribe(entry, () => {\n    const value = get(target, key, getter);\n    if (value !== lastValue) {\n      fn(target, value, lastValue);\n      lastValue = value;\n    }\n  });\n\n  return function unobserve() {\n    unsubscribe();\n    entry.observed = false;\n    if (entry.deps && entry.deps.size) {\n      entry.deps.forEach((depEntry) => {\n        depEntry.contexts.delete(entry);\n      });\n    }\n  };\n}\n","import property from './property';\nimport render from './render';\n\nimport * as cache from './cache';\nimport { pascalToDash, deferred } from './utils';\n\n/* istanbul ignore next */\ntry { process.env.NODE_ENV } catch(e) { var process = { env: { NODE_ENV: 'production' } }; } // eslint-disable-line\n\nconst defaultMethod = (host, value) => value;\n\nfunction compile(Hybrid, descriptors) {\n  Hybrid.hybrids = descriptors;\n  Hybrid.callbacks = [];\n\n  Object.keys(descriptors).forEach((key) => {\n    const desc = descriptors[key];\n    const type = typeof desc;\n\n    let config;\n\n    if (type === 'function') {\n      config = key === 'render' ? render(desc) : { get: desc };\n    } else if (type !== 'object' || desc === null || (Array.isArray(desc))) {\n      config = property(desc);\n    } else {\n      config = {\n        get: desc.get || defaultMethod,\n        set: desc.set || (!desc.get && defaultMethod) || undefined,\n        connect: desc.connect,\n        observe: desc.observe,\n      };\n    }\n\n    Object.defineProperty(Hybrid.prototype, key, {\n      get: function get() {\n        return cache.get(this, key, config.get);\n      },\n      set: config.set && function set(newValue) {\n        cache.set(this, key, config.set, newValue);\n      },\n      enumerable: true,\n      configurable: process.env.NODE_ENV !== 'production',\n    });\n\n    if (config.observe) {\n      Hybrid.callbacks.push(\n        (host) => cache.observe(host, key, config.get, config.observe),\n      );\n    }\n\n    if (config.connect) {\n      Hybrid.callbacks.push(\n        (host) => config.connect(host, key, () => { cache.invalidate(host, key); }),\n      );\n    }\n  });\n}\n\nlet update;\n/* istanbul ignore else */\nif (process.env.NODE_ENV !== 'production') {\n  const walkInShadow = (node, fn) => {\n    fn(node);\n\n    Array.from(node.children)\n      .forEach((el) => walkInShadow(el, fn));\n\n    if (node.shadowRoot) {\n      Array.from(node.shadowRoot.children)\n        .forEach((el) => walkInShadow(el, fn));\n    }\n  };\n\n  const updateQueue = new Map();\n  update = (Hybrid, lastHybrids) => {\n    if (!updateQueue.size) {\n      deferred.then(() => {\n        walkInShadow(document.body, (node) => {\n          if (updateQueue.has(node.constructor)) {\n            const hybrids = updateQueue.get(node.constructor);\n            node.disconnectedCallback();\n\n            Object.keys(node.constructor.hybrids).forEach((key) => {\n              cache.invalidate(node, key, node.constructor.hybrids[key] !== hybrids[key]);\n            });\n\n            node.connectedCallback();\n          }\n        });\n        updateQueue.clear();\n      });\n    }\n    updateQueue.set(Hybrid, lastHybrids);\n  };\n}\n\nconst disconnects = new WeakMap();\n\nfunction defineElement(tagName, hybridsOrConstructor) {\n  const type = typeof hybridsOrConstructor;\n  if (type !== 'object' && type !== 'function') {\n    throw TypeError(`Second argument must be an object or a function: ${type}`);\n  }\n\n  const CustomElement = window.customElements.get(tagName);\n\n  if (type === 'function') {\n    if (CustomElement !== hybridsOrConstructor) {\n      return window.customElements.define(tagName, hybridsOrConstructor);\n    }\n    return CustomElement;\n  }\n\n  if (CustomElement) {\n    if (CustomElement.hybrids === hybridsOrConstructor) {\n      return CustomElement;\n    }\n    if (process.env.NODE_ENV !== 'production' && CustomElement.hybrids) {\n      Object.keys(CustomElement.hybrids).forEach((key) => {\n        delete CustomElement.prototype[key];\n      });\n\n      const lastHybrids = CustomElement.hybrids;\n\n      compile(CustomElement, hybridsOrConstructor);\n      update(CustomElement, lastHybrids);\n\n      return CustomElement;\n    }\n\n    throw Error(`Element '${tagName}' already defined`);\n  }\n\n  class Hybrid extends HTMLElement {\n    static get name() { return tagName; }\n\n    connectedCallback() {\n      const { callbacks } = this.constructor;\n      const list = [];\n\n      for (let index = 0; index < callbacks.length; index += 1) {\n        const cb = callbacks[index](this);\n        if (cb) list.push(cb);\n      }\n\n      disconnects.set(this, list);\n    }\n\n    disconnectedCallback() {\n      const list = disconnects.get(this);\n      for (let index = 0; index < list.length; index += 1) {\n        list[index]();\n      }\n    }\n  }\n\n  compile(Hybrid, hybridsOrConstructor);\n  customElements.define(tagName, Hybrid);\n\n  return Hybrid;\n}\n\nfunction defineMap(elements) {\n  return Object.keys(elements).reduce((acc, key) => {\n    const tagName = pascalToDash(key);\n    acc[key] = defineElement(tagName, elements[key]);\n\n    return acc;\n  }, {});\n}\n\nexport default function define(...args) {\n  if (typeof args[0] === 'object') {\n    return defineMap(args[0]);\n  }\n\n  return defineElement(...args);\n}\n","function walk(node, fn) {\n  let parentElement = node.parentElement || node.parentNode.host;\n\n  while (parentElement) {\n    const hybrids = parentElement.constructor.hybrids;\n\n    if (hybrids && fn(hybrids)) {\n      return parentElement;\n    }\n\n    parentElement = parentElement.parentElement\n      || (parentElement.parentNode && parentElement.parentNode.host);\n  }\n\n  return parentElement || null;\n}\n\nexport default function parent(hybridsOrFn) {\n  const fn = typeof hybridsOrFn === 'function' ? hybridsOrFn : (hybrids) => hybrids === hybridsOrFn;\n  return {\n    get: (host) => walk(host, fn),\n    connect(host, key, invalidate) {\n      const target = host[key];\n      if (target) {\n        return invalidate;\n      }\n      return false;\n    },\n  };\n}\n","function walk(node, fn, options, items = []) {\n  Array.from(node.children).forEach((child) => {\n    const hybrids = child.constructor.hybrids;\n    if (hybrids && fn(hybrids)) {\n      items.push(child);\n      if (options.deep && options.nested) {\n        walk(child, fn, options, items);\n      }\n    } else if (options.deep) {\n      walk(child, fn, options, items);\n    }\n  });\n\n  return items;\n}\n\nexport default function children(hybridsOrFn, options = { deep: false, nested: false }) {\n  const fn = typeof hybridsOrFn === 'function' ? hybridsOrFn : (hybrids) => hybrids === hybridsOrFn;\n  return {\n    get(host) { return walk(host, fn, options); },\n    connect(host, key, invalidate) {\n      const observer = new MutationObserver(invalidate);\n\n      observer.observe(host, {\n        childList: true, subtree: !!options.deep,\n      });\n\n      return () => { observer.disconnect(); };\n    },\n  };\n}\n","const map = new WeakMap();\nexport const dataMap = {\n  get(key, defaultValue) {\n    const value = map.get(key);\n    if (value) return value;\n\n    if (defaultValue) {\n      map.set(key, defaultValue);\n    }\n\n    return defaultValue;\n  },\n  set(key, value) {\n    map.set(key, value);\n    return value;\n  },\n};\n\nexport function getTemplateEnd(node) {\n  let data;\n  // eslint-disable-next-line no-cond-assign\n  while (node && (data = dataMap.get(node)) && data.endNode) {\n    node = data.endNode;\n  }\n\n  return node;\n}\n\nexport function removeTemplate(target) {\n  if (target.nodeType !== Node.TEXT_NODE) {\n    let child = target.childNodes[0];\n    while (child) {\n      target.removeChild(child);\n      child = target.childNodes[0];\n    }\n  } else {\n    const data = dataMap.get(target);\n\n    if (data.startNode) {\n      const endNode = getTemplateEnd(data.endNode);\n\n      let node = data.startNode;\n      const lastNextSibling = endNode.nextSibling;\n\n      while (node) {\n        const nextSibling = node.nextSibling;\n        node.parentNode.removeChild(node);\n        node = nextSibling !== lastNextSibling && nextSibling;\n      }\n    }\n  }\n}\n","import {\n  dataMap, removeTemplate, getTemplateEnd,\n} from '../utils';\n\n// eslint-disable-next-line import/no-cycle\nimport resolveValue from './value';\n\nexport const arrayMap = new WeakMap();\n\nfunction movePlaceholder(target, previousSibling) {\n  const data = dataMap.get(target);\n  const startNode = data.startNode;\n  const endNode = getTemplateEnd(data.endNode);\n\n  previousSibling.parentNode.insertBefore(target, previousSibling.nextSibling);\n\n  let prevNode = target;\n  let node = startNode;\n  while (node) {\n    const nextNode = node.nextSibling;\n    prevNode.parentNode.insertBefore(node, prevNode.nextSibling);\n    prevNode = node;\n    node = nextNode !== endNode.nextSibling && nextNode;\n  }\n}\n\nexport default function resolveArray(host, target, value) {\n  let lastEntries = arrayMap.get(target);\n  const entries = value.map((item, index) => ({\n    id: Object.prototype.hasOwnProperty.call(item, 'id') ? item.id : index,\n    value: item,\n    placeholder: null,\n    available: true,\n  }));\n\n  arrayMap.set(target, entries);\n\n  if (lastEntries) {\n    const ids = new Set();\n    entries.forEach((entry) => ids.add(entry.id));\n\n    lastEntries = lastEntries.filter((entry) => {\n      if (!ids.has(entry.id)) {\n        removeTemplate(entry.placeholder);\n        entry.placeholder.parentNode.removeChild(entry.placeholder);\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  let previousSibling = target;\n  const lastIndex = value.length - 1;\n  const data = dataMap.get(target);\n\n  for (let index = 0; index < entries.length; index += 1) {\n    const entry = entries[index];\n    let matchedEntry;\n    if (lastEntries) {\n      for (let i = 0; i < lastEntries.length; i += 1) {\n        if (lastEntries[i].available && lastEntries[i].id === entry.id) {\n          matchedEntry = lastEntries[i];\n          break;\n        }\n      }\n    }\n\n    let placeholder;\n    if (matchedEntry) {\n      matchedEntry.available = false;\n      placeholder = matchedEntry.placeholder;\n\n      if (placeholder.previousSibling !== previousSibling) {\n        movePlaceholder(placeholder, previousSibling);\n      }\n      if (matchedEntry.value !== entry.value) {\n        resolveValue(host, placeholder, entry.value);\n      }\n    } else {\n      placeholder = document.createTextNode('');\n      previousSibling.parentNode.insertBefore(placeholder, previousSibling.nextSibling);\n      resolveValue(host, placeholder, entry.value);\n    }\n\n    previousSibling = getTemplateEnd(dataMap.get(placeholder).endNode || placeholder);\n\n    if (index === 0) data.startNode = placeholder;\n    if (index === lastIndex) data.endNode = previousSibling;\n\n    entry.placeholder = placeholder;\n  }\n\n  if (lastEntries) {\n    lastEntries.forEach((entry) => {\n      if (entry.available) {\n        removeTemplate(entry.placeholder);\n        entry.placeholder.parentNode.removeChild(entry.placeholder);\n      }\n    });\n  }\n}\n","import { dataMap, removeTemplate } from '../utils';\n// eslint-disable-next-line import/no-cycle\nimport resolveArray, { arrayMap } from './array';\n\nexport default function resolveValue(host, target, value) {\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  let data = dataMap.get(target, {});\n\n  if (data.type !== type) {\n    removeTemplate(target);\n    if (type === 'array') arrayMap.delete(target);\n\n    data = dataMap.set(target, { type });\n\n    if (target.textContent !== '') {\n      target.textContent = '';\n    }\n  }\n\n  switch (type) {\n    case 'function':\n      value(host, target);\n      break;\n    case 'array':\n      resolveArray(host, target, value);\n      break;\n    default:\n      target.textContent = type === 'number' || value ? value : '';\n  }\n}\n","const targets = new WeakMap();\n\nexport default function resolveEventListener(eventType) {\n  return (host, target, value, lastValue) => {\n    if (lastValue) {\n      const eventMap = targets.get(target);\n      if (eventMap) {\n        target.removeEventListener(\n          eventType,\n          eventMap.get(lastValue),\n          lastValue.options !== undefined ? lastValue.options : false,\n        );\n      }\n    }\n\n    if (value) {\n      if (typeof value !== 'function') {\n        throw Error(`Event listener must be a function: ${typeof value}`);\n      }\n\n      let eventMap = targets.get(target);\n      if (!eventMap) {\n        eventMap = new WeakMap();\n        targets.set(target, eventMap);\n      }\n\n      const callback = value.bind(null, host);\n      eventMap.set(value, callback);\n\n      target.addEventListener(\n        eventType,\n        callback,\n        value.options !== undefined ? value.options : false,\n      );\n    }\n  };\n}\n","function normalizeValue(value, set = new Set()) {\n  if (Array.isArray(value)) {\n    value.forEach((className) => set.add(className));\n  } else if (value !== null && typeof value === 'object') {\n    Object.keys(value).forEach((key) => value[key] && set.add(key));\n  } else {\n    set.add(value);\n  }\n\n  return set;\n}\n\nconst classMap = new WeakMap();\n\nexport default function resolveClassList(host, target, value) {\n  const previousList = classMap.get(target) || new Set();\n  const list = normalizeValue(value);\n\n  classMap.set(target, list);\n\n  list.forEach((className) => {\n    target.classList.add(className);\n    previousList.delete(className);\n  });\n\n  previousList.forEach((className) => {\n    target.classList.remove(className);\n  });\n}\n","import { camelToDash, stringifyElement } from '../../utils';\n\nconst styleMap = new WeakMap();\n\nexport default function resolveStyle(host, target, value) {\n  if (value === null || typeof value !== 'object') {\n    throw TypeError(`Style value must be an object in ${stringifyElement(target)}:`, value);\n  }\n\n  const previousMap = styleMap.get(target) || new Map();\n\n  const nextMap = Object.keys(value).reduce((map, key) => {\n    const dashKey = camelToDash(key);\n    const styleValue = value[key];\n\n    if (!styleValue && styleValue !== 0) {\n      target.style.removeProperty(dashKey);\n    } else {\n      target.style.setProperty(dashKey, styleValue);\n    }\n\n    map.set(dashKey, styleValue);\n    previousMap.delete(dashKey);\n\n    return map;\n  }, new Map());\n\n  previousMap.forEach((styleValue, key) => { target.style[key] = ''; });\n\n  styleMap.set(target, nextMap);\n}\n","import resolveEventListener from './event';\nimport resolveClassList from './class';\nimport resolveStyleList from './style';\n\nexport default function resolveProperty(attrName, propertyName, isSVG) {\n  if (propertyName.substr(0, 2) === 'on') {\n    const eventType = propertyName.substr(2);\n    return resolveEventListener(eventType);\n  }\n\n  switch (attrName) {\n    case 'class': return resolveClassList;\n    case 'style': return resolveStyleList;\n    default:\n      return (host, target, value) => {\n        if (!isSVG && !(target instanceof SVGElement) && (propertyName in target)) {\n          if (target[propertyName] !== value) {\n            target[propertyName] = value;\n          }\n        } else if (value === false || value === undefined || value === null) {\n          target.removeAttribute(attrName);\n        } else {\n          const attrValue = value === true ? '' : String(value);\n          target.setAttribute(attrName, attrValue);\n        }\n      };\n  }\n}\n","import { stringifyElement, shadyCSS, IS_IE } from '../utils';\nimport { dataMap, removeTemplate } from './utils';\n\nimport resolveValue from './resolvers/value';\nimport resolveProperty from './resolvers/property';\n\n/* istanbul ignore next */\ntry { process.env.NODE_ENV } catch(e) { var process = { env: { NODE_ENV: 'production' } }; } // eslint-disable-line\n\nconst TIMESTAMP = Date.now();\n\nexport const getPlaceholder = (id = 0) => `{{h-${TIMESTAMP}-${id}}}`;\n\nconst PLACEHOLDER_REGEXP_TEXT = getPlaceholder('(\\\\d+)');\nconst PLACEHOLDER_REGEXP_EQUAL = new RegExp(`^${PLACEHOLDER_REGEXP_TEXT}$`);\nconst PLACEHOLDER_REGEXP_ALL = new RegExp(PLACEHOLDER_REGEXP_TEXT, 'g');\n\nconst ATTR_PREFIX = `--${TIMESTAMP}--`;\nconst ATTR_REGEXP = new RegExp(ATTR_PREFIX, 'g');\n\nconst preparedTemplates = new WeakMap();\n\n/* istanbul ignore next */\nfunction applyShadyCSS(template, tagName) {\n  if (!tagName) return template;\n\n  return shadyCSS((shady) => {\n    let map = preparedTemplates.get(template);\n    if (!map) {\n      map = new Map();\n      preparedTemplates.set(template, map);\n    }\n\n    let clone = map.get(tagName);\n\n    if (!clone) {\n      clone = document.createElement('template');\n      clone.content.appendChild(template.content.cloneNode(true));\n\n      map.set(tagName, clone);\n\n      const styles = clone.content.querySelectorAll('style');\n\n      Array.from(styles).forEach((style) => {\n        const count = style.childNodes.length + 1;\n        for (let i = 0; i < count; i += 1) {\n          style.parentNode.insertBefore(document.createTextNode(getPlaceholder()), style);\n        }\n      });\n\n      shady.prepareTemplate(clone, tagName.toLowerCase());\n    }\n    return clone;\n  }, template);\n}\n\nfunction createSignature(parts, styles) {\n  let signature = parts.reduce((acc, part, index) => {\n    if (index === 0) {\n      return part;\n    }\n\n    if (parts.slice(index).join('').match(/^\\s*<\\/\\s*(table|tr|thead|tbody|tfoot|colgroup)>/)) {\n      return `${acc}<!--${getPlaceholder(index - 1)}-->${part}`;\n    }\n    return acc + getPlaceholder(index - 1) + part;\n  }, '');\n\n  if (styles) {\n    signature += `<style>\\n${styles.join('\\n/*------*/\\n')}\\n</style>`;\n  }\n\n  /* istanbul ignore if */\n  if (IS_IE) {\n    return signature.replace(\n      /style\\s*=\\s*([\"][^\"]+[\"]|['][^']+[']|[^\\s\"'<>/]+)/g,\n      (match) => `${ATTR_PREFIX}${match}`,\n    );\n  }\n\n  return signature;\n}\n\nfunction getPropertyName(string) {\n  return string.replace(/\\s*=\\s*['\"]*$/g, '').split(' ').pop();\n}\n\nfunction replaceComments(fragment) {\n  const iterator = document.createNodeIterator(fragment, NodeFilter.SHOW_COMMENT, null, false);\n  let node;\n  // eslint-disable-next-line no-cond-assign\n  while (node = iterator.nextNode()) {\n    if (PLACEHOLDER_REGEXP_EQUAL.test(node.textContent)) {\n      node.parentNode.insertBefore(document.createTextNode(node.textContent), node);\n      node.parentNode.removeChild(node);\n    }\n  }\n}\n\nexport function createInternalWalker(context) {\n  let node;\n\n  return {\n    get currentNode() { return node; },\n    nextNode() {\n      if (node === undefined) {\n        node = context.childNodes[0];\n      } else if (node.childNodes.length) {\n        node = node.childNodes[0];\n      } else if (node.nextSibling) {\n        node = node.nextSibling;\n      } else {\n        let parentNode = node.parentNode;\n        node = parentNode.nextSibling;\n\n        while (!node && parentNode !== context) {\n          parentNode = parentNode.parentNode;\n          node = parentNode.nextSibling;\n        }\n      }\n\n      return !!node;\n    },\n  };\n}\n\nfunction createExternalWalker(context) {\n  return document.createTreeWalker(\n    context,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT,\n    null,\n    false,\n  );\n}\n\n/* istanbul ignore next */\nconst createWalker = typeof window.ShadyDOM === 'object' && window.ShadyDOM.inUse ? createInternalWalker : createExternalWalker;\n\nconst container = document.createElement('div');\nexport function compileTemplate(rawParts, isSVG, styles) {\n  const template = document.createElement('template');\n  const parts = [];\n\n  let signature = createSignature(rawParts, styles);\n  if (isSVG) signature = `<svg>${signature}</svg>`;\n\n  /* istanbul ignore if */\n  if (IS_IE) {\n    template.innerHTML = signature;\n  } else {\n    container.innerHTML = `<template>${signature}</template>`;\n    template.content.appendChild(container.children[0].content);\n  }\n\n  if (isSVG) {\n    const svgRoot = template.content.firstChild;\n    template.content.removeChild(svgRoot);\n    Array.from(svgRoot.childNodes).forEach((node) => template.content.appendChild(node));\n  }\n\n  replaceComments(template.content);\n\n  const compileWalker = createWalker(template.content);\n  let compileIndex = 0;\n\n  while (compileWalker.nextNode()) {\n    const node = compileWalker.currentNode;\n\n    if (node.nodeType === Node.TEXT_NODE) {\n      const text = node.textContent;\n\n      if (!text.match(PLACEHOLDER_REGEXP_EQUAL)) {\n        const results = text.match(PLACEHOLDER_REGEXP_ALL);\n        if (results) {\n          let currentNode = node;\n          results\n            .reduce((acc, placeholder) => {\n              const [before, next] = acc.pop().split(placeholder);\n              if (before) acc.push(before);\n              acc.push(placeholder);\n              if (next) acc.push(next);\n              return acc;\n            }, [text])\n            .forEach((part, index) => {\n              if (index === 0) {\n                currentNode.textContent = part;\n              } else {\n                currentNode = currentNode.parentNode\n                  .insertBefore(document.createTextNode(part), currentNode.nextSibling);\n              }\n            });\n        }\n      }\n\n      const equal = node.textContent.match(PLACEHOLDER_REGEXP_EQUAL);\n      if (equal) {\n        /* istanbul ignore else */\n        if (!IS_IE) node.textContent = '';\n        parts[equal[1]] = [compileIndex, resolveValue];\n      }\n    } else {\n      /* istanbul ignore else */ // eslint-disable-next-line no-lonely-if\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        Array.from(node.attributes).forEach((attr) => {\n          const value = attr.value.trim();\n          /* istanbul ignore next */\n          const name = IS_IE ? attr.name.replace(ATTR_PREFIX, '') : attr.name;\n          const equal = value.match(PLACEHOLDER_REGEXP_EQUAL);\n          if (equal) {\n            const propertyName = getPropertyName(rawParts[equal[1]]);\n            parts[equal[1]] = [compileIndex, resolveProperty(name, propertyName, isSVG)];\n            node.removeAttribute(attr.name);\n          } else {\n            const results = value.match(PLACEHOLDER_REGEXP_ALL);\n            if (results) {\n              const partialName = `attr__${name}`;\n\n              results.forEach((placeholder, index) => {\n                const [, id] = placeholder.match(PLACEHOLDER_REGEXP_EQUAL);\n                parts[id] = [compileIndex, (host, target, attrValue) => {\n                  const data = dataMap.get(target, {});\n                  data[partialName] = (data[partialName] || value).replace(placeholder, attrValue == null ? '' : attrValue);\n\n                  if ((results.length === 1) || (index + 1 === results.length)) {\n                    target.setAttribute(name, data[partialName]);\n                    data[partialName] = undefined;\n                  }\n                }];\n              });\n\n              attr.value = '';\n\n              /* istanbul ignore next */\n              if (IS_IE && name !== attr.name) {\n                node.removeAttribute(attr.name);\n                node.setAttribute(name, '');\n              }\n            }\n          }\n        });\n      }\n    }\n\n    compileIndex += 1;\n  }\n\n  return function updateTemplateInstance(host, target, args) {\n    const data = dataMap.get(target, { type: 'function' });\n\n    if (template !== data.template) {\n      if (data.template || target.nodeType === Node.ELEMENT_NODE) removeTemplate(target);\n      data.prevArgs = null;\n\n      const fragment = document.importNode(applyShadyCSS(template, host.tagName).content, true);\n\n      const renderWalker = createWalker(fragment);\n      const clonedParts = parts.slice(0);\n\n      let renderIndex = 0;\n      let currentPart = clonedParts.shift();\n\n      const markers = [];\n\n      data.template = template;\n      data.markers = markers;\n\n      while (renderWalker.nextNode()) {\n        const node = renderWalker.currentNode;\n\n        if (node.nodeType === Node.TEXT_NODE) {\n          /* istanbul ignore next */\n          if (PLACEHOLDER_REGEXP_EQUAL.test(node.textContent)) {\n            node.textContent = '';\n          } else if (IS_IE) {\n            node.textContent = node.textContent.replace(ATTR_REGEXP, '');\n          }\n        } else if (process.env.NODE_ENV !== 'production' && node.nodeType === Node.ELEMENT_NODE) {\n          if (node.tagName.indexOf('-') > -1 && !customElements.get(node.tagName.toLowerCase())) {\n            throw Error(`Missing '${stringifyElement(node)}' element definition in '${stringifyElement(host)}'`);\n          }\n        }\n\n        while (currentPart && currentPart[0] === renderIndex) {\n          markers.push([node, currentPart[1]]);\n          currentPart = clonedParts.shift();\n        }\n\n        renderIndex += 1;\n      }\n\n      if (target.nodeType === Node.TEXT_NODE) {\n        data.startNode = fragment.childNodes[0];\n        data.endNode = fragment.childNodes[fragment.childNodes.length - 1];\n\n        let previousChild = target;\n\n        let child = fragment.childNodes[0];\n        while (child) {\n          target.parentNode.insertBefore(child, previousChild.nextSibling);\n          previousChild = child;\n          child = fragment.childNodes[0];\n        }\n      } else {\n        target.appendChild(fragment);\n      }\n    }\n\n    const prevArgs = data.prevArgs;\n    data.prevArgs = args;\n\n    for (let index = 0; index < data.markers.length; index += 1) {\n      const [node, marker] = data.markers[index];\n      if (!prevArgs || prevArgs[index] !== args[index]) {\n        marker(host, node, args[index], prevArgs ? prevArgs[index] : undefined);\n      }\n    }\n\n    if (target.nodeType !== Node.TEXT_NODE) {\n      shadyCSS((shady) => {\n        if (host.shadowRoot) {\n          if (prevArgs) {\n            shady.styleSubtree(host);\n          } else {\n            shady.styleElement(host);\n          }\n        }\n      });\n    }\n  };\n}\n","const setCache = new Map();\nexport function set(propertyName, value) {\n  if (!propertyName) throw Error(`Target property name missing: ${propertyName}`);\n\n  if (arguments.length === 2) {\n    return (host) => { host[propertyName] = value; };\n  }\n\n  let fn = setCache.get(propertyName);\n\n  if (!fn) {\n    fn = (host, { target }) => { host[propertyName] = target.value; };\n    setCache.set(propertyName, fn);\n  }\n\n  return fn;\n}\n\nconst promiseMap = new WeakMap();\nexport function resolve(promise, placeholder, delay = 200) {\n  return (host, target) => {\n    let timeout;\n\n    if (placeholder) {\n      timeout = setTimeout(() => {\n        timeout = undefined;\n\n        requestAnimationFrame(() => {\n          placeholder(host, target);\n        });\n      }, delay);\n    }\n\n    promiseMap.set(target, promise);\n\n    promise.then((template) => {\n      if (timeout) clearTimeout(timeout);\n\n      if (promiseMap.get(target) === promise) {\n        template(host, target);\n        promiseMap.set(target, null);\n      }\n    });\n  };\n}\n","import defineElements from '../define';\n\nimport { compileTemplate, getPlaceholder } from './core';\nimport * as helpers from './helpers';\n\nconst PLACEHOLDER = getPlaceholder();\nconst SVG_PLACEHOLDER = getPlaceholder('svg');\n\nconst templatesMap = new Map();\nconst stylesMap = new WeakMap();\n\nconst methods = {\n  define(elements) {\n    defineElements(elements);\n    return this;\n  },\n  key(id) {\n    this.id = id;\n    return this;\n  },\n  style(...styles) {\n    stylesMap.set(this, styles);\n    return this;\n  },\n};\n\nfunction create(parts, args, isSVG) {\n  const createTemplate = (host, target = host) => {\n    const styles = stylesMap.get(createTemplate);\n    let id = parts.join(PLACEHOLDER);\n    if (styles) id += styles.join(PLACEHOLDER);\n    if (isSVG) id += SVG_PLACEHOLDER;\n\n    let render = templatesMap.get(id);\n    if (!render) {\n      render = compileTemplate(parts, isSVG, styles);\n      templatesMap.set(id, render);\n    }\n\n    render(host, target, args);\n  };\n\n  return Object.assign(createTemplate, methods);\n}\n\nexport function html(parts, ...args) {\n  return create(parts, args);\n}\n\nexport function svg(parts, ...args) {\n  return create(parts, args, true);\n}\n\nObject.assign(html, helpers);\nObject.assign(svg, helpers);\n","export { default as define } from './define';\nexport { default as property } from './property';\nexport { default as parent } from './parent';\nexport { default as children } from './children';\nexport { default as render } from './render';\n\nexport { dispatch } from './utils';\n\nexport { html, svg } from './template';\n","module.exports = \":host{display:block;width:100%;height:100%;position:relative;background-color:hsla(0,0%,100%,.8)}::-webkit-scrollbar{display:none}.xterm{width:fit-content;font-feature-settings:\\\"liga\\\" 0;position:relative;user-select:none;-ms-user-select:none;-webkit-user-select:none;transform:translate(-50%,-50%);position:absolute;left:50%;top:50%}.xterm.focus,.xterm:focus{outline:none}.xterm .xterm-helpers{position:absolute;top:0;z-index:5}.xterm .xterm-helper-textarea{position:absolute;opacity:0;left:-9999em;top:0;width:0;height:0;z-index:-5;white-space:nowrap;overflow:hidden;resize:none}.xterm .composition-view{background:#000;color:#fff;display:none;position:absolute;white-space:nowrap;z-index:1}.xterm .composition-view.active{display:block}.xterm .xterm-viewport{background-color:#000;overflow-y:scroll;cursor:default;position:absolute;right:0;left:0;top:0;bottom:0}.xterm .xterm-screen{position:relative}.xterm .xterm-screen canvas{position:absolute;left:0;top:0}.xterm .xterm-scroll-area{visibility:hidden}.xterm-char-measure-element{display:inline-block;visibility:hidden;position:absolute;top:0;left:-9999em;line-height:normal}.xterm{cursor:text}.xterm.enable-mouse-events{cursor:default}.xterm.xterm-cursor-pointer{cursor:pointer}.xterm.column-select.focus{cursor:crosshair}.xterm .xterm-accessibility,.xterm .xterm-message{position:absolute;left:0;top:0;bottom:0;right:0;z-index:10;color:transparent}.xterm .live-region{position:absolute;left:-9999px;width:1px;height:1px;overflow:hidden}.xterm-dim{opacity:.5}.xterm-underline{text-decoration:underline}\"","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: any;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n\n  // TODO: Move resize event here\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): {[event: string]: boolean};\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: any;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n   triggerBinaryEvent(data: string): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: any;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IConstructorSignature0<T> {\n  new(...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n  new(first: A1, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n  new(first: A1, second: A2, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n  new(first: A1, second: A2, third: A3, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n\n  createInstance<T>(ctor: IConstructorSignature0<T>): T;\n  createInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n  createInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n  createInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n  createInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n  createInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n  createInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: any;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: any;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n}\n\nexport interface ITerminalOptions {\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  screenKeys: boolean;\n  termName: string;\n  useFlowControl: boolean;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T> {\n  (e: T): void;\n}\n\nexport interface IEvent<T> {\n  (listener: (e: T) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T> {\n  event: IEvent<T>;\n  fire(data: T): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T> implements IEventEmitter<T> {\n  private _listeners: IListener<T>[] = [];\n  private _event?: IEvent<T>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T> {\n    if (!this._event) {\n      this._event = (listener: (e: T) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(data: T): void {\n    const queue: IListener<T>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, data);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: any;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: any;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: any;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: any;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: any;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRedrawRequest: IEvent<ISelectionRedrawRequestEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: any;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\nexport function blend(bg: IColor, fg: IColor): IColor {\n  const a = (fg.rgba & 0xFF) / 255;\n  if (a === 1) {\n    return {\n      css: fg.css,\n      rgba: fg.rgba\n    };\n  }\n  const fgR = (fg.rgba >> 24) & 0xFF;\n  const fgG = (fg.rgba >> 16) & 0xFF;\n  const fgB = (fg.rgba >> 8) & 0xFF;\n  const bgR = (bg.rgba >> 24) & 0xFF;\n  const bgG = (bg.rgba >> 16) & 0xFF;\n  const bgB = (bg.rgba >> 8) & 0xFF;\n  const r = bgR + Math.round((fgR - bgR) * a);\n  const g = bgG + Math.round((fgG - bgG) * a);\n  const b = bgB + Math.round((fgB - bgB) * a);\n  const css = toCss(r, g, b);\n  const rgba = toRgba(r, g, b);\n  return { css, rgba };\n}\n\nexport function fromCss(css: string): IColor {\n  return {\n    css,\n    rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n  };\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\nexport function toCss(r: number, g: number, b: number, a?: number): string {\n  if (a !== undefined) {\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n  }\n  return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n}\n\nexport function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n  // >>> 0 forces an unsigned int\n  return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n}\n\nexport function fromRgba(value: number): [number, number, number, number] {\n  return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n}\n\nexport function opaque(color: IColor): IColor {\n  const rgba = (color.rgba | 0xFF) >>> 0;\n  const [r, g, b] = fromRgba(rgba);\n  return {\n    css: toCss(r, g, b),\n    rgba\n  };\n}\n\n/**\n * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n * between two colors.\n * @param rgb The color to use.\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function rgbRelativeLuminance(rgb: number): number {\n  return rgbRelativeLuminance2(\n    (rgb >> 16) & 0xFF,\n    (rgb >> 8 ) & 0xFF,\n    (rgb      ) & 0xFF);\n}\n\n/**\n * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n * between two colors.\n * @param r The red channel (0x00 to 0xFF).\n * @param g The green channel (0x00 to 0xFF).\n * @param b The blue channel (0x00 to 0xFF).\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function rgbRelativeLuminance2(r: number, g: number, b: number): number {\n  const rs = r / 255;\n  const gs = g / 255;\n  const bs = b / 255;\n  const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n  const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n  const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n  return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n\nexport function rgbaToColor(r: number, g: number, b: number): IColor {\n  return {\n    css: toCss(r, g, b),\n    rgba: toRgba(r, g, b)\n  };\n}\n\nexport function ensureContrastRatioRgba(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n  const bgL = rgbRelativeLuminance(bgRgba >> 8);\n  const fgL = rgbRelativeLuminance(fgRgba >> 8);\n  const cr = contrastRatio(bgL, fgL);\n  if (cr < ratio) {\n    if (fgL < bgL) {\n      return reduceLuminance(bgRgba, fgRgba, ratio);\n    }\n    return increaseLuminance(bgRgba, fgRgba, ratio);\n  }\n  return undefined;\n}\n\nexport function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n  const result = ensureContrastRatioRgba(bg.rgba, fg.rgba, ratio);\n  if (!result) {\n    return undefined;\n  }\n  return rgbaToColor(\n    (result >> 24 & 0xFF),\n    (result >> 16 & 0xFF),\n    (result >> 8  & 0xFF)\n  );\n}\n\nexport function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n  // This is a naive but fast approach to reducing luminance as converting to\n  // HSL and back is expensive\n  const bgR = (bgRgba >> 24) & 0xFF;\n  const bgG = (bgRgba >> 16) & 0xFF;\n  const bgB = (bgRgba >>  8) & 0xFF;\n  let fgR = (fgRgba >> 24) & 0xFF;\n  let fgG = (fgRgba >> 16) & 0xFF;\n  let fgB = (fgRgba >>  8) & 0xFF;\n  let cr = contrastRatio(rgbRelativeLuminance2(fgR, fgB, fgG), rgbRelativeLuminance2(bgR, bgG, bgB));\n  while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n    // Reduce by 10% until the ratio is hit\n    fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n    fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n    fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n    cr = contrastRatio(rgbRelativeLuminance2(fgR, fgB, fgG), rgbRelativeLuminance2(bgR, bgG, bgB));\n  }\n  return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n}\n\nexport function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n  // This is a naive but fast approach to increasing luminance as converting to\n  // HSL and back is expensive\n  const bgR = (bgRgba >> 24) & 0xFF;\n  const bgG = (bgRgba >> 16) & 0xFF;\n  const bgB = (bgRgba >>  8) & 0xFF;\n  let fgR = (fgRgba >> 24) & 0xFF;\n  let fgG = (fgRgba >> 16) & 0xFF;\n  let fgB = (fgRgba >>  8) & 0xFF;\n  let cr = contrastRatio(rgbRelativeLuminance2(fgR, fgB, fgG), rgbRelativeLuminance2(bgR, bgG, bgB));\n  while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n    // Increase by 10% until the ratio is hit\n    fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n    fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n    fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n    cr = contrastRatio(rgbRelativeLuminance2(fgR, fgB, fgG), rgbRelativeLuminance2(bgR, bgG, bgB));\n  }\n  return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { toCss, ensureContrastRatioRgba, opaque } from 'browser/Color';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        this._bufferService.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = ensureContrastRatioRgba(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator = <any>function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData): void {\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n  // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n  // combining characters\n  const COMBINING_BMP = [\n    [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n    [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n    [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n    [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n    [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n    [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n    [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n    [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n    [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n    [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n    [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n    [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n    [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n    [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n    [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n    [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n    [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n    [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n    [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n    [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n    [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n    [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n    [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n    [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n    [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n    [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n    [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n    [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n    [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n    [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n    [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n    [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n    [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n    [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n    [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n    [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n    [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n    [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n    [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n    [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n    [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n    [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n    [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n  ];\n  const COMBINING_HIGH = [\n    [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n    [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n    [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n    [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n    [0xE0100, 0xE01EF]\n  ];\n  // binary search\n  function bisearch(ucs: number, data: number[][]): boolean {\n    let min = 0;\n    let max = data.length - 1;\n    let mid;\n    if (ucs < data[0][0] || ucs > data[max][1]) {\n      return false;\n    }\n    while (max >= min) {\n      mid = (min + max) >> 1;\n      if (ucs > data[mid][1]) {\n        min = mid + 1;\n      } else if (ucs < data[mid][0]) {\n        max = mid - 1;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n    if (bisearch(ucs, COMBINING_HIGH)) {\n      return 0;\n    }\n    if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n      return 2;\n    }\n    return 1;\n  }\n  const control = opts.control | 0;\n\n  // create lookup table for BMP plane\n  const table = new Uint8Array(65536);\n  fill(table, 1);\n  table[0] = opts.nul;\n  // control chars\n  fill(table, opts.control, 1, 32);\n  fill(table, opts.control, 0x7f, 0xa0);\n\n  // apply wide char rules first\n  // wide chars\n  fill(table, 2, 0x1100, 0x1160);\n  table[0x2329] = 2;\n  table[0x232a] = 2;\n  fill(table, 2, 0x2e80, 0xa4d0);\n  table[0x303f] = 1;  // wrongly in last line\n\n  fill(table, 2, 0xac00, 0xd7a4);\n  fill(table, 2, 0xf900, 0xfb00);\n  fill(table, 2, 0xfe10, 0xfe1a);\n  fill(table, 2, 0xfe30, 0xfe70);\n  fill(table, 2, 0xff00, 0xff61);\n  fill(table, 2, 0xffe0, 0xffe7);\n\n  // apply combining last to ensure we overwrite\n  // wrongly wide set chars:\n  //    the original algo evals combining first and falls\n  //    through to wide check so we simply do here the opposite\n  // combining 0\n  for (let r = 0; r < COMBINING_BMP.length; ++r) {\n    fill(table, 0, COMBINING_BMP[r][0], COMBINING_BMP[r][1] + 1);\n  }\n\n  return function (num: number): number {\n    if (num < 32) {\n      return control | 0;\n    }\n    if (num < 127) {\n      return 1;\n    }\n    if (num < 65536) {\n      return table[num];\n    }\n    // do a full search for high codepoints\n    return wcwidthHigh(num);\n  };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    let code = s.charCodeAt(i);\n    // surrogate pair first\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (++i >= length) {\n        // this should not happen with strings retrieved from\n        // Buffer.translateToString as it converts from UTF-32\n        // and therefore always should contain the second part\n        // for any other string we still have to handle it somehow:\n        // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n        return result + wcwidth(code);\n      }\n      const second = s.charCodeAt(i);\n      // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n      // otherwise treat them independently (UCS-2 behavior)\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        result += wcwidth(second);\n      }\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params ? this._params : new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { fromCss, toCss, blend, toRgba, toPaddedHex } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = fromCss('#ffffff');\nconst DEFAULT_BACKGROUND = fromCss('#000000');\nconst DEFAULT_CURSOR = fromCss('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = fromCss('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    fromCss('#2e3436'),\n    fromCss('#cc0000'),\n    fromCss('#4e9a06'),\n    fromCss('#c4a000'),\n    fromCss('#3465a4'),\n    fromCss('#75507b'),\n    fromCss('#06989a'),\n    fromCss('#d3d7cf'),\n    // bright:\n    fromCss('#555753'),\n    fromCss('#ef2929'),\n    fromCss('#8ae234'),\n    fromCss('#fce94f'),\n    fromCss('#729fcf'),\n    fromCss('#ad7fa8'),\n    fromCss('#34e2e2'),\n    fromCss('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: toCss(r, g, b),\n      rgba: toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: toCss(c, c, c),\n      rgba: toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})();\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      selectionOpaque: blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = blend(this.colors.background, this.colors.selection);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n      let r: number;\n      let g: number;\n      let b: number;\n      let a: number;\n      let rgba: number;\n      if (css.length === 5) {\n        const num = parseInt(css.substr(1), 16);\n        r = ((num >> 12) & 0xF) * 16;\n        g = ((num >> 8) & 0xF) * 16;\n        b = ((num >> 4) & 0xF) * 16;\n        a = (num & 0xF) * 16;\n        rgba = toRgba(r, g, b, a);\n      } else {\n        rgba = parseInt(css.substr(1), 16);\n        r = (rgba >> 24) & 0xFF;\n        g = (rgba >> 16) & 0xFF;\n        b = (rgba >>  8) & 0xFF;\n        a = (rgba      ) & 0xFF;\n      }\n\n      return {\n        rgba,\n        css: toCss(r, g, b, a)\n      };\n    }\n\n    return {\n      css,\n      rgba: toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine } from 'common/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferApi { return new BufferApiView(this._core.buffer); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(private _buffer: IBuffer) {}\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) {}\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public getCell(x: number): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n    return new BufferCellApiView(this._line, x);\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass BufferCellApiView implements IBufferCellApi {\n  constructor(private _line: IBufferLine, private _x: number) {}\n  public get char(): string { return this._line.getString(this._x); }\n  public get width(): number { return this._line.getWidth(this._x); }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) {}\n\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, CustomKeyEventHandler } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, ICharset, IBufferLine, IAttributeData, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { handleWindowsModeLineFeed } from 'common/WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreMouseService, ICoreService, ILogService, IDirtyRowService, IInstantiationService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { LogService } from 'common/services/LogService';\nimport { ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport } from 'browser/Types';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  /**\n   * The HTMLElement that the terminal is created in, set by Terminal.open.\n   */\n  private _parent: HTMLElement | null;\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  private _coreMouseService: ICoreMouseService;\n  private _dirtyRowService: IDirtyRowService;\n  private _instantiationService: IInstantiationService;\n  private _logService: ILogService;\n  public optionsService: IOptionsService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public applicationKeypad: boolean;\n  public originMode: boolean;\n  public insertMode: boolean;\n  public wraparoundMode: boolean; // defaults: xterm - true, vt100 - false\n  public bracketedPasteMode: boolean;\n\n  // charset\n  // The current charset\n  public charset: ICharset;\n  public gcharset: number;\n  public glevel: number;\n  public charsets: ICharset[];\n\n  // mouse properties\n  public mouseEvents: CoreMouseEventType = CoreMouseEventType.NONE;\n  public sendFocus: boolean;\n\n  // misc\n  public savedCols: number;\n\n  public curAttrData: IAttributeData;\n  private _eraseAttrData: IAttributeData;\n\n  public params: (string | number)[];\n  public currentParam: string | number;\n\n  // write buffer\n  private _writeBuffer: WriteBuffer;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this._instantiationService.createInstance(BufferService);\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this._instantiationService.createInstance(CoreService, () => this.scrollToBottom());\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreService.onData(e => this._onData.fire(e));\n    this._coreService.onBinary(e => this._onBinary.fire(e));\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n\n    this._setupOptionsListeners();\n    this._setup();\n\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n    this._renderService?.dispose();\n    this._customKeyEventHandler = null;\n    this.write = () => {};\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  private _setup(): void {\n    this._parent = document ? document.body : null;\n\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.applicationKeypad = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true; // defaults: xterm - true, vt100 - false\n    this.bracketedPasteMode = false;\n\n    // charset\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    // TODO: Can this be just []?\n    this.charsets = [null];\n\n    this.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrData = DEFAULT_ATTR_DATA.clone();\n\n    this.params = [];\n    this.currentParam = 0;\n\n    this._userScrolling = false;\n\n    // Register input handler and refire/handle events\n    this._inputHandler = new InputHandler(this, this._bufferService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService);\n    this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n    this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n    this.register(this._inputHandler);\n\n    this.linkifier = this.linkifier || new Linkifier(this._bufferService, this._logService);\n\n    if (this.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  private _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      this._windowsMode = this.onLineFeed(handleWindowsModeLineFeed.bind(null, this._bufferService));\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  public eraseAttrData(): IAttributeData {\n    this._eraseAttrData.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrData.bg |= this.curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrData;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          this._renderService?.clear();\n          this._charSizeService?.measure();\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n        case 'minimumContrastRatio':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n            this._renderService.onResize(this.cols, this.rows);\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          this.viewport?.syncScrollArea();\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n            }\n          } else {\n            this._accessibilityManager?.dispose();\n            this._accessibilityManager = null;\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            this._enableWindowsMode();\n          } else {\n            this._windowsMode?.dispose();\n            this._windowsMode = undefined;\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => handlePasteEvent(event, this.textarea, this.bracketedPasteMode, this._coreService);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    this._parent = parent || this._parent;\n\n    if (!this._parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!document.body.contains(parent)) {\n      this._logService.warn('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = this._parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this._parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this.options.theme = undefined;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.optionsService.onOptionChange(e => this._colorManager.onOptionsChange(e));\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement);\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = this._instantiationService.createInstance(SelectionService,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element,\n      this.screenElement);\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager.colors, this.screenElement, this.linkifier);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager.colors, this.element, this.screenElement, this._viewportElement, this.linkifier);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      let pos;\n\n      // get mouse coordinates\n      pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n                  ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                  ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: {[key: string]: ((ev: Event) => void) | null} = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: {[key: string]: (ev: Event) => void} = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n          if (requestedEvents.mousedrag) {\n            this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      this.mouseEvents = events;\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element.classList.add('enable-mouse-events');\n        this._selectionService.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element.classList.remove('enable-mouse-events');\n        this._selectionService.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel);\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    });\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      if (!this.viewport.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    const eraseAttr = this.eraseAttrData();\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(this.buffer.scrollTop, this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea, this.bracketedPasteMode, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  /**\n   * Set the G level of the terminal\n   * @param g\n   */\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  /**\n   * Set the charset for the given G level of the terminal\n   * @param g\n   * @param charset\n   */\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport.syncScrollArea(true);\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const inputHandler = this._inputHandler;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._inputHandler = inputHandler;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n        (amount > 0 &&  scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n        (modifier === 'ctrl' && ev.ctrlKey) ||\n        (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, bracketedPasteMode, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = '';\n    textarea.style.width = '';\n    textarea.style.height = '';\n    textarea.style.left = '';\n    textarea.style.top = '';\n    textarea.style.zIndex = '';\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { wcwidth } from 'common/CharWidth';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable } from 'common/Types';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n    protected _terminal: IInputHandlingTerminal,\n    private readonly _bufferService: IBufferService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => this.setTitle(data)));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.reset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    this._dirtyRowService.clearRange();\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._terminal.refresh(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._terminal.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._terminal.wraparoundMode;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._terminal.curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._dirtyRowService.markDirty(buffer.y);\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      // FIXME: additionally ensure chWidth fits into a line\n      //   -->  maybe forbid cols<xy at higher level as it would\n      //        introduce a bad runtime penalty here\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._terminal.scroll(true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._terminal.bell();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll();\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    this._restrictCursor();\n    if (this._bufferService.buffer.x > 0) {\n      this._bufferService.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._terminal.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._terminal.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(): void {\n    this._bufferService.buffer.x = Math.min(this._bufferService.cols - 1, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._terminal.originMode\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._terminal.originMode) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * Currently same functionality as CUF.\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.fill(this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   */\n  public scrollLeft(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(0, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   */\n  public scrollRight(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.insertCells(0, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   */\n  public insertColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y);\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   */\n  public deleteColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._terminal.is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._terminal.is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._terminal.is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._terminal.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._terminal.setgCharset(0, DEFAULT_CHARSET);\n          this._terminal.setgCharset(1, DEFAULT_CHARSET);\n          this._terminal.setgCharset(2, DEFAULT_CHARSET);\n          this._terminal.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          // TODO: move DECCOLM into compat addon\n          this._terminal.savedCols = this._bufferService.cols;\n          this._terminal.resize(132, this._bufferService.rows);\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._terminal.applicationKeypad = true;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._terminal.eraseAttrData());\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          // TODO: move DECCOLM into compat addon\n          // Note: This impl currently does not enforce col 80, instead reverts\n          // to previous terminal width before entering DECCOLM 132\n          if (this._bufferService.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._bufferService.rows);\n          }\n          delete this._terminal.savedCols;\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._terminal.applicationKeypad = false;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n        this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._terminal.curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._terminal.curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._terminal.curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) {\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: IParams): void {\n    this._coreService.isCursorHidden = false;\n    this._terminal.insertMode = false;\n    this._terminal.originMode = false;\n    this._terminal.wraparoundMode = true;  // defaults: xterm - true, vt100 - false\n    this._terminal.applicationKeypad = false; // ?\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n    this._coreService.decPrivateModes.applicationCursorKeys = false;\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._terminal.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._bufferService.buffer.x = this._bufferService.buffer.y = 0; // ?\n    this._terminal.charset = null;\n    this._terminal.glevel = 0; // ??\n    this._terminal.charsets = [null]; // ??\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._terminal.curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._terminal.curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._terminal.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._terminal.curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._terminal.curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._terminal.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._terminal.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._terminal.applicationKeypad = true;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._terminal.applicationKeypad = false;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._terminal.setgLevel(0);\n    this._terminal.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._terminal.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll();\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.y + buffer.ybase, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.y + buffer.ybase, buffer.getBlankLine(this._terminal.eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public reset(): void {\n    this._parser.reset();\n    this._terminal.reset();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._terminal.setgLevel(level);  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * TODO: move DECALN into compat addon\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._terminal.curAttrData.fg;\n    cell.bg = this._terminal.curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.y + buffer.ybase + yOffset;\n      buffer.lines.get(row).fill(cell);\n      buffer.lines.get(row).isWrapped = false;\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number) => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this.TRANSITIONS.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService readonly coreService: ICoreService,\n    @ICoreBrowserService readonly coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(this._bufferService);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, this._bufferService, _optionsService),\n      new SelectionRenderLayer(this._screenElement, 1, this._colors, this._id, this._bufferService, _optionsService),\n      new LinkRenderLayer(this._screenElement, 2, this._colors, this._id, this._linkifier, this._bufferService, _optionsService),\n      new CursorRenderLayer(this._screenElement, 3, this._colors, this._id, this._onRequestRefreshRows, this._bufferService, _optionsService, coreService, coreBrowserService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._colors);\n      l.reset();\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this.dimensions));\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { opaque } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return opaque(this._config.colors.background);\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRefreshRowsEvent>,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(this._bufferService.buffer.x, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = this._bufferService.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === this._bufferService.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = this._bufferService.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onLinkHover(e => this._onLinkHover(e));\n    linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { getStringCellWidth } from 'common/CharWidth';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected readonly _bufferService: IBufferService,\n    private readonly _logService: ILogService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  serviceBrand: any;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey && this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /*' '*/) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  return moveHorizontallyOnly(startX, startY, targetX, targetY, bufferService, applicationCursor);\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  serviceBrand: any;\n\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService } from 'common/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { opaque } from 'browser/Color';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.removeChild(this._rowContainer);\n    this._screenElement.removeChild(this._selectionContainer);\n    this._screenElement.removeChild(this._themeStyleElement);\n    this._screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this._colors.foreground.css};` +\n        ` background-color: ${this._colors.background.css};` +\n        ` font-family: ${this._optionsService.options.fontFamily};` +\n        ` font-size: ${this._optionsService.options.fontSize}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._optionsService.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Blink animation\n    styles +=\n        `@keyframes blink_box_shadow {` +\n        ` 50% {` +\n        `  box-shadow: none;` +\n        ` }` +\n        `}`;\n    styles +=\n        `@keyframes blink_block {` +\n        ` 0% {` +\n        `  background-color: ${this._colors.cursor.css};` +\n        `  color: ${this._colors.cursorAccent.css};` +\n        ` }` +\n        ` 50% {` +\n        `  background-color: ${this._colors.cursorAccent.css};` +\n        `  color: ${this._colors.cursor.css};` +\n        ` }` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` outline: 1px solid ${this._colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n        ` animation: blink_box_shadow 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` animation: blink_block 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this._colors.cursor.css};` +\n        ` color: ${this._colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: 1px 0 0 ${this._colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this._colors.selection.css};` +\n        `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${opaque(this._colors.background).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = this._bufferService.buffer.x;\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { ensureContrastRatio, rgbaToColor } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _optionsService: IOptionsService,\n    private _colors: IColorSet\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n\n      let fg = this._workCell.getFgColor();\n      let fgColorMode = this._workCell.getFgColorMode();\n      let bg = this._workCell.getBgColor();\n      let bgColorMode = this._workCell.getBgColorMode();\n      const isInverse = !!this._workCell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (this._workCell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgbaToColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function handleWindowsModeLineFeed(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  serviceBrand: any;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    readonly screenElement: HTMLElement,\n    @IOptionsService readonly optionsService: IOptionsService,\n    @ICharSizeService readonly charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    this._renderer.dispose();\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowsMode: false,\n\n  convertEol: false,\n  termName: 'xterm',\n  screenKeys: false,\n  cancelEvents: false,\n  useFlowControl: false,\n  wordSeparator: ' ()[]{}\\',:;\"`'\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  serviceBrand: any;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    readonly document: Document,\n    readonly parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | null = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  serviceBrand: any;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false\n});\n\nexport class CoreService implements ICoreService {\n  serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  get<T>(id: IServiceIdentifier<T>): T {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): any {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return <T>new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    Object.keys(DEFAULT_PROTOCOLS).forEach(name => this.addProtocol(name, DEFAULT_PROTOCOLS[name]));\n    Object.keys(DEFAULT_ENCODINGS).forEach(name => this.addEncoding(name, DEFAULT_ENCODINGS[name]));\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      DOWN: !!(events & CoreMouseEventType.DOWN),\n      UP: !!(events & CoreMouseEventType.UP),\n      DRAG: !!(events & CoreMouseEventType.DRAG),\n      MOVE: !!(events & CoreMouseEventType.MOVE),\n      WHEEL: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  serviceBrand: any;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","import css from \"./xterm.css\"\n\nimport { Terminal } from 'xterm';\n\nimport { html, Hybrids, Descriptor, render, property } from 'hybrids';\n\nexport interface XTerm extends HTMLElement {\n  terminal?: Terminal;\n  fit?: (dim?: [number, number]) => void;\n  render: () => ShadowRoot;\n}\n\nfunction getCellSize(term: Terminal): [number, number] {\n  const dimensions = (term as any)._core._renderService.dimensions;\n  return [dimensions.actualCellWidth, dimensions.actualCellHeight];\n}\n\nexport default {\n  terminalHook: {\n    connect(host) {\n      const term = new Terminal({\n        fontFamily: \"Unifont\",\n        fontSize: 16,\n        allowTransparency: true,\n        cursorStyle: \"block\",\n        logLevel: \"error\",\n        theme: {\n          foreground: \"black\",\n          background: \"rgba(255, 255, 255, 0.8)\",\n          cursor: \"black\",\n          cursorAccent: \"black\",\n          selection: \"rgba(0, 0, 0, 0.8)\",\n          black: \"#000000\",\n          brightBlack: \"#191919\",\n          red: \"#683c39\",\n          brightRed: \"#a6605b\",\n          green: \"#39683c\",\n          brightGreen: \"#5ba660\",\n          yellow: \"#656839\",\n          brightYellow: \"#a1a65b\",\n          blue: \"#3c3968\",\n          brightBlue: \"#605ba6\",\n          magenta: \"#683965\",\n          brightMagenta: \"#a65ba1\",\n          cyan: \"#396568\",\n          brightCyan: \"#5ba1a6\",\n          white: \"#b9b9b9\",\n          brightWhite: \"#ffffff\"\n        }\n      });\n      term.open(host.render() as any);\n      host.fit = dim => {\n        const [hw, hh] = dim ?? [host.offsetWidth, host.offsetHeight];\n        if (hw == 0 || hh == 0) return;\n        const [cw, ch] = getCellSize(term);\n        const [tw, th] = [hw / cw | 0, hh / ch | 0];\n        term.resize(tw, th);\n      }\n      host.terminal = term;\n      const observer = new ResizeObserver(([{ contentRect: {width, height} }]) => {\n        host.fit([width, height]);\n      });\n      observer.observe(host);\n      return () => {\n        observer.disconnect();\n        term.dispose();\n      }\n    }\n  } as Descriptor<XTerm>,\n  render: render(() => html``.style(css))\n} as Hybrids<XTerm>;","module.exports = \":host{display:flex;margin:8px 0;box-sizing:border-box;border:2px solid #757575;width:auto;height:fit-content;font-family:Unifont;position:relative;border-radius:8px;background-color:hsla(0,0%,100%,.8)}:host(:focus-within){border:2px solid #000;background-color:#fff}:host(:focus-within)>span{top:-12px!important;color:#000!important;background-color:#fff!important;box-shadow:inset 0 0 0 2px #000!important}span.empty{top:6px;background-color:transparent;box-shadow:inset 0 0 0 0 #000}span{position:absolute;background-color:#fff;box-shadow:inset 0 0 0 2px #757575;border-radius:20px;color:#757575;user-select:none;pointer-events:none;top:-12px;left:6px;padding:0 4px;transition:top .2s ease}::slotted(input){border:none;background:none;flex:1;margin:0;font-family:Unifont;font-size:16px;padding:6px 0;text-indent:10px}::slotted(input:focus){outline:none}\"","import HybridsElement from \"../hybrids-element\";\nimport { property, render, html, Hybrids, Descriptor } from \"hybrids\";\nimport css from './input-wrapper.css';\n\ninterface InputWrapper extends HybridsElement {\n  label: string;\n  _empty?: boolean;\n  empty: boolean;\n  value: string;\n}\n\nfunction isInput(target: EventTarget): target is HTMLInputElement {\n  return \"tagName\" in target && (target as any).tagName == \"INPUT\";\n}\n\nexport default {\n  label: property(\"label\"),\n  value: {\n    observe(host, value: string) {\n      console.log(value);\n      const input = host.getElementsByTagName(\"input\")[0]\n      if (input) {\n        host._empty = value === '';\n        input.value = value;\n      }\n    }\n  },\n  empty: {\n    get(host) { return host._empty == undefined ? true : host._empty; },\n    connect(host, key, invalidate) {\n      host.addEventListener(\"input\", ev => {\n        ev.stopPropagation();\n        const target = ev.target;\n        if (isInput(target)) {\n          const result = target.value.length == 0;\n          if (result != host._empty) {\n            host._empty = result;\n            invalidate();\n          }\n        }\n      });\n      return () => { }\n    }\n  } as Descriptor<InputWrapper>,\n  render: render(({ label, empty }) => html`\n    <span class=${{ empty }}>${label}</span>\n    <slot></slot>\n  `.style(css))\n} as Hybrids<InputWrapper>","module.exports = \":host{display:contents}::slotted(button){font-family:Unifont;font-size:16px;background-color:#fff;border:2px solid #000;border-radius:0;box-sizing:border-box;padding:6px 8px;margin:8px 0;border-radius:8px}::slotted(button:focus){outline:none}\"","import { render, html, Hybrids } from \"hybrids\";\n\nimport css from \"./button-wrapper.css\"\n\nexport default {\n  render: render(() => html`<slot></slot>`.style(css))\n} as Hybrids<HTMLElement>","var formDataEntries\n\nif (typeof FormData === 'function' && 'entries' in FormData.prototype) {\n  formDataEntries = function(form) {\n    return Array.from(new FormData(form).entries())\n  }\n} else {\n  formDataEntries = function(form) {\n    var entries = []\n\n    var elements = form.elements\n    for (var i = 0; i < elements.length; i++) {\n      var el = elements[i]\n      var tagName = el.tagName.toUpperCase()\n\n      if (tagName === 'SELECT' || tagName === 'TEXTAREA' || tagName === 'INPUT') {\n        var type = el.type,\n          name = el.name\n\n        if (\n          name &&\n          !el.disabled &&\n          type !== 'submit' &&\n          type !== 'reset' &&\n          type !== 'button' &&\n          ((type !== 'radio' && type !== 'checkbox') || el.checked)\n        ) {\n          if (tagName === 'SELECT') {\n            var options = el.getElementsByTagName('option')\n            for (var j = 0; j < options.length; j++) {\n              var option = options[j]\n              if (option.selected) {\n                entries.push([name, option.value])\n              }\n            }\n          } else if (type === 'file') {\n            // eslint-disable-next-line no-console\n            console.warn('form-data-entries could not serialize <input type=file>', el)\n            entries.push([name, ''])\n          } else {\n            entries.push([name, el.value])\n          }\n        }\n      }\n    }\n\n    return entries\n  }\n}\n\nexport default formDataEntries\n","module.exports = \":host{display:flex;align-self:center;margin-top:auto;margin-bottom:auto;overflow:hidden;padding:8px 0;position:relative}@keyframes show{0%{max-height:0;padding-top:0;padding-bottom:0;border-radius:0}to{max-height:200px}}form{width:300px;display:flex;flex-direction:column;padding:16px 24px;border:2px solid #000;border-right:none;border-left:none;overflow:hidden;border-radius:16px;animation:show .5s ease-in;background-color:hsla(0,0%,100%,.4);backdrop-filter:blur(10px)}#title{font-family:Unifont;position:absolute;left:50%;top:0;padding:2px 8px;transform:translateX(-50%);background-color:#fff;box-shadow:inset 0 0 0 2px #000;border-radius:16px;z-index:1}\"","import { Hybrids, render, html, dispatch, property } from \"hybrids\";\nimport HybridsElement from \"~hybrids-element\";\nimport InputWrapper from \"./input-wrapper\";\nimport ButtonWrapper from \"./button-wrapper\";\nimport FormDataEntries from \"form-data-entries\";\n\nimport css from \"./login-panel.css\";\n\ninterface LoginPanel extends HybridsElement {\n  loginInit: Record<\"address\" | \"label\", string> | undefined;\n}\n\nfunction HandleSubmit(host: LoginPanel, event: Event) {\n  event.preventDefault()\n  const data = Object.fromEntries(FormDataEntries(event.target as HTMLFormElement));\n  dispatch(host, \"submit\", { detail: data });\n}\n\nexport default {\n  loginInit: property(undefined),\n  render: render(({ loginInit }) => html`\n    <span id=\"title\">Login</span>\n    <form onsubmit=${HandleSubmit}>\n      <input-wrapper label=\"label\" value=${loginInit?.label}>\n        <input type=\"text\" name=\"label\" required spellcheck=\"false\"  >\n      </input-wrapper>\n      <input-wrapper label=\"address\" value=${loginInit?.address}>\n        <input type=\"url\" name=\"address\" required spellcheck=\"false\" pattern=\"wss?://.+\" >\n      </input-wrapper>\n      <button-wrapper><button type=\"submit\">Submit</button></button-wrapper>\n    </form>\n  `.style(css).define({ InputWrapper, ButtonWrapper }))\n} as Hybrids<LoginPanel>","export class Preloader {\n  private map: Map<string, Blob>;\n  private tasks: Promise<void>[];\n  constructor() {\n    this.map = new Map();\n    this.tasks = [];\n  }\n\n  preload(key: string, address: string) {\n    this.tasks.push(\n      (async () => {\n        try {\n          const data = await fetch(address);\n          const blob = await data.blob();\n          this.map.set(key, blob);\n        } catch (err) {\n          console.error(\"Failed to load %s from %s\", key, address);\n          throw err;\n        }\n      })()\n    );\n  }\n\n  preloadFont(font: FontFace) {\n    this.tasks.push(\n      (async () => {\n        try {\n          await font.load();\n          document.fonts.add(font);\n        } catch (err) {\n          console.error(\"Failed to load font %s\", font.family);\n          throw err;\n        }\n      })()\n    );\n  }\n\n  async wait(): Promise<{ readonly [key: string]: string }> {\n    await Promise.all(this.tasks);\n    const ret = {} as { [key: string]: string };\n    this.map.forEach((v, k) => { ret[k] = URL.createObjectURL(v); })\n    return Object.freeze(ret);\n  }\n\n  get(key: string): Blob | void {\n    return this.map.get(key);\n  }\n}","module.exports = \"body{display:flex;flex-direction:column;margin:0;user-select:none;background-color:#b3e5fc;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='304' height='304'%3E%3Cpath fill='%23fff' d='M44.1 224a5 5 0 110 2H0v-2h44.1zm160 48a5 5 0 110 2H82v-2h122.1zm57.8-46a5 5 0 110-2H304v2h-42.1zm0 16a5 5 0 110-2H304v2h-42.1zm6.2-114a5 5 0 110 2h-86.2a5 5 0 110-2h86.2zm-256-48a5 5 0 110 2H0v-2h12.1zm185.8 34a5 5 0 110-2h86.2a5 5 0 110 2h-86.2zM258 12.1a5 5 0 11-2 0V0h2v12.1zm-64 208a5 5 0 11-2 0v-54.2a5 5 0 112 0v54.2zm48-198.2V80h62v2h-64V21.9a5 5 0 112 0zm16 16V64h46v2h-48V37.9a5 5 0 112 0zm-128 96V208h16v12.1a5 5 0 11-2 0V210h-16v-76.1a5 5 0 112 0zm-5.9-21.9a5 5 0 110 2H114v48H85.9a5 5 0 110-2H112v-48h12.1zm-6.2 130a5 5 0 110-2H176v-74.1a5 5 0 112 0V242h-60.1zm-16-64a5 5 0 110-2H114v48h10.1a5 5 0 110 2H112v-48h-10.1zM66 284.1a5 5 0 11-2 0V274H50v30h-2v-32h18v12.1zM236.1 176a5 5 0 110 2H226v94h48v32h-2v-30h-48v-98h12.1zm25.8-30a5 5 0 110-2H274v44.1a5 5 0 11-2 0V146h-10.1zm-64 96a5 5 0 110-2H208v-80h16v-14h-42.1a5 5 0 110-2H226v18h-16v80h-12.1zm86.2-210a5 5 0 110 2H272V0h2v32h10.1zM98 101.9V146H53.9a5 5 0 110-2H96v-42.1a5 5 0 112 0zM53.9 34a5 5 0 110-2H80V0h2v34H53.9zm60.1 3.9V66H82v64H69.9a5 5 0 110-2H80V64h32V37.9a5 5 0 112 0zM101.9 82a5 5 0 110-2H128V37.9a5 5 0 112 0V82h-28.1zm16-64a5 5 0 110-2H146v44.1a5 5 0 11-2 0V18h-26.1zm102.2 270a5 5 0 110 2H98v14h-2v-16h124.1zM242 149.9V160h16v34h-16v62h48v48h-2v-46h-48v-66h16v-30h-16v-12.1a5 5 0 112 0zM53.9 18a5 5 0 110-2H64V2H48V0h18v18H53.9zm112 32a5 5 0 110-2H192V0h50v2h-48v48h-28.1zm-48-48a5 5 0 01-9.8-2h2.07a3 3 0 105.66 0H178v34h-18V21.9a5 5 0 112 0V32h14V2h-58.1zm0 96a5 5 0 110-2H137l32-32h39V21.9a5 5 0 112 0V66h-40.17l-32 32H117.9zm28.1 90.1a5 5 0 11-2 0v-76.51L175.59 80H224V21.9a5 5 0 112 0V82h-49.59L146 112.41v75.69zm16 32a5 5 0 11-2 0v-99.51L184.59 96H300.1a5 5 0 013.9-3.9v2.07a3 3 0 000 5.66v2.07a5 5 0 01-3.9-3.9H185.41L162 121.41v98.69zm-144-64a5 5 0 11-2 0v-3.51l48-48V48h32V0h2v50H66v55.41l-48 48v2.69zM50 53.9v43.51l-48 48V208h26.1a5 5 0 110 2H0v-65.41l48-48V53.9a5 5 0 112 0zm-16 16v19.51l-34 34v-2.82l32-32V69.9a5 5 0 112 0zM12.1 32a5 5 0 110 2H9.41L0 43.41V40.6L8.59 32h3.51zm265.8 18a5 5 0 110-2h18.69l7.41-7.41v2.82L297.41 50H277.9zm-16 160a5 5 0 110-2H288v-71.41l16-16v2.82l-14 14V210h-28.1zm-208 32a5 5 0 110-2H64v-22.59L40.59 194H21.9a5 5 0 110-2h19.51L66 216.59V242H53.9zm150.2 14a5 5 0 110 2H96v-56.6L56.6 162H37.9a5 5 0 110-2h19.5L98 200.6V256h106.1zm-150.2 2a5 5 0 110-2H80v-46.59L48.59 178H21.9a5 5 0 110-2h27.51L82 208.59V258H53.9zM34 39.8v1.61L9.41 66H0v-2h8.59L32 40.59V0h2v39.8zM2 300.1a5 5 0 013.9 3.9H3.83A3 3 0 000 302.17V256h18v48h-2v-46H2v42.1zM34 241v63h-2v-62H0v-2h34v1zM17 18H0v-2h16V0h2v18h-1zm273-2h14v2h-16V0h2v16zm-32 273v15h-2v-14h-14v14h-2v-16h18v1zM0 92.1A5.02 5.02 0 016 97a5 5 0 01-6 4.9v-2.07a3 3 0 100-5.66V92.1zM80 272h2v32h-2v-32zm37.9 32h-2.07a3 3 0 00-5.66 0h-2.07a5 5 0 019.8 0zM5.9 0A5.02 5.02 0 010 5.9V3.83A3 3 0 003.83 0H5.9zm294.2 0h2.07A3 3 0 00304 3.83V5.9a5 5 0 01-3.9-5.9zm3.9 300.1v2.07a3 3 0 00-1.83 1.83h-2.07a5 5 0 013.9-3.9zM97 100a3 3 0 100-6 3 3 0 000 6zm0-16a3 3 0 100-6 3 3 0 000 6zm16 16a3 3 0 100-6 3 3 0 000 6zm16 16a3 3 0 100-6 3 3 0 000 6zm0 16a3 3 0 100-6 3 3 0 000 6zm-48 32a3 3 0 100-6 3 3 0 000 6zm16 16a3 3 0 100-6 3 3 0 000 6zm32 48a3 3 0 100-6 3 3 0 000 6zm-16 16a3 3 0 100-6 3 3 0 000 6zm32-16a3 3 0 100-6 3 3 0 000 6zm0-32a3 3 0 100-6 3 3 0 000 6zm16 32a3 3 0 100-6 3 3 0 000 6zm32 16a3 3 0 100-6 3 3 0 000 6zm0-16a3 3 0 100-6 3 3 0 000 6zm-16-64a3 3 0 100-6 3 3 0 000 6zm16 0a3 3 0 100-6 3 3 0 000 6zm16 96a3 3 0 100-6 3 3 0 000 6zm0 16a3 3 0 100-6 3 3 0 000 6zm16 16a3 3 0 100-6 3 3 0 000 6zm16-144a3 3 0 100-6 3 3 0 000 6zm0 32a3 3 0 100-6 3 3 0 000 6zm16-32a3 3 0 100-6 3 3 0 000 6zm16-16a3 3 0 100-6 3 3 0 000 6zm-96 0a3 3 0 100-6 3 3 0 000 6zm0 16a3 3 0 100-6 3 3 0 000 6zm16-32a3 3 0 100-6 3 3 0 000 6zm96 0a3 3 0 100-6 3 3 0 000 6zm-16-64a3 3 0 100-6 3 3 0 000 6zm16-16a3 3 0 100-6 3 3 0 000 6zm-32 0a3 3 0 100-6 3 3 0 000 6zm0-16a3 3 0 100-6 3 3 0 000 6zm-16 0a3 3 0 100-6 3 3 0 000 6zm-16 0a3 3 0 100-6 3 3 0 000 6zm-16 0a3 3 0 100-6 3 3 0 000 6zM49 36a3 3 0 100-6 3 3 0 000 6zm-32 0a3 3 0 100-6 3 3 0 000 6zm32 16a3 3 0 100-6 3 3 0 000 6zM33 68a3 3 0 100-6 3 3 0 000 6zm16-48a3 3 0 100-6 3 3 0 000 6zm0 240a3 3 0 100-6 3 3 0 000 6zm16 32a3 3 0 100-6 3 3 0 000 6zm-16-64a3 3 0 100-6 3 3 0 000 6zm0 16a3 3 0 100-6 3 3 0 000 6zm-16-32a3 3 0 100-6 3 3 0 000 6zm80-176a3 3 0 100-6 3 3 0 000 6zm16 0a3 3 0 100-6 3 3 0 000 6zm-16-16a3 3 0 100-6 3 3 0 000 6zm32 48a3 3 0 100-6 3 3 0 000 6zm16-16a3 3 0 100-6 3 3 0 000 6zm0-32a3 3 0 100-6 3 3 0 000 6zm112 176a3 3 0 100-6 3 3 0 000 6zm-16 16a3 3 0 100-6 3 3 0 000 6zm0 16a3 3 0 100-6 3 3 0 000 6zm0 16a3 3 0 100-6 3 3 0 000 6zM17 180a3 3 0 100-6 3 3 0 000 6zm0 16a3 3 0 100-6 3 3 0 000 6zm0-32a3 3 0 100-6 3 3 0 000 6zm16 0a3 3 0 100-6 3 3 0 000 6zM17 84a3 3 0 100-6 3 3 0 000 6zm32 64a3 3 0 100-6 3 3 0 000 6zm16-16a3 3 0 100-6 3 3 0 000 6z'/%3E%3C/svg%3E\\\");overflow:hidden}body,html{height:100%}\"","module.exports = \":host{width:calc(100vw - var(--fix-odd, 0));height:100vh;position:relative;overflow:hidden}.overlay,:host{display:flex;flex-direction:column}.overlay{position:absolute;top:0;left:0;right:0;bottom:0;z-index:1;transition:all .3s ease;background-color:hsla(0,0%,100%,.4);pointer-events:all}.overlay.empty{background-color:transparent;pointer-events:none;transition:none}#logo{font-family:MineCrafter;font-size:30px;display:flex;align-items:center;height:100%}\"","import HybridsElement from \"~hybrids-element\";\nimport { Hybrids, html, property } from \"hybrids\";\n\nexport interface TabItem extends HybridsElement {\n  title: string;\n}\n\nexport default {\n  title: property(\"none\"),\n  render: () => html`<slot></slot>`.style(\":host, slot { display: contents }\")\n} as Hybrids<TabItem>;","module.exports = \":focus{outline:none}:host(.floating:host){width:100%;display:flex;flex-direction:column;overflow:auto}:host(.floating:host)::-webkit-scrollbar{display:none}:host(.floating:host) nav{display:flex;flex-wrap:wrap;padding:4px;justify-content:center}:host(.floating:host) button{display:flex;background:#fff;border:2px solid #000;box-sizing:border-box;border-radius:100px;font-family:Unifont;font-size:16px;height:24px;min-width:24px;margin:4px}:host(.floating:host) slot[name=logo],:host(.floating:host) tab-group-toggle-button{display:none}:host(.aside:host){display:grid;grid-template:\\\"toggle logo\\\" 48px \\\"nav content\\\" 1fr/48px 1fr;height:100%}:host(.aside:host) slot[name=logo]{display:block;background-color:#fff;box-shadow:0 2px 5px rgba(0,0,0,.4);padding-left:48px;margin-left:-48px;position:relative;z-index:2;border-radius:0 0 16px 16px}:host(.aside:host) tab-group-toggle-button{position:relative;z-index:3}:host(.aside:host) nav{display:flex;flex-direction:column;z-index:1;position:relative;width:48px;box-sizing:border-box;background-color:hsla(0,0%,100%,.4);transition:all .3s ease-in-out;overflow-y:auto;box-shadow:2px 0 5px rgba(0,0,0,.2);padding-top:52px;margin-top:-48px;backdrop-filter:blur(10px)}:host(.aside:host) nav::-webkit-scrollbar{display:none}:host(.aside:host) nav.show{width:300px;padding:52px 4px 4px}:host(.aside:host) button.active{background:#000;color:#fff}:host(.aside:host) button{flex-shrink:0;border:none;background:#fff;margin:4px 0;height:48px;border-radius:0;text-overflow:ellipsis;overflow:hidden;font-family:Unifont;font-size:16px}:host(.aside:host) nav.show button{margin:4px;border:4px solid #000;border-top:0;border-bottom:0;width:auto;height:48px;transition:all .3s ease-in-out;border-radius:8px}:host(.aside:host) nav.show button.add{border:4px solid #7f7f7f;border-top:0;border-bottom:0}\"","/*  @license Rematrix v0.1.3\n\n    Copyright (c) 2017 Fisssion LLC\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n*/\n/**\n * @module Rematrix\n */\n\n/**\n* Transformation matrices in the browser come in two flavors:\n*\n*  - `matrix` using 6 values (short)\n*  - `matrix3d` using 16 values (long)\n*\n* This utility follows this [conversion guide](https://goo.gl/EJlUQ1)\n* to expand short form matrices to their equivalent long form.\n*\n* @param  {array} source - Accepts both short and long form matrices.\n* @return {array}\n*/\nfunction format (source) {\n\tif (source.constructor !== Array) {\n\t\tthrow new TypeError('Expected array.')\n\t}\n\tif (source.length === 16) {\n\t\treturn source\n\t}\n\tif (source.length === 6) {\n\t\tvar matrix = identity();\n\t\tmatrix[0] = source[0];\n\t\tmatrix[1] = source[1];\n\t\tmatrix[4] = source[2];\n\t\tmatrix[5] = source[3];\n\t\tmatrix[12] = source[4];\n\t\tmatrix[13] = source[5];\n\t\treturn matrix\n\t}\n\tthrow new RangeError('Expected array with either 6 or 16 values.')\n}\n\n\n/**\n * Returns a matrix representing no transformation. The product of any matrix\n * multiplied by the identity matrix will be the original matrix.\n *\n * > **Tip:** Similar to how `5 * 1 === 5`, where `1` is the identity.\n *\n * @return {array}\n */\nfunction identity () {\n\tvar matrix = [];\n\tfor (var i = 0; i < 16; i++) {\n\t\ti % 5 == 0 ? matrix.push(1) : matrix.push(0);\n\t}\n\treturn matrix\n}\n\n\n/**\n * Returns a matrix describing the inverse transformation of the source\n * matrix. The product of any matrix multiplied by its inverse will be the\n * identity matrix.\n *\n * > **Tip:** Similar to how `5 * (1/5) === 1`, where `1/5` is the inverse.\n *\n * @param  {array} source - Accepts both short and long form matrices.\n * @return {array}\n */\nfunction inverse (source) {\n\tvar m = format(source);\n\n\tvar s0 = m[0] * m[5] - m[4] * m[1];\n\tvar s1 = m[0] * m[6] - m[4] * m[2];\n\tvar s2 = m[0] * m[7] - m[4] * m[3];\n\tvar s3 = m[1] * m[6] - m[5] * m[2];\n\tvar s4 = m[1] * m[7] - m[5] * m[3];\n\tvar s5 = m[2] * m[7] - m[6] * m[3];\n\n\tvar c5 = m[10] * m[15] - m[14] * m[11];\n\tvar c4 = m[9] * m[15] - m[13] * m[11];\n\tvar c3 = m[9] * m[14] - m[13] * m[10];\n\tvar c2 = m[8] * m[15] - m[12] * m[11];\n\tvar c1 = m[8] * m[14] - m[12] * m[10];\n\tvar c0 = m[8] * m[13] - m[12] * m[9];\n\n\tvar determinant = 1 / (s0 * c5 - s1 * c4 + s2 * c3 + s3 * c2 - s4 * c1 + s5 * c0);\n\n\tif (isNaN(determinant) || determinant === Infinity) {\n\t\tthrow new Error('Inverse determinant attempted to divide by zero.')\n\t}\n\n\treturn [\n\t\t(m[5] * c5 - m[6] * c4 + m[7] * c3) * determinant,\n\t\t(-m[1] * c5 + m[2] * c4 - m[3] * c3) * determinant,\n\t\t(m[13] * s5 - m[14] * s4 + m[15] * s3) * determinant,\n\t\t(-m[9] * s5 + m[10] * s4 - m[11] * s3) * determinant,\n\n\t\t(-m[4] * c5 + m[6] * c2 - m[7] * c1) * determinant,\n\t\t(m[0] * c5 - m[2] * c2 + m[3] * c1) * determinant,\n\t\t(-m[12] * s5 + m[14] * s2 - m[15] * s1) * determinant,\n\t\t(m[8] * s5 - m[10] * s2 + m[11] * s1) * determinant,\n\n\t\t(m[4] * c4 - m[5] * c2 + m[7] * c0) * determinant,\n\t\t(-m[0] * c4 + m[1] * c2 - m[3] * c0) * determinant,\n\t\t(m[12] * s4 - m[13] * s2 + m[15] * s0) * determinant,\n\t\t(-m[8] * s4 + m[9] * s2 - m[11] * s0) * determinant,\n\n\t\t(-m[4] * c3 + m[5] * c1 - m[6] * c0) * determinant,\n\t\t(m[0] * c3 - m[1] * c1 + m[2] * c0) * determinant,\n\t\t(-m[12] * s3 + m[13] * s1 - m[14] * s0) * determinant,\n\t\t(m[8] * s3 - m[9] * s1 + m[10] * s0) * determinant ]\n}\n\n\n/**\n * Returns a 4x4 matrix describing the combined transformations\n * of both arguments.\n *\n * > **Note:** Order is very important. For example, rotating 45°\n * along the Z-axis, followed by translating 500 pixels along the\n * Y-axis... is not the same as translating 500 pixels along the\n * Y-axis, followed by rotating 45° along on the Z-axis.\n *\n * @param  {array} m - Accepts both short and long form matrices.\n * @param  {array} x - Accepts both short and long form matrices.\n * @return {array}\n */\nfunction multiply (m, x) {\n\tvar fm = format(m);\n\tvar fx = format(x);\n\tvar product = [];\n\n\tfor (var i = 0; i < 4; i++) {\n\t\tvar row = [fm[i], fm[i + 4], fm[i + 8], fm[i + 12]];\n\t\tfor (var j = 0; j < 4; j++) {\n\t\t\tvar k = j * 4;\n\t\t\tvar col = [fx[k], fx[k + 1], fx[k + 2], fx[k + 3]];\n\t\t\tvar result = row[0] * col[0] + row[1] * col[1] + row[2] * col[2] + row[3] * col[3];\n\n\t\t\tproduct[i + k] = result;\n\t\t}\n\t}\n\n\treturn product\n}\n\n\n/**\n * Attempts to return a 4x4 matrix describing the CSS transform\n * matrix passed in, but will return the identity matrix as a\n * fallback.\n *\n * **Tip:** In virtually all cases, this method is used to convert\n * a CSS matrix (retrieved as a `string` from computed styles) to\n * its equivalent array format.\n *\n * @param  {string} source - String containing a valid CSS `matrix` or `matrix3d` property.\n * @return {array}\n */\nfunction parse (source) {\n\tif (typeof source === 'string') {\n\t\tvar match = source.match(/matrix(3d)?\\(([^)]+)\\)/);\n\t\tif (match) {\n\t\t\tvar raw = match[2].split(', ').map(function (value) { return parseFloat(value); });\n\t\t\treturn format(raw)\n\t\t}\n\t}\n\treturn identity()\n}\n\n\n/**\n * Returns a 4x4 matrix describing X-axis rotation.\n *\n * @param  {number} angle - Measured in degrees.\n * @return {array}\n */\nfunction rotateX (angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[5] = matrix[10] = Math.cos(theta);\n\tmatrix[6] = matrix[9] = Math.sin(theta);\n\tmatrix[9] *= -1;\n\n\treturn matrix\n}\n\n\n/**\n * Returns a 4x4 matrix describing Y-axis rotation.\n *\n * @param  {number} angle - Measured in degrees.\n * @return {array}\n */\nfunction rotateY (angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[0] = matrix[10] = Math.cos(theta);\n\tmatrix[2] = matrix[8] = Math.sin(theta);\n\tmatrix[2] *= -1;\n\n\treturn matrix\n}\n\n\n/**\n * Returns a 4x4 matrix describing Z-axis rotation.\n *\n * @param  {number} angle - Measured in degrees.\n * @return {array}\n */\nfunction rotateZ (angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[0] = matrix[5] = Math.cos(theta);\n\tmatrix[1] = matrix[4] = Math.sin(theta);\n\tmatrix[4] *= -1;\n\n\treturn matrix\n}\n\n\n/**\n* Returns a 4x4 matrix describing 2D scaling. The first argument\n* is used for both X and Y-axis scaling, unless an optional\n* second argument is provided to explicitly define Y-axis scaling.\n*\n* @param  {number} scalar    - Decimal multiplier.\n* @param  {number} [scalarY] - Decimal multiplier.\n* @return {array}\n*/\nfunction scale (scalar, scalarY) {\n\tvar matrix = identity();\n\tmatrix[0] = scalar;\n\tmatrix[5] = scalarY || scalar;\n\treturn matrix\n}\n\n\n/**\n* Returns a 4x4 matrix describing X-axis scaling.\n*\n* @param  {number} scalar - Decimal multiplier.\n* @return {array}\n*/\nfunction scaleX (scalar) {\n\tvar matrix = identity();\n\tmatrix[0] = scalar;\n\treturn matrix\n}\n\n\n/**\n* Returns a 4x4 matrix describing Y-axis scaling.\n*\n* @param  {number} scalar - Decimal multiplier.\n* @return {array}\n*/\nfunction scaleY (scalar) {\n\tvar matrix = identity();\n\tmatrix[5] = scalar;\n\treturn matrix\n}\n\n\n/**\n* Returns a 4x4 matrix describing Z-axis scaling.\n*\n* @param  {number} scalar - Decimal multiplier.\n* @return {array}\n*/\nfunction scaleZ (scalar) {\n\tvar matrix = identity();\n\tmatrix[10] = scalar;\n\treturn matrix\n}\n\n\n/**\n* Returns a 4x4 matrix describing shear. The first argument\n* defines X-axis shearing, and an optional second argument\n* defines Y-axis shearing.\n*\n* @param  {number} angleX   - Measured in degrees.\n* @param  {number} [angleY] - Measured in degrees.\n* @return {array}\n*/\nfunction skew (angleX, angleY) {\n\tvar thetaX = Math.PI / 180 * angleX;\n\tvar matrix = identity();\n\n\tmatrix[4] = Math.tan(thetaX);\n\n\tif (angleY) {\n\t\tvar thetaY = Math.PI / 180 * angleY;\n\t\tmatrix[1] = Math.tan(thetaY);\n\t}\n\n\treturn matrix\n}\n\n\n/**\n* Returns a 4x4 matrix describing X-axis shear.\n*\n* @param  {number} angle - Measured in degrees.\n* @return {array}\n*/\nfunction skewX (angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[4] = Math.tan(theta);\n\n\treturn matrix\n}\n\n\n/**\n* Returns a 4x4 matrix describing Y-axis shear.\n*\n* @param  {number} angle - Measured in degrees\n* @return {array}\n*/\nfunction skewY (angle) {\n\tvar theta = Math.PI / 180 * angle;\n\tvar matrix = identity();\n\n\tmatrix[1] = Math.tan(theta);\n\n\treturn matrix\n}\n\n\n/**\n * Returns a 4x4 matrix describing 2D translation. The first\n * argument defines X-axis translation, and an optional second\n * argument defines Y-axis translation.\n *\n * @param  {number} distanceX   - Measured in pixels.\n * @param  {number} [distanceY] - Measured in pixels.\n * @return {array}\n */\nfunction translate (distanceX, distanceY) {\n\tvar matrix = identity();\n\tmatrix[12] = distanceX;\n\n\tif (distanceY) {\n\t\tmatrix[13] = distanceY;\n\t}\n\n\treturn matrix\n}\n\n\n/**\n * Returns a 4x4 matrix describing X-axis translation.\n *\n * @param  {number} distance - Measured in pixels.\n * @return {array}\n */\nfunction translateX (distance) {\n\tvar matrix = identity();\n\tmatrix[12] = distance;\n\treturn matrix\n}\n\n\n/**\n * Returns a 4x4 matrix describing Y-axis translation.\n *\n * @param  {number} distance - Measured in pixels.\n * @return {array}\n */\nfunction translateY (distance) {\n\tvar matrix = identity();\n\tmatrix[13] = distance;\n\treturn matrix\n}\n\n\n/**\n * Returns a 4x4 matrix describing Z-axis translation.\n *\n * @param  {number} distance - Measured in pixels.\n * @return {array}\n */\nfunction translateZ (distance) {\n\tvar matrix = identity();\n\tmatrix[14] = distance;\n\treturn matrix\n}\n\nexport { format, identity, inverse, multiply, parse, rotateX, rotateY, rotateZ, scale, scaleX, scaleY, scaleZ, skew, skewX, skewY, translate, translateX, translateY, translateZ };\n","import { IBounds } from './types';\n\nexport const FOLLOW_ATTR = 'data-flip-follow';\nexport const KEY_ATTR = 'data-flip-key';\nexport const STATE_ATTR = 'data-flip-state';\nexport const NO_DELTA: IBounds = { top: 0, left: 0, width: 1, height: 1 };\n","import * as Rematrix from 'rematrix';\nimport { IBounds } from './types';\nimport { NO_DELTA } from './constants';\n\nexport function mapValues<T, P>(\n  collection: { [key: string]: T },\n  iteratee: (item: T, key: string, collection: { [key: string]: T }) => P\n): { [key: string]: P } {\n  const result = {};\n\n  Object.keys(collection).forEach(key => {\n    result[key] = iteratee(collection[key], key, collection);\n  });\n\n  return result;\n}\n\nexport function mapTwoValues(a, b, iteratee) {\n  const result = {};\n\n  Object.keys(a || {}).forEach(key => {\n    result[key] = iteratee(a[key], b[key], key);\n  });\n\n  return result;\n}\n\nexport function matrixTranslate(x, y) {\n  return Rematrix.translate(x, y).join(',');\n}\n\nexport function matrixScale(x, y) {\n  return Rematrix.scale(x, y).join(',');\n}\n\nexport function matrixMultiply(...matrices) {\n  return matrices\n    .filter(a => !!a)\n    .reduce(Rematrix.multiply)\n    .join(',');\n}\n\nexport function styleValue(\n  prop: string,\n  value: string | number | undefined\n): string | number | undefined {\n  if (\n    ['height', 'width', 'top', 'left'].indexOf(prop) !== -1 &&\n    typeof value === 'number'\n  ) {\n    return `${value}px`;\n  }\n\n  return value;\n}\n\nexport function getStaggerDelay(\n  index: number,\n  stagger: number | ((index: number) => number)\n): number {\n  return typeof stagger === 'function'\n    ? stagger(index)\n    : (stagger || 0) * index;\n}\n\nexport const identity: <T>(arg: T) => T = a => a;\nexport const noop = () => {};\nexport const rect = (element: Element): IBounds => {\n  const { top, left, width, height } = element.getBoundingClientRect();\n\n  return {\n    top,\n    left,\n    width,\n    height,\n    get transform() {\n      return getComputedStyle(element).transform || undefined;\n    }\n  };\n};\nexport function isVisible(element: Element) {\n  const { width, height } = rect(element);\n\n  return !(width === 0 && height === 0);\n}\nexport function getDelta(a: IBounds, b: IBounds): IBounds {\n  if (!a) {\n    return NO_DELTA;\n  }\n  if (!a.height) {\n    return a;\n  }\n  if (!b.height) {\n    return b;\n  }\n  return {\n    top: a.top - b.top,\n    left: a.left - b.left,\n    width: a.width / b.width,\n    height: a.height / b.height\n  };\n}\nexport const deltaChanged = (delta: IBounds): boolean => {\n  return !!delta.top || !!delta.left || delta.width !== 1 || delta.height !== 1;\n};\nexport const boundsChanged = (a: IBounds, b: IBounds): boolean => {\n  return !!(\n    a.top - b.top ||\n    a.left - b.left ||\n    a.width - b.width ||\n    a.height - b.height\n  );\n};\n\ntype EventHandler = (event?: any) => void;\ntype WildCardEventHandler = (type: string, event?: any) => void;\ntype EventHandlerList = Array<EventHandler>;\ntype WildCardEventHandlerList = Array<WildCardEventHandler>;\n\nexport function mitt() {\n  const all: Record<string, EventHandlerList> = {};\n  const wild: WildCardEventHandlerList = [];\n\n  return {\n    /**\n     * Register an event handler for the given type.\n     *\n     * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n     * @param  {Function} handler Function to call in response to given event\n     * @memberOf mitt\n     */\n    on(type: string, handler: EventHandler) {\n      if (type === '*') {\n        wild.push(handler);\n      } else {\n        (all[type] || (all[type] = [])).push(handler);\n      }\n    },\n\n    /**\n     * Remove an event handler for the given type.\n     *\n     * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n     * @param  {Function} handler Handler function to remove\n     * @memberOf mitt\n     */\n    off(type: string, handler: EventHandler) {\n      if (type === '*') {\n        wild.splice(wild.indexOf(handler) >>> 0, 1);\n      } else if (all[type]) {\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n      }\n    },\n\n    /**\n     * Invoke all handlers for the given type.\n     * If present, `\"*\"` handlers are invoked after type-matched handlers.\n     *\n     * @param {String} type  The event type to invoke\n     * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n     * @memberOf mitt\n     */\n    emit(type: string, evt: any) {\n      (all[type] || []).slice().map(handler => {\n        handler(evt);\n      });\n      wild.slice().map(handler => {\n        handler(type, evt);\n      });\n    }\n  };\n}\n","import { IFlipStateMap, IBounds } from '../types';\n\nexport default function mirrorPlugin(\n  states: IFlipStateMap,\n  event: string\n): IFlipStateMap {\n  if (event !== 'flip') {\n    return states;\n  }\n\n  const nextStates: Partial<IFlipStateMap> = {};\n\n  Object.keys(states).forEach(key => {\n    const state = states[key];\n    const element = state.element || (state.previous && state.previous.element);\n\n    if (element) {\n      // const mirrorKey = element.getAttribute('data-flip-mirror');\n\n      if (element.hasAttribute('data-flip-follow')) {\n        const followKey = element.getAttribute('data-flip-follow')!;\n\n        if (followKey && states[followKey]) {\n          nextStates[key] = {\n            ...state,\n            delta: {\n              left: 0,\n              top: 0,\n              ...states[followKey].delta,\n              width: 1,\n              height: 1\n            } as IBounds\n          };\n        } else if (state.type === 'ENTER' || state.type === 'LEAVE') {\n          let candidateElement = element.nextElementSibling;\n          while (\n            candidateElement &&\n            (!candidateElement.hasAttribute('data-flip-key') ||\n              states[candidateElement.getAttribute('data-flip-key')!].type !==\n                'MOVE')\n          ) {\n            candidateElement = candidateElement.nextElementSibling;\n          }\n\n          if (candidateElement) {\n            const candidateDelta = states[\n              candidateElement.getAttribute('data-flip-key')!\n            ].delta!;\n\n            nextStates[key] = {\n              ...state,\n              delta: {\n                left: candidateDelta.left,\n                top: candidateDelta.top,\n                width: 1,\n                height: 1\n              }\n            };\n          }\n        }\n      }\n    }\n  });\n\n  return Object.assign(states, nextStates) as IFlipStateMap;\n}\n","import { IFlipStateMap } from '../types';\n// import { deltaChanged } from '../utils';\n\nexport default function radiusPlugin(\n  states: IFlipStateMap,\n  event: string\n): IFlipStateMap {\n  if (event === 'read') {\n    Object.keys(states).forEach(key => {\n      const state = states[key];\n      const { element } = state;\n      if (!element) {\n        return;\n      }\n\n      state.data.radius = getComputedStyle\n        ? getComputedStyle(element).borderRadius || '0'\n        : '0';\n    });\n  }\n\n  return states;\n}\n","import { rect, isVisible, getDelta, mitt } from './utils';\nimport {\n  IBounds,\n  IFlippingConfig,\n  IFlippingOptions,\n  IFlipState,\n  IFlipStateMap,\n  FlipEventName,\n  FlipPlugin,\n  FlipEventListener,\n  FlipStateEventListener,\n  FlipSelector,\n  FlipData,\n  mitt as Mitt\n} from './types';\nimport { NO_DELTA, KEY_ATTR } from './constants';\nimport mirrorPlugin from './plugins/mirror';\nimport radiusPlugin from './plugins/radius';\n\nconst active = () => true;\nconst identity: <T>(a: T) => T = a => a;\n\nconst flipDatasetMap: Record<\n  string,\n  [keyof FlipData, (value: string) => any]\n> = {\n  flipKey: ['key', identity],\n  flipNoScale: ['noScale', () => true]\n};\n\nconst getFlipData = (element: Element): FlipData => {\n  if (!('dataset' in element)) {\n    // not supported\n\n    return {};\n  }\n\n  const dataset: Record<string, string> = (element as any).dataset;\n  const data: FlipData = {};\n\n  Object.keys(dataset).forEach(key => {\n    if (flipDatasetMap[key]) {\n      const [flipKey, project] = flipDatasetMap[key];\n      data[flipKey] = project(dataset[key]);\n    } else if (key.indexOf('flip') === 0) {\n      data[key[4].toLowerCase() + key.slice(5)] = dataset[key];\n    }\n  });\n\n  return data;\n};\n\nconst createSelector = (\n  selector: FlipSelector | string,\n  attribute: string = KEY_ATTR\n): FlipSelector => {\n  if (typeof selector === 'string') {\n    return (parentElement: Element) => {\n      const elements = parentElement.querySelectorAll(selector);\n      const visibleElements = {};\n      const result: Element[] = [];\n\n      elements.forEach(element => {\n        if (!isVisible(element)) {\n          return;\n        }\n        const key = element.getAttribute(attribute);\n        if (!key) {\n          return;\n        }\n\n        visibleElements[key] = element;\n\n        result.push(element);\n      });\n\n      return result;\n    };\n  }\n\n  return selector;\n};\n\nclass Flipping<TAnimation = any, TAnimationConfig extends {} = {}> {\n  public plugins: FlipPlugin[];\n  public selector: FlipSelector;\n  public attribute: string;\n  public active: (element: Element) => boolean;\n  private activeSelector: (element) => Element[];\n  public getBounds: (element: Element) => IBounds;\n  public getDelta: (first: IBounds, last: IBounds) => IBounds;\n  public onEnter?: FlipEventListener;\n  public onLeave?: FlipEventListener;\n  public onRead?: (stateMap: IFlipStateMap) => void;\n  public states: { [key: string]: IFlipState<TAnimation> };\n  public parentElement: Element;\n\n  private emitter: Mitt.Emitter;\n\n  constructor(options: IFlippingConfig & Record<string, any> = {}) {\n    this.attribute = options.attribute || KEY_ATTR;\n    this.selector = createSelector(\n      options.selector || `[${this.attribute}]`,\n      this.attribute\n    );\n    this.active = options.active || active;\n    this.activeSelector = options.activeSelector || isVisible;\n    this.getBounds = options.getBounds || rect;\n    this.getDelta = options.getDelta || getDelta;\n    this.parentElement = options.parent || document.documentElement;\n    this.plugins = options.plugins || [mirrorPlugin, radiusPlugin];\n\n    this.emitter = mitt();\n    if (options.onRead) {\n      this.on('read', options.onRead);\n    }\n    if (options.onFlip) {\n      this.on('flip', options.onFlip);\n    }\n    if (options.onEnter) {\n      this.on('enter', options.onEnter);\n    }\n    if (options.onLeave) {\n      this.on('leave', options.onLeave);\n    }\n\n    this.states = {};\n  }\n  private getRelativeBounds(\n    parentBounds: IBounds,\n    childBounds: IBounds\n  ): IBounds {\n    return {\n      ...childBounds,\n      top: childBounds.top - parentBounds.top,\n      left: childBounds.left - parentBounds.left\n    };\n  }\n  private selectActive(parentElement: Element): Element[] {\n    const elements = this.selector(parentElement);\n    const activeElements = {};\n    const result: Element[] = [];\n\n    elements.forEach(element => {\n      if (!this.activeSelector(element)) {\n        return;\n      }\n      const key = element.getAttribute(this.attribute);\n      if (!key) {\n        return;\n      }\n\n      activeElements[key] = element;\n\n      result.push(element);\n    });\n\n    return result;\n  }\n  private findParent(\n    element: Element,\n    parent: Element = this.parentElement\n  ): Element {\n    const parentKey = element.getAttribute('data-flip-parent');\n    let currentParent = element.parentElement;\n\n    if (!parentKey) {\n      while (currentParent && !currentParent.hasAttribute(this.attribute)) {\n        currentParent = currentParent.parentElement;\n      }\n    } else {\n      while (\n        currentParent &&\n        currentParent.getAttribute(this.attribute) !== parentKey\n      ) {\n        currentParent = currentParent.parentElement;\n      }\n    }\n\n    return currentParent || parent;\n  }\n  private dispatch(event: FlipEventName, stateMap: IFlipStateMap): void {\n    const finalStateMap = this.plugins.reduce(\n      (intermediateStateMap, plugin) => {\n        return plugin(intermediateStateMap, event);\n      },\n      stateMap\n    );\n\n    this.emitter.emit(event, finalStateMap);\n  }\n  public on(event: FlipEventName, listener: FlipEventListener): void {\n    this.emitter.on(event, listener);\n  }\n  public onFlip(key: string, listener: FlipStateEventListener): void;\n  public onFlip(listener: FlipEventListener): void;\n  public onFlip(...args: any[]) {\n    let key: string | undefined;\n    let listener: FlipStateEventListener | FlipEventListener;\n\n    if (args.length === 2) {\n      [key, listener] = args;\n    } else {\n      [listener] = args;\n    }\n\n    this.emitter.on(\n      'flip',\n      key\n        ? (stateMap: IFlipStateMap) => {\n            const state = stateMap[key as string];\n\n            if (state) {\n              (listener as FlipStateEventListener)(state);\n            }\n          }\n        : listener\n    );\n  }\n  public read(options: IFlippingOptions<TAnimationConfig> = {}) {\n    this.flip({ ...options, readOnly: true });\n  }\n  public flip(options: IFlippingOptions<TAnimationConfig> = {}) {\n    const parentElement = options.parent || this.parentElement;\n    const elements = this.selectActive(parentElement);\n    const fullState: IFlipStateMap = {};\n\n    elements.forEach((element, index) => {\n      const key = element.getAttribute(this.attribute);\n\n      if (!key) {\n        return;\n      }\n\n      const data = getFlipData(element);\n      const childParent = this.findParent(element, parentElement);\n      const childParentKey = childParent.getAttribute(this.attribute);\n      const childParentState = childParentKey\n        ? fullState[childParentKey]\n        : undefined;\n      const parentBounds = this.getBounds(childParent);\n      const previous = this.states[key];\n      const isPresent = previous && previous.type !== 'LEAVE';\n\n      const bounds = this.getRelativeBounds(\n        parentBounds,\n        this.getBounds(element)\n      );\n      const delta =\n        isPresent && previous && previous.bounds\n          ? this.getDelta(previous.bounds, bounds)\n          : undefined;\n\n      const newState: IFlipState = {\n        type: isPresent ? 'MOVE' : 'ENTER',\n        key,\n        element,\n        bounds,\n        delta,\n        start: Date.now(),\n        animation: isPresent ? previous.animation : undefined,\n        index,\n        previous: previous\n          ? {\n              type: previous.type,\n              bounds: previous.bounds,\n              animation: previous.animation,\n              element: previous.element,\n              data: previous.data\n            }\n          : undefined,\n        parent: childParentState,\n        data\n      };\n\n      this.states[key] = fullState[key] = newState;\n    });\n\n    if (options.readOnly) {\n      return this.dispatch('read', fullState);\n    }\n\n    Object.keys(this.states).forEach((key, index) => {\n      if (fullState[key]) {\n        return;\n      }\n\n      const prevState = this.states[key];\n\n      this.states[key] = fullState[key] = {\n        type: 'LEAVE',\n        key,\n        element: undefined,\n        bounds: undefined,\n        start: Date.now(),\n        animation: undefined,\n        delta: undefined,\n        index,\n        parent: undefined,\n        previous: {\n          type: prevState.type,\n          bounds: prevState.bounds,\n          animation: prevState.animation,\n          element: prevState.element\n        }\n      } as IFlipState;\n    });\n\n    return this.dispatch('flip', fullState);\n  }\n  public setAnimation(key: string, animation: any): void {\n    this.states[key].animation = animation;\n  }\n  public wrap<T>(\n    fn: (...args: any[]) => T,\n    options: IFlippingOptions<TAnimationConfig> = {}\n  ): Function {\n    return (...args) => {\n      this.read(options);\n      const result = fn.apply(null, args) as T;\n      this.flip(options);\n      return result;\n    };\n  }\n  public progress(key: string, fraction: number): IBounds | undefined {\n    const { delta } = this.states[key];\n    if (!delta) {\n      return;\n    }\n\n    return Flipping.progress(delta, fraction);\n  }\n  static progress(delta: IBounds | undefined, fraction: number): IBounds {\n    if (!delta) {\n      return NO_DELTA;\n    }\n\n    const invFraction = 1 - fraction;\n\n    return {\n      top: delta.top * invFraction,\n      left: delta.left * invFraction,\n      width: delta.width * invFraction,\n      height: delta.height * invFraction\n    };\n  }\n  static rect = rect;\n  static willScale = (state: IFlipState): boolean => {\n    return !!(\n      state &&\n      state.element &&\n      !state.element.hasAttribute('data-noflip') &&\n      state.delta &&\n      (state.delta.width !== 1 || state.delta.height !== 1)\n    );\n  };\n  static willMove = (state: IFlipState): boolean => {\n    if (!state || !state.delta) {\n      return false;\n    }\n    return state && (state.delta.top !== 0 || state.delta.left !== 0);\n  };\n}\n\nexport default Flipping;\n","import {\n  IFlipState,\n  IFlipElementStrategy,\n  IFlipElementsStrategy\n} from './types';\nimport { matrixTranslate, matrixMultiply } from './utils';\nimport * as Rematrix from 'rematrix';\n\nexport const scale = (state: IFlipState): IFlipElementsStrategy | undefined => {\n  const { bounds, delta, element } = state;\n\n  if (!element || !delta || !bounds) {\n    return undefined;\n  }\n\n  const scaleChanged =\n    !state.data.noScale && (delta.width !== 1 || delta.height !== 1);\n  const translate = Rematrix.translate(delta.left, delta.top);\n  const scale = scaleChanged\n    ? Rematrix.scale(delta.width, delta.height)\n    : undefined;\n  const transformOrigin = scaleChanged ? 'top left' : undefined;\n  const invertedMatrix = matrixMultiply(\n    // Rematrix.parse(bounds.transform),\n    translate,\n    scale\n  );\n\n  const elementPosition: IFlipElementStrategy = {\n    from: {\n      x: delta.left,\n      y: delta.top,\n      ...(transformOrigin ? { transformOrigin } : undefined),\n      transform: `matrix3d(${invertedMatrix})`\n    },\n    to: {\n      x: bounds.left,\n      y: bounds.top,\n      ...(transformOrigin ? { transformOrigin } : undefined),\n      transform: bounds.transform || 'none'\n    }\n  };\n\n  return {\n    element: elementPosition\n  };\n};\n\nexport const slide = (state: IFlipState): IFlipElementsStrategy | undefined => {\n  const { delta, previous, bounds } = state;\n\n  if (!previous || !previous.bounds || !bounds) {\n    return;\n  }\n\n  const height = Math.max(previous.bounds.height, bounds.height);\n  const width = Math.max(previous.bounds.width, bounds.width);\n\n  const elementPosition: IFlipElementStrategy = {\n    from: {\n      height,\n      width,\n      transformOrigin: 'top left'\n    },\n    to: {\n      height,\n      width,\n      transformOrigin: 'top left'\n    }\n  };\n  const containerPosition: IFlipElementStrategy = {\n    from: {\n      height,\n      width,\n      transformOrigin: 'top left'\n    },\n    to: {\n      height,\n      width,\n      transformOrigin: 'top left'\n    }\n  };\n\n  const deltaWidth = bounds.width - previous.bounds.width;\n  const deltaHeight = bounds.height - previous.bounds.height;\n\n  if (!delta) {\n    return;\n  }\n\n  if (deltaWidth > 0) {\n    containerPosition.from.x = -deltaWidth + delta.left;\n    containerPosition.to.x = 0;\n    elementPosition.from.x = deltaWidth;\n    elementPosition.to.x = 0;\n  } else {\n    containerPosition.from.x = 0;\n    containerPosition.to.x = deltaWidth - delta.left;\n    elementPosition.from.x = 0;\n    elementPosition.to.x = -deltaWidth;\n  }\n\n  if (deltaHeight > 0) {\n    containerPosition.from.y = -deltaHeight + delta.top;\n    containerPosition.to.y = 0;\n    elementPosition.from.y = deltaHeight;\n    elementPosition.to.y = 0;\n  } else {\n    containerPosition.from.y = 0;\n    containerPosition.to.y = deltaHeight - delta.top;\n    elementPosition.from.y = 0;\n    elementPosition.to.y = -deltaHeight;\n  }\n\n  const elementFrom = matrixTranslate(\n    elementPosition.from.x,\n    elementPosition.from.y\n  );\n  const elementTo = matrixTranslate(elementPosition.to.x, elementPosition.to.y);\n  const containerFrom = matrixTranslate(\n    containerPosition.from.x,\n    containerPosition.from.y\n  );\n  const containerTo = matrixTranslate(\n    containerPosition.to.x,\n    containerPosition.to.y\n  );\n\n  elementPosition.from.transform = `matrix3d(${elementFrom})`;\n  elementPosition.to.transform = `matrix3d(${elementTo})`;\n  containerPosition.from.transform = `matrix3d(${containerFrom})`;\n  containerPosition.to.transform = `matrix3d(${containerTo})`;\n\n  return {\n    element: elementPosition,\n    container: containerPosition\n  };\n};\n","import {\n  IFlipState,\n  IFlipStateMap,\n  IFlipElementsStrategy,\n  FlippingWebOptions\n} from '../types';\nimport Flipping from '../Flipping';\nimport * as animations from '../animations';\nimport { mapValues, styleValue, getStaggerDelay, deltaChanged } from '../utils';\n\nconst STATE_ATTR = 'data-flip-state';\n\nfunction animate(\n  strategy: IFlipElementsStrategy,\n  elementMap: Record<string, Element>,\n  options: FlippingWebOptions\n): any {\n  const elementAnimations = mapValues(elementMap, (element, key) => {\n    requestAnimationFrame(() => element.setAttribute(STATE_ATTR, 'active'));\n\n    const animation = element.animate(\n      [\n        mapValues(strategy[key].from, (value, prop) =>\n          styleValue(prop, value)\n        ) as AnimationKeyFrame,\n        mapValues(strategy[key].to, (value, prop) =>\n          styleValue(prop, value)\n        ) as AnimationKeyFrame\n      ],\n      options\n    );\n\n    animation.onfinish = () => {\n      element.setAttribute(STATE_ATTR, 'complete');\n    };\n\n    return animation;\n  });\n\n  return {\n    finish: () => {\n      mapValues(elementAnimations, elementAnimation => {\n        elementAnimation.finish();\n      });\n    }\n  };\n}\n\nconst slidingLayersAnimation = (\n  state: IFlipState,\n  options: FlippingWebOptions\n): any => {\n  const { element } = state;\n  const mode = animations.slide(state);\n\n  if (!mode || !element || !element.parentElement) {\n    return;\n  }\n\n  return animate(\n    mode,\n    {\n      element,\n      container: element.parentElement\n    },\n    options\n  );\n};\n\nconst scaleAnimation = (\n  state: IFlipState,\n  options: FlippingWebOptions = {}\n): any => {\n  const { element } = state;\n  const mode = animations.scale(state);\n\n  if (!mode || !element) {\n    return;\n  }\n\n  return animate(mode, { element }, options);\n};\n\nconst autoAnimation = (state: IFlipState, options: FlippingWebOptions): any => {\n  const { element, delta } = state;\n\n  const timingOptions: FlippingWebOptions = {\n    ...options,\n    delay:\n      +(options.delay || 0) +\n      getStaggerDelay(state.index, options.stagger || 0),\n    fill: options.stagger ? 'both' : 'none'\n  };\n\n  if (!element) {\n    return;\n  }\n\n  if (!delta || !deltaChanged(delta)) {\n    return;\n  }\n\n  return scaleAnimation(state, timingOptions);\n};\n\nfunction waapiOnRead(stateMap: IFlipStateMap): void {\n  Object.keys(stateMap).forEach(key => {\n    const { animation } = stateMap[key];\n\n    if (animation && animation.finish) {\n      animation.finish();\n    }\n  });\n}\n\nclass FlippingWeb extends Flipping {\n  static defaults: FlippingWebOptions = {\n    duration: 300,\n    delay: 0,\n    easing: `cubic-bezier(.5, 0, .5, 1)`,\n    fill: 'none',\n    stagger: 0\n  };\n\n  static animate = {\n    auto: autoAnimation,\n    transform: scaleAnimation,\n    slidingLayers: slidingLayersAnimation\n  };\n\n  constructor(options: FlippingWebOptions = {}) {\n    const optionsWithDefaults = {\n      ...FlippingWeb.defaults,\n      ...options\n    };\n\n    super({\n      onRead: waapiOnRead,\n      onFlip: stateMap => {\n        Object.keys(stateMap).forEach(key => {\n          const animation = FlippingWeb.animate.auto(\n            stateMap[key],\n            optionsWithDefaults\n          );\n          this.setAnimation(key, animation);\n        });\n      },\n      ...optionsWithDefaults\n    });\n  }\n}\n\nexport = FlippingWeb;\n","import { RenderFunction, Descriptor, render } from \"hybrids\";\nimport { FlippingWebOptions } from \"flipping/src/types\";\nimport FlippingWeb from \"flipping/src/adapters/web\";\n\nexport function ref(query: string) {\n  return ({ render }) => {\n    if (typeof render === 'function') {\n      const target = render();\n      return target.querySelector(query);\n    }\n    return null;\n  };\n}\n\nexport function connect<T extends HTMLElement>(fn: (host: T, key: string, invalidate: () => void) => (() => void) | void) {\n  return { connect: fn } as Descriptor<T>\n}\n\nexport function delay<T>(time: number): (x: T) => Promise<T> {\n  return function(content: T) {\n    return new Promise(re => setTimeout(() => re(content), time))\n  }\n}\n\nconst flip = Symbol(\"flip\");\nconst first = Symbol(\"first\");\n\nexport function renderFlip<E extends HTMLElement>(fn: RenderFunction<E>, flipOptions: (host: E) => FlippingWebOptions, customOptions?: { shadowRoot?: boolean | object }): Descriptor<E> {\n  return render((host) => {\n    if (!host[first]) host[first] = true;\n    else {\n      if (!host[flip]) host[flip] = new FlippingWeb(flipOptions(host));\n      const update = fn(host);\n      return (h, t) => {\n        host[flip].read();\n        update(h, t);\n        host[flip].flip();\n      };\n    }\n    return fn(host);\n  }, customOptions);\n}","import HybridsElement from \"~hybrids-element\";\nimport tabItem, { TabItem } from \"./tab-item\";\nimport { Hybrids, children, html, property, dispatch, render } from \"hybrids\";\nimport css from \"./tab-group.css\";\nimport { renderFlip } from \"~utils\";\n\nexport interface TabGroup extends HybridsElement {\n  items: TabItem[];\n  activeItem: string;\n  show: boolean;\n}\n\nfunction isButton(target: EventTarget): target is HTMLButtonElement {\n  return \"tagName\" in target && (target as any).tagName == \"BUTTON\";\n}\n\nfunction handleSwitch(host: TabGroup, ev: MouseEvent) {\n  const target = ev.target;\n  if (isButton(target)) {\n    const slot = target.dataset.slot;\n    if (!slot) {\n      dispatch(host, \"add\");\n      return;\n    }\n    host.activeItem = slot;\n    dispatch(host, \"change\", { detail: slot, bubbles: true });\n    host.items.filter(x => x.slot === slot).map(x => dispatch(x, \"active\"));\n  }\n}\n\nconst TabGroupToggleButton = {\n  active: property(false),\n  render: render(({ active }) => html`\n    <div class=${{ active }} id=\"begin\"></div>\n    <div class=${{ active }} id=\"middle\"></div>\n    <div class=${{ active }} id=\"end\"></div>\n  `.style(`\n    :host {\n      width: 48px;\n      height: fit-content;\n      padding: 9px 0;\n    }\n    div {\n      width: 24px;\n      background-color: black;\n      border-radius: 3px;\n      display: block;\n      height: 2px;\n      margin: 6px auto;\n      transition: all .2s ease-in-out;\n    }\n    div.active {\n      width: 28px;\n    }\n    #begin.active { transform: translateY(8px) rotate(135deg); }\n    #end.active { transform: translateY(-8px) rotate(-135deg); }\n    #middle.active { transform: scale(0); }\n  `))\n} as Hybrids<HybridsElement & { active: boolean }>\n\nfunction toggle(host: TabGroup) {\n  host.show = !host.show;\n}\n\nexport default {\n  show: property(false),\n  items: children(tabItem),\n  activeItem: property(\"empty\"),\n  render: renderFlip<TabGroup>(({ items, activeItem, show }) => html`\n    <tab-group-toggle-button active=${show} onclick=${toggle}></tab-group-toggle-button>\n    <slot name=\"logo\">LOGO</slot>\n    <nav onclick=${handleSwitch} class=${{ show }}>\n      ${items.map(({ title, slot }) => html`\n        <button class=${{ active: slot === activeItem }} data-flip-key=\"${slot}\" data-slot=\"${slot}\">${title}</button>\n      `)}\n      <button class=\"add\" data-flip-key=\"add\">+</button>\n    </nav>\n    <slot name=${activeItem} class=\"content\"><p>Empty</p></slot>\n  `.style(css).define({ TabGroupToggleButton }), host => ({ parent: host.shadowRoot.querySelector(\"nav\") }))\n} as Hybrids<TabGroup>;","export class EventEmitter {\n  private events: Map<string, Array<(key?: any) => void>>;\n  constructor() {\n    this.events = new Map();\n  }\n\n  on(event: string, listener: (key?: any) => void) {\n    if (!this.events.has(event)) this.events.set(event, []);\n    this.events.get(event)!.push(listener);\n    return () => this.off(event, listener);\n  }\n\n  off(event: string, listener?: (key?: any) => void) {\n    if (!this.events.has(event)) return;\n    if (listener) {\n      const arr = this.events.get(event)!;\n      const idx = arr.indexOf(listener);\n      if (idx == -1) return;\n      arr.splice(idx, 1);\n    } else {\n      this.events.delete(event);\n    }\n  }\n\n  emit(event: string, obj?: any) {\n    if (!this.events.has(event)) return;\n    const arr = this.events.get(event)!;\n    for (const item of arr) {\n      item(obj);\n    }\n  }\n}","import { EventEmitter } from \"~event-emitter\";\n\ninterface Resolver<T> {\n  resolve(arg: T): void;\n  reject(err: Error): void;\n}\n\nexport type ProxiedAPI<T> = {\n  readonly [P in keyof T]: T[P] extends (...args: infer TArgs) => infer TReturn\n  ? (...args: TArgs) => Promise<TReturn>\n  : ProxiedAPI<T[P]>;\n};\n\ntype ProxiedEvent<T> = {\n  on<K extends keyof T>(event: K, listener: (obj: T[K]) => void): void;\n  off<K extends keyof T>(event: K, listener?: (obj: T[K]) => void): void;\n};\n\ntype JSONRPCResponse = {\n  jsonrpc: \"2.0\";\n  result: any;\n  error: {\n    code: number;\n    message: string;\n    data?: object;\n  }\n  id?: number;\n}\n\ntype JSONRPCNotification = {\n  notification: string;\n  params: any[];\n}\n\nexport type RPCBase = {\n  rpc: {\n    on(...args: string[]): void;\n    off(...args: string[]): void;\n  }\n}\n\nexport class JSONRPCError extends Error {\n  code: number;\n  data?: object;\n  constructor(err: JSONRPCResponse[\"error\"]) {\n    super(err.message);\n    this.code = err.code;\n    this.data = err.data;\n  }\n}\n\nexport interface WebSocketRPCPortView {\n  unbind(): void;\n  send(data: ArrayBuffer): void;\n}\n\ninterface WebSocketRPCBase<T extends object, E extends object> {\n  proxy(): Promise<ProxiedAPI<T & {\n    rpc: {\n      on(...args: (keyof E)[]): void;\n      off(...args: (keyof E)[]): void;\n    }\n  }>>\n  blob(key: number): ArrayBuffer;\n  sendBlob(data: ArrayBuffer): number;\n  close(): void;\n  on(ev: \"close\", fn: (e: Error) => void): void;\n  off(ev: \"close\", fn?: (e: Error) => void): void;\n  bindPort(port: number, handler: (data?: ArrayBuffer) => void): WebSocketRPCPortView;\n}\n\nconst magic = 2147483648;\n\nclass WebSocketRPCImpl<T extends object> extends EventEmitter {\n  private connection: WebSocket;\n  private maxid: number;\n  private pending: Map<number, Resolver<object>>;\n  private promise: Promise<void>;\n  private blobs: Map<number, ArrayBuffer>;\n  private portHandler: Map<number, (data?: ArrayBuffer) => void>;\n  constructor(address: string) {\n    super();\n    this.connection = new WebSocket(address);\n    this.connection.binaryType = \"arraybuffer\";\n    this.maxid = 0;\n    this.pending = new Map();\n    this.blobs = new Map();\n    this.portHandler = new Map();\n    this.promise = new Promise((resolve, reject) => {\n      this.connection.onopen = () => {\n        this.connection.onmessage = this.handleMessage.bind(this);\n        this.connection.onerror = this.handleError.bind(this);\n        this.connection.onclose = this.handleClose.bind(this);\n        resolve();\n      };\n      this.connection.onclose = (ev: CloseEvent) => {\n        reject(new Error(ev.reason != \"\" ? ev.reason : \"Failed to connect the address\"))\n      };\n    });\n  }\n\n  close() {\n    this.connection.onclose = null;\n    this.connection.close();\n  }\n\n  blob(key: number): ArrayBuffer {\n    const ret = this.blobs.get(key);\n    if (!ret) {\n      throw new Error(`Blob ${key} Not found`);\n    }\n    this.blobs.delete(key);\n    return ret;\n  }\n\n  sendBlob(data: ArrayBuffer): number {\n    const id = Math.floor(Math.random() * magic);\n    const xdata = new ArrayBuffer(data.byteLength + 4);\n    const view = new DataView(xdata);\n    view.setUint32(0, id, false);\n    const u8a = new Uint8Array(xdata);\n    u8a.set(new Uint8Array(data), 4);\n    this.connection.send(xdata);\n    return id;\n  }\n\n  bindPort(port: number, handler: (data: ArrayBuffer) => void) {\n    this.portHandler.set(port, handler);\n    return {\n      unbind: () => this.portHandler.delete(port),\n      send: (data: ArrayBuffer) => {\n        const xdata = new ArrayBuffer(data.byteLength + 4);\n        const view = new DataView(xdata);\n        view.setUint32(0, port + magic, false);\n        const u8a = new Uint8Array(xdata);\n        u8a.set(new Uint8Array(data), 4);\n        this.connection.send(xdata);\n      }\n    };\n  }\n\n  private handleMessage(ev: MessageEvent) {\n    if (ev.data instanceof ArrayBuffer) {\n      const data = ev.data.slice(4);\n      const view = new DataView(ev.data);\n      const key = view.getUint32(0, false);\n      if (key > magic) {\n        this.portHandler.get(key - magic)?.(data);\n        return;\n      }\n      this.blobs.set(key, data);\n      return;\n    }\n    const resp = JSON.parse(ev.data) as (JSONRPCResponse | JSONRPCNotification);\n    if (\"notification\" in resp) {\n      this.emit(resp.notification, resp.params);\n      return;\n    }\n    if (resp.jsonrpc !== \"2.0\") {\n      console.error(\"Malformed json-rpc response: %s\", ev.data);\n      return;\n    }\n    if (resp.id != null) {\n      const resolver = this.pending.get(resp.id);\n      if (!resolver) {\n        console.error(\"Unknown id: %d\", resp.id);\n        return;\n      }\n      if (resp.error) {\n        resolver.reject(new JSONRPCError(resp.error));\n      } else if (\"result\" in resp) {\n        resolver.resolve(resp.result);\n      } else {\n        console.error(\"Malformed json-rpc response: %o\", resp);\n        return;\n      }\n      this.pending.delete(resp.id);\n    }\n  }\n\n  private handleError(ev: Event) {\n    this.connection.close();\n  }\n\n  private handleClose(ev: CloseEvent) {\n    const err = new Error(ev.reason);\n    this.pending.forEach((resolver) => resolver.reject(err));\n    this.pending.clear();\n    this.emit(\"close\", err);\n  }\n\n  async proxy(): Promise<ProxiedAPI<T & RPCBase>> {\n    await this.promise;\n    function dproxy(this: WebSocketRPCImpl<T>, obj: any, prefix?: string): any {\n      return new Proxy(obj, {\n        get: (_: any, key: string) => {\n          if (key == \"then\" || key == \"clear\" || key == \"valueOf\" || key == \"toSeq\") return undefined;\n          const realkey = prefix ? prefix + \".\" + key : key;\n          const fn = (...args: any[]) => {\n            return new Promise((resolve, reject) => {\n              const id = this.maxid++;\n              this.pending.set(id, { resolve, reject });\n              this.connection.send(JSON.stringify({\n                jsonrpc: \"2.0\",\n                method: realkey,\n                params: args,\n                id,\n              }));\n            })\n          };\n          return dproxy.call(this, fn, realkey);\n        },\n        set() { return false; }\n      });\n    }\n    const ret = dproxy.call(this, {});\n    Object.defineProperty(this, \"proxy\", () => Promise.resolve(ret));\n    return ret;\n  }\n}\n\nexport type WebSocketRPC<T extends object, E extends object> = WebSocketRPCBase<T, E> & ProxiedEvent<E>;\nexport const WebSocketRPC: new <T extends object, E extends object>(address: string) => WebSocketRPC<T, E> = WebSocketRPCImpl as any;","module.exports = \":host{display:contents}.info{margin:auto;width:200px;height:100px;padding:16px 16px 8px;text-align:center;display:flex;flex-direction:column;justify-content:space-evenly;align-items:center;--color:#000;color:var(--color,#000);background-color:hsla(0,0%,100%,.5);border:2px solid var(--color,#000);border-left:none;border-right:none;border-radius:16px;font-family:Unifont;font-size:16px;position:relative;backdrop-filter:blur(10px)}.info:before{content:\\\"Info\\\";padding:2px 8px;position:absolute;top:-14px;left:50%;transform:translateX(-50%);background-color:#fff;border-radius:100px;border:2px solid var(--color,#000)}.info>button{border:none;background:var(--color,#000);color:#fff;padding:6px 12px;border-radius:100px;font-family:Unifont;font-size:16px}:focus{outline:none}#failed{--color:#b71c1c}#failed:before{content:\\\"Failed\\\"}\"","module.exports = \":host{display:flex;position:relative;margin:12px 8px 8px;width:fit-content}span{position:absolute;font-family:Unifont;font-size:16px;top:-10px;left:50%;transform:translateX(-50%);background:#fff;border-radius:100px;border:2px solid #000;padding:0 8px}slot{display:flex;flex-direction:column;border-radius:16px;border:2px solid #000;border-right:none;border-left:none;background:hsla(0,0%,100%,.4);overflow:hidden}\"","import HybridsElement from \"~hybrids-element\";\nimport { Hybrids, render, html, property } from \"hybrids\";\nimport css from \"./basic-card.css\";\n\ninterface BasicCard extends HybridsElement {\n  title: string;\n  width: number;\n}\n\nexport default {\n  title: property(\"Card\"),\n  width: property(300),\n  render: render(({ title, width }) => html`\n    <span>${title}</span>\n    <slot style=${{ width: width + \"px\" }}></slot>\n  `.style(css))\n} as Hybrids<BasicCard>","module.exports = \":host{display:flex}div{font-family:Unifont;font-size:16px;padding:4px 8px}div:first-of-type{margin-top:12px}\"","import HybridsElement from \"~hybrids-element\";\nimport tabContext, { TabContext } from \"~components/tab-context\";\nimport { Hybrids, parent, render, html, Descriptor, property, dispatch } from \"hybrids\";\nimport { CPUID } from \"~rpcapi\";\nimport BasicCard from \"./basic-card\";\nimport css from \"./cpu-info.css\";\n\ninterface CpuInfo extends HybridsElement {\n  parent: TabContext\n  cpuid?: CPUID\n}\n\nfunction renderCPUID({ brand, cores, logical_cores }: CPUID) {\n  return html`\n    <div>CPU: ${brand}</div>\n    <div>Cores: ${cores}</div>\n    <div>Logical Cores: ${logical_cores}</div>\n  `;\n}\n\nexport default {\n  parent: parent(x => x == tabContext),\n  cpuid: property(undefined),\n  hook: {\n    connect(host, key, invalidate) {\n      host.parent.api.sysinfo.cpuid().then(info => {\n        host.cpuid = info;\n        invalidate();\n        dispatch(host, 'update');\n      })\n    }\n  } as Descriptor<CpuInfo>,\n  render: render(({ cpuid }) => html`\n    <basic-card title=\"CPU Info\">\n      ${cpuid ? renderCPUID(cpuid) : html`<div>loading</div>`}\n    </basic-card>\n  `.define({ BasicCard }).style(css))\n} as Hybrids<CpuInfo>","import HybridsElement from \"~hybrids-element\";\nimport { Hybrids, render, html, Descriptor, property, svg } from \"hybrids\";\nimport { ref } from \"~utils\";\n\ninterface XChart extends HybridsElement {\n  canvas: HTMLCanvasElement,\n  data: number[],\n  color: string,\n}\n\ntype Point = [number, number]\n\nconst lineCommand = (point: Point) => `L ${point[0]} ${point[1]}`\n\nconst line = (pointA: Point, pointB: Point) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[1] - pointA[1]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nconst controlPoint = (current: Point, previous: Point, next: Point, reverse: boolean = false) => {\n  const p = previous || current\n  const n = next || current\n  const smoothing = 0.2\n  const o = line(p, n)\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[1] + Math.sin(angle) * length\n  return [x, y]\n}\n\nconst bezierCommand = (point: Point, i: number, a: Point[]) => {\n  const [cpsX, cpsY] = controlPoint(a[i - 1], a[i - 2], point);\n  const [cpeX, cpeY] = controlPoint(point, a[i - 1], a[i + 1], true);\n  return `C ${cpsX},${cpsY} ${cpeX},${cpeY} ${point[0]},${point[1]}`\n}\n\nfunction svgPath(data: number[], command: (p: Point, ind: number, arr: Point[]) => string = lineCommand): string {\n  const length = data.length;\n  return data.map((val, i) => [i / (length - 1), 1 - val] as Point).reduce<string[]>((acc, point, i, a) =>\n    i === 0 ? [`M 0 1`, `L ${point[0]},${point[1]}`] : [...acc, `${command(point, i, a)}`], []\n  ).join(' ') + \" L 1 1 z\";\n}\n\nexport default {\n  canvas: ref(\"canvas\"),\n  color: property(\"black\"),\n  type: property(\"line\"),\n  data: property([0.2, 0.6, 0.8, 0.4, 0.7, 0.1, 1.0]),\n  render: render(({ data, color }) => svg`\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\">\n      <path d=${svgPath(data, bezierCommand)} fill=${color} />\n    </svg>\n  `.style(`:host { display: flex }`))\n} as Hybrids<XChart>;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!(<any>teardown)) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","/** Symbol.observable addition */\n/* Note: This will add Symbol.observable globally for all TypeScript users,\n  however, we are no longer polyfilling Symbol.observable */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { noop } from './noop';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n * @static true\n * @name asap\n * @owner Scheduler\n */\n\nexport const asap = new AsapScheduler(AsapAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\n\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<ObservedValueOf<O>, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","import { html, define, Hybrids, property, render } from 'hybrids';\nimport XTerm from '~xterm';\nimport LoginPanel from '~components/login-panel';\n\nimport { Preloader } from '~/preloader';\n\nimport fonts from './fonts/*.woff2';\n\nimport css from './index.css';\nimport appcss from './app.css';\nimport TabGroup from '~components/tab-group';\nimport TabItem from '~components/tab-item';\nimport { ref } from '~utils';\nimport HybridsElement from '~hybrids-element';\nimport TabContext from '~components/tab-context';\n\nconst p = new Preloader()\n\np.preloadFont(new FontFace(\"MineCrafter\", `url(${fonts.minecrafter})`))\np.preloadFont(new FontFace(\"Unifont\", `url(${fonts.unifont})`))\n\ninterface SimpleTab {\n  title: string;\n  id: string;\n  address: string;\n}\n\ninterface App extends HybridsElement {\n  tabs: SimpleTab[];\n  activeTab: string;\n  loginInit: Record<\"address\" | \"label\", string> | undefined;\n  overlayElement: HTMLDivElement\n  overlay: \"none\" | \"login\";\n}\n\nfunction handleAdd(host: App, ev: CustomEvent) {\n  if (ev.detail) {\n    const payload = ev.detail as { address: string, title: string, id: string };\n    host.loginInit = { address: payload.address, label: payload.title };\n    host.overlay = \"login\";\n    host.tabs = host.tabs.filter(x => x.id === payload.id);\n    return;\n  }\n  host.overlay = \"login\";\n}\n\nfunction hideOverlay(host: App) {\n  const target = host.overlayElement;\n  target.style.pointerEvents = 'none';\n  target.animate([{\n    opacity: 1\n  }, {\n    opacity: 0\n  }], { duration: 300 }).onfinish = () => {\n    host.overlay = \"none\";\n    target.style.removeProperty(\"pointer-events\")\n  }\n}\n\nfunction handleCancel(host: App, ev: MouseEvent) {\n  if (ev.target == ev.currentTarget) {\n    hideOverlay(host);\n  }\n}\n\nfunction handleLogin(host: App, ev: CustomEvent) {\n  const data = ev.detail as { label: string, address: string };\n  const id = Math.random().toString(36).slice(2);\n  host.tabs = [...host.tabs, {\n    id,\n    title: data.label,\n    address: data.address\n  }]\n  host.activeTab = id;\n  host.loginInit = undefined;\n  hideOverlay(host);\n}\n\nfunction handleChange(host: App, ev: CustomEvent) {\n  host.activeTab = ev.detail;\n}\n\nconst App: Hybrids<App> = {\n  overlayElement: ref(\".overlay\"),\n  activeTab: property(\"empty\"),\n  overlay: property(\"none\"),\n  tabs: property([]),\n  render: render(({ tabs, overlay, activeTab, loginInit }) => html`\n    ${html.resolve(p.wait().then(assets => html`\n      <tab-group class=${{ aside: true }} onadd=${handleAdd} activeItem=${activeTab} onchange=${handleChange}>\n        ${ tabs.map(({ id, title, address }) => html`\n          <tab-item slot=${id} title=${title}>\n            <tab-context address=${address}></tab-context>\n          </tab-item>\n        `.key(id))}\n        <span slot=\"logo\" id=\"logo\">Bedweb</span>\n      </tab-group>\n      <div class=${{ overlay: true, empty: overlay == \"none\" }} onclick=${handleCancel}>\n        ${overlay == \"login\" && html`<login-panel loginInit=${loginInit} onsubmit=${handleLogin}></login-panel>`}\n      </div>\n    `), html`loading`)}\n  `.define({ XTerm, LoginPanel, TabGroup, TabItem, TabContext }).style(appcss)),\n};\n\ndefine(\"x-app\", App);\n\nconst main = document.createElement('style')\nmain.innerHTML = css;\ndocument.head.appendChild(main)\n\nfunction needFix() {\n  return devicePixelRatio == 1;\n}\n\nfunction fixOdd() {\n  if (needFix()) {\n    document.body.style.setProperty(\"--fix-odd\", `${window.innerWidth % 2}px`);\n  }\n}\nfixOdd();\nwindow.addEventListener(\"resize\", fixOdd, { passive: true });","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.png)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { audit } from 'rxjs/operators'\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      let duration;\n      try {\n        const { durationSelector } = this;\n        duration = durationSelector(value);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n      const innerSubscription = subscribeToResult(this, duration);\n      if (!innerSubscription || innerSubscription.closed) {\n        this.clearThrottle();\n      } else {\n        this.add(this.throttled = innerSubscription);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { auditTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { buffer } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerAction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, maxBufferSize: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: SchedulerLike = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ninterface DispatchCreateArg<T> {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number;\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface DispatchCloseArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: DispatchCreateArg<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule<DispatchCreateArg<T>>(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: SchedulerAction<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\nfunction dispatchBufferCreation<T>(this: SchedulerAction<DispatchCreateArg<T>>, state: DispatchCreateArg<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <SchedulerAction<DispatchCreateArg<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchCloseArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction, SubscribableOrPromise } from '../types';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { bufferToggle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.png)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { bufferWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferWhen(() =>\n *   interval(1000 + Math.random() * 4000)\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (err) {\n      return this.error(err);\n    }\n    closingSubscription = new Subscription();\n    this.closingSubscription = closingSubscription;\n    this.add(closingSubscription);\n    this.subscribing = true;\n    closingSubscription.add(subscribeToResult(this, closingNotifier));\n    this.subscribing = false;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * ![](catch.png)\n *\n * ## Examples\n * Continues with a different Observable when there's an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n * \t       throw 'four!';\n *       }\n *\t     return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V')),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retries the caught source Observable again in case of error, similar to retry() operator\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError, take } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n *   \t     throw 'four!';\n *       }\n * \t     return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throws a new error when the source Observable throws an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     }),\n *   )\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n *  @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | ObservedValueOf<O>> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n      this.add(innerSubscriber);\n      const innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n}\n","import { CombineLatestOperator } from '../observable/combineLatest';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function combineAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineAll<T>(): OperatorFunction<any, T[]>;\nexport function combineAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * ![](combineAll.png)\n *\n * `combineAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest}</a> strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ---\n *\n * ## Examples\n *\n * ### Map two click events to a finite interval Observable, then apply `combineAll`\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, combineAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev =>\n *      interval(Math.random() * 2000).pipe(take(3))\n *   ),\n *   take(2)\n * );\n * const result = higherOrder.pipe(\n *   combineAll()\n * );\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function(...values: Array<any>)} An optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return {Observable<T>}\n * @name combineAll\n */\nexport function combineAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new CombineLatestOperator(project));\n}\n","\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link combineLatest}.\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n","import {  concat as concatStatic } from '../observable/concat';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link concat}.\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(concatStatic(source, ...observables));\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return mergeMap(project, resultSelector, 1);\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(observable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMapTo, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return concatMap(() => innerObservable, resultSelector);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer, OperatorFunction } from '../types';\nimport { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { count, takeUntil } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n * ```ts\n * import { range } from 'rxjs';\n * import { count } from 'rxjs/operators';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\n\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.png)\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { debounce } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounce(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<any>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (subscription && !subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively if the duration selector Observable\n      // emits synchronously\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { debounceTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      const { lastValue } = this;\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively when scheduled with things like\n      // VirtualScheduler/TestScheduler.\n      this.lastValue = null;\n      this.hasValue = false;\n      this.destination.next(lastValue);\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n * If no clicks happen in 5 seconds, then emit \"no clicks\"\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { defaultIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.png)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n * Delay each click by one second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: SchedulerLike;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: SchedulerAction<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: SchedulerLike): void {\n    this.active = true;\n    const destination = this.destination as Subscription;\n    destination.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated In future versions, empty notifiers will no longer re-emit the source value on the output observable. */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<never>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\n/* tslint:disable:max-line-length */\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n * Delay each click by a random amount of time, between 0 and 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { delayWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(event => interval(Math.random() * 5000)),\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    try {\n      const delayNotifier = this.delayDurationSelector(value, index);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n    this.unsubscribe();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    if (subscriptionIdx !== -1) {\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n    }\n\n    return subscription.outerValue;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      const destination = this.destination as Subscription;\n      destination.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.unsubscribe();\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n * Convert an Observable of Notifications to an actual Observable\n * ```ts\n * import { of, Notification } from 'rxjs';\n * import { dematerialize } from 'rxjs/operators';\n *\n * const notifA = new Notification('N', 'A');\n * const notifB = new Notification('N', 'B');\n * const notifE = new Notification('E', undefined,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * const materialized = of(notifA, notifB, notifE);\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1).pipe(\n *     distinct(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n * ```\n *\n * An example using a keySelector function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *   ).pipe(\n *     distinct((p: Person) => p.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Example\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4).pipe(\n *     distinctUntilChanged(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n * ```\n *\n * An example using a compare function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilChanged((p: Person, q: Person) => p.name === q.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n    let key: any;\n    try {\n      const { keySelector } = this;\n      key = keySelector ? keySelector(value) : value;\n    } catch (err) {\n      return this.destination.error(err);\n    }\n    let result = false;\n    if (this.hasKey) {\n      try {\n        const { compare } = this;\n        result = compare(this.key, key);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n    } else {\n      this.hasKey = true;\n    }\n    if (!result) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n * An example comparing the name of persons\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name'),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3)),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic, MonoTypeOperatorFunction } from '../types';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n * ```ts\n * import { fromEvent, timer } from 'rxjs';\n * import { throwIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the document was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport function throwIfEmpty <T>(errorFactory: (() => any) = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    return source.lift(new ThrowIfEmptyOperator(errorFactory));\n  };\n}\n\nclass ThrowIfEmptyOperator<T> implements Operator<T, T> {\n  constructor(private errorFactory: () => any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n  }\n}\n\nclass ThrowIfEmptySubscriber<T> extends Subscriber<T> {\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>, private errorFactory: () => any) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.hasValue = true;\n    this.destination.next(value);\n  }\n\n  protected _complete() {\n    if (!this.hasValue) {\n      let err: any;\n      try {\n        err = this.errorFactory();\n      } catch (e) {\n        err = e;\n      }\n      this.destination.error(err);\n    } else {\n        return this.destination.complete();\n    }\n  }\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n * Emit only the third click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { elementAt } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  if (index < 0) { throw new ArgumentOutOfRangeError(); }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    filter((v, i) => i === index),\n    take(1),\n    hasDefaultValue\n      ? defaultIfEmpty(defaultValue)\n      : throwIfEmpty(() => new ArgumentOutOfRangeError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A>(v1: A, scheduler: SchedulerLike): OperatorFunction<T, T | A>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B>(v1: A, v2: B, scheduler: SchedulerLike): OperatorFunction<T, T | A | B>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E | F>;\n\nexport function endWith<T, A>(v1: A): OperatorFunction<T, T | A>;\nexport function endWith<T, A, B>(v1: A, v2: B): OperatorFunction<T, T | A | B>;\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C): OperatorFunction<T, T | A | B | C>;\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D): OperatorFunction<T, T | A | B | C | D>;\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E): OperatorFunction<T, T | A | B | C | D | E>;\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F): OperatorFunction<T, T | A | B | C | D | E | F>;\nexport function endWith<T, Z = T>(...array: Z[]): OperatorFunction<T, T | Z>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, Z = T>(...array: Array<Z | SchedulerLike>): OperatorFunction<T, T | Z>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments after it finishes emitting\n * items emitted by the source Observable.\n *\n * ![](endWith.png)\n *\n * ## Example\n * ### After the source observable completes, appends an emission and then completes too.\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { endWith } from 'rxjs/operators';\n *\n * of('hi', 'how are you?', 'sorry, I have to go now').pipe(\n *   endWith('goodbye!'),\n * )\n * .subscribe(word => console.log(word));\n * // result:\n * // 'hi'\n * // 'how are you?'\n * // 'sorry, I have to go now'\n * // 'goodbye!'\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit last.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items emitted by the source Observable\n *  and then emits the items in the specified Iterable.\n * @method endWith\n * @owner Observable\n */\nexport function endWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...array)) as Observable<T>;\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * ## Example\n * A simple example emitting true if all elements are less than 5, false otherwise\n * ```ts\n * import { of } from 'rxjs';\n * import { every } from 'rxjs/operators';\n *\n *  of(1, 2, 3, 4, 5, 6).pipe(\n *     every(x => x < 5),\n * )\n * .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, TeardownLogic } from '../types';\n\nexport function exhaust<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function exhaust<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaust.png)\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaust, map, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(5))),\n * );\n * const result = higherOrder.pipe(exhaust());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): OperatorFunction<any, T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaustMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(ev => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      exhaustMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: any) => resultSelector(a, b, i, ii)),\n      )),\n    );\n  }\n  return (source: Observable<T>) =>\n    source.lift(new ExhaustMapOperator(project));\n}\n\nclass ExhaustMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ExhaustMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasSubscription = false;\n  private hasCompleted = false;\n  private index = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.hasSubscription = true;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, result, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, R>;\nexport function expand<T>(project: (value: T, index: number) => ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n * Start emitting the powers of two on every click, at most 10 of them\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { expand, mapTo, delay, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   mapTo(1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10),\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: SchedulerLike = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: ObservableInput<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      try {\n        const { project } = this;\n        const result = project(value, index);\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n          const destination = this.destination as Subscription;\n          destination.add(this.scheduler.schedule<DispatchArg<T, R>>(ExpandSubscriber.dispatch, 0, state));\n        }\n      } catch (e) {\n        destination.error(e);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    const destination = this.destination as Subscription;\n    destination.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {OperatorFunction} from '../types';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * ## Example\n * Find and emit the first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { find } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg)) as Observable<T | undefined>;\n}\n\nexport class FindValueOperator<T> implements Operator<T, T | number | undefined> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    const {predicate, thisArg} = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Observable } from '../Observable';\nimport { FindValueOperator } from '../operators/find';\nimport { OperatorFunction } from '../types';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n * Emit the index of first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { findIndex } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, true, thisArg)) as Observable<any>;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function first<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a deprecated `resultSelector` function to produce the output\n * value from the input value, and a `defaultValue` to emit in case the source\n * completes before it is able to emit a valid value. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n * Emit only the first click that happens on the DOM\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    take(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * ## Examples\n * ### Ignores emitted values, reacts to observable's completion.\n * ```ts\n * import { of } from 'rxjs';\n * import { ignoreElements } from 'rxjs/operators';\n *\n * of('you', 'talking', 'to', 'me').pipe(\n *   ignoreElements(),\n * )\n * .subscribe(\n *   word => console.log(word),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'the end'\n * ```\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements(): OperatorFunction<any, never> {\n  return function ignoreElementsOperatorFunction(source: Observable<any>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    // Do nothing\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits false if the input observable emits any values, or emits true if the\n * input observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an observable</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n * ```javascript\n * import { Subject } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Results in:\n * // a\n * // false\n * // b\n * // c\n * ```\n *\n * Emit `true` for an empty Observable\n * ```javascript\n * import { EMPTY } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return {OperatorFunction<T, boolean>} An Observable of a boolean value indicating whether observable was empty or not\n * @method isEmpty\n * @owner Observable\n */\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * ![](takeLast.png)\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * ## Example\n * Take the last 3 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { takeLast } from 'rxjs/operators';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function last<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    takeLast(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n * Map every click to the string 'Hi'\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n * Convert a faulty Observable to an Observable of Notifications\n * ```ts\n * import { of } from 'rxjs';\n * import { materialize, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map(x => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * ![](scan.png)\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { scan, mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const ones = clicks.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(scan((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events that happened in 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { reduce, takeUntil, mapTo } from 'rxjs/operators';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click').pipe(\n *   takeUntil(interval(5000)),\n * );\n * const ones = clicksInFiveSeconds.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: T | R, value: T, index?: number) => T | R, seed?: T | R): OperatorFunction<T, T | R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<T | R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<T | R> {\n    return pipe(\n      scan<T, T | R>((acc, value, index) => accumulator(acc, value, index + 1)),\n      takeLast(1),\n    )(source);\n  };\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n * Get the maximal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   max(),\n * )\n * .subscribe(x => console.log(x)); // -> 8\n * ```\n *\n * Use a comparer function to get the maximal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n","import { merge as mergeStatic } from '../observable/merge';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(...observables: Array<ObservableInput<T> | SchedulerLike | number>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link merge}.\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction, ObservedValueOf } from '../../internal/types';\nimport { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, O extends ObservableInput<any>>(innerObservable: O, concurrent?: number): OperatorFunction<any, ObservedValueOf<O>>;\n/** @deprecated */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(innerObservable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n * For each click event, start an interval Observable ticking every 1 second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { mergeMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { mapTo, mergeScan } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(mapTo(1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed),\n * );\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const destination = this.destination;\n      let ish;\n      try {\n        const { accumulator } = this;\n        ish = accumulator(this.acc, value, index);\n      } catch (e) {\n        return destination.error(e);\n      }\n      this.active++;\n      this._innerSub(ish, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n * Get the minimal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   min(),\n * )\n * .subscribe(x => console.log(x)); // -> 2\n * ```\n *\n * Use a comparer function to get the minimal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * ```\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(subject: Subject<T>, selector: (shared: Observable<T>) => O): UnaryFunction<Observable<T>, ConnectableObservable<ObservedValueOf<O>>>;\nexport function multicast<T>(subjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * ![](multicast.png)\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { from } from '../observable/from';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T>(): OperatorFunction<T, T>;\nexport function onErrorResumeNext<T, T2>(v: ObservableInput<T2>): OperatorFunction<T, T | T2>;\nexport function onErrorResumeNext<T, T2, T3>(v: ObservableInput<T2>, v2: ObservableInput<T3>): OperatorFunction<T, T | T2 | T3>;\nexport function onErrorResumeNext<T, T2, T3, T4>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, T7>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>, v6: ObservableInput<T7>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any>>): OperatorFunction<T, T | R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n * Subscribe to the next Observable after map fails\n * ```ts\n * import { of } from 'rxjs';\n * import { onErrorResumeNext, map } from 'rxjs/operators';\n *\n * of(1, 2, 3, 0).pipe(\n *   map(x => {\n *       if (x === 0) { throw Error(); }\n *        return 10 / x;\n *   }),\n *   onErrorResumeNext(of(1, 2, 3)),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('that\\'s it!')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>>>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n  Array<ObservableInput<any>> |\n  ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return from(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (!!next) {\n      const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n      const destination = this.destination as Subscription;\n      destination.add(innerSubscriber);\n      const innerSubscription = subscribeToResult(this, next, undefined, undefined, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        destination.add(innerSubscription);\n      }\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n * On every click (starting from the second), emit the relative distance to the previous click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pairwise, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(pair => {\n *     const x0 = pair[0].clientX;\n *     const y0 = pair[0].clientY;\n *     const x1 = pair[1].clientX;\n *     const y1 = pair[1].clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   }),\n * );\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    let pair: [T, T] | undefined;\n\n    if (this.hasPrev) {\n      pair = [this.prev, value];\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n\n    if (pair) {\n      this.destination.next(pair);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition click events into those on DIV elements and those elsewhere\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { partition } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const parts = clicks.pipe(partition(ev => ev.target.tagName === 'DIV'));\n * const clicksOnDivs = parts[0];\n * const clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n * @deprecated use `partition` static creation function instead\n */\nexport function partition<T>(predicate: (value: T, index: number) => boolean,\n                             thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) => [\n    filter(predicate, thisArg)(source),\n    filter(not(predicate, thisArg) as any)(source)\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): OperatorFunction<T, T[K1][K2][K3]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): OperatorFunction<T, T[K1][K2][K3][K4]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4], K6 extends keyof T[K1][K2][K3][K4][K5]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n * Map every click to the tagName of the clicked target element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pluck } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return (source: Observable<T>) => map(plucker(properties, length))(source as any);\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp[props[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\nexport function publish<T>(selector: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n * Make source$ hot by applying publish operator, then merge each inner observable into a single one\n * and subscribe.\n * ```ts\n * import { of, zip, interval, merge } from \"rxjs\";\n * import { map, publish, tap } from \"rxjs/operators\";\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9)).pipe(\n *   map(values => values[1])\n * );\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x))),\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n *\n *\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ?\n    multicast(() => new Subject<T>(), selector) :\n    multicast(new Subject<T>());\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { publishLast, tap, take } from 'rxjs/operators';\n *\n * const connectable =\n *   interval(1000)\n *     .pipe(\n *       tap(x => console.log(\"side effect\", x)),\n *       take(3),\n *       publishLast());\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. A\", x),\n *   err => console.log(\"Sub. A Error\", err),\n *   () => console.log( \"Sub. A Complete\"));\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. B\", x),\n *   err => console.log(\"Sub. B Error\", err),\n *   () => console.log( \"Sub. B Complete\"));\n *\n * connectable.connect();\n *\n * // Results:\n * //    \"side effect 0\"\n * //    \"side effect 1\"\n * //    \"side effect 2\"\n * //    \"Sub. A 2\"\n * //    \"Sub. B 2\"\n * //    \"Sub. A Complete\"\n * //    \"Sub. B Complete\"\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return {ConnectableObservable} An observable sequence that contains the elements of a\n * sequence produced by multicasting the source sequence.\n * @method publishLast\n * @owner Observable\n */\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction, MonoTypeOperatorFunction, OperatorFunction, SchedulerLike, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function publishReplay<T, O extends ObservableInput<any>>(bufferSize?: number, windowTime?: number, selector?: (shared: Observable<T>) => O, scheduler?: SchedulerLike): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\nexport function publishReplay<T, R>(bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: SchedulerLike | OperatorFunction<T, R>,\n                                    scheduler?: SchedulerLike): UnaryFunction<Observable<T>, ConnectableObservable<R>> {\n\n  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n    scheduler = selectorOrScheduler;\n  }\n\n  const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n  const subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n\n  return (source: Observable<T>) => multicast(() => subject, selector)(source) as ConnectableObservable<R>;\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n * @deprecated Deprecated in favor of static {@link race}.\n */\nexport function race<T>(...observables: (Observable<T> | Observable<T>[])[]): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = observables[0] as Observable<T>[];\n    }\n\n    return source.lift.call(raceStatic(source, ...(observables as Observable<T>[])));\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { empty } from '../observable/empty';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes, at most count times.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Similar to {@link retry}, this operator repeats the stream of items emitted by the source for non error cases.\n * Repeat can be useful for creating observables that are meant to have some repeated pattern or rhythm.\n *\n * Note: `repeat(0)` returns an empty observable and `repeat()` will repeat forever\n *\n * ## Example\n * Repeat a message stream\n * ```ts\n * import { of } from 'rxjs';\n * import { repeat, delay } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const example = source.pipe(repeat(3));\n * example.subscribe(x => console.log(x));\n *\n * // Results\n * // Repeat message\n * // Repeat message\n * // Repeat message\n * ```\n *\n * Repeat 3 values, 2 times\n * ```ts\n * import { interval } from 'rxjs';\n * import { repeat, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(take(3), repeat(2));\n * example.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that will resubscribe to the source stream when the source stream completes\n * , at most count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n * Repeat a message stream on click\n * ```ts\n * import { of, fromEvent } from 'rxjs';\n * import { repeatWhen } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * source.pipe(repeatWhen(() => documentClick$)\n * ).subscribe(data => console.log(data))\n * ```\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    super._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    let retries;\n    try {\n      const { notifier } = this;\n      retries = notifier(this.notifications);\n    } catch (e) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n *\n * ## Example\n * ```ts\n * import { interval, of, throwError } from 'rxjs';\n * import { mergeMap, retry } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   mergeMap(val => {\n *     if(val > 5){\n *       return throwError('Error!');\n *     }\n *     return of(val);\n *   }),\n *   //retry 2 times on error\n *   retry(2)\n * );\n *\n * const subscribe = example.subscribe({\n *   next: val => console.log(val),\n *   error: val => console.log(`${val}: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // \"Error!: Retried 2 times then quit!\"\n * ```\n *\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        try {\n          const { notifier } = this;\n          retries = notifier(errors);\n        } catch (e) {\n          return super.error(e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    this._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n * On every click, sample the most recent \"seconds\" timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { sample } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n * Every second, emit the most recent click at most once\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { sampleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: SchedulerAction<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * ## Example\n * figure out if the Konami code matches\n * ```ts\n * import { from, fromEvent } from 'rxjs';\n * import { sequenceEqual, bufferCount, mergeMap, map } from 'rxjs/operators';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(\n *     last11 => from(last11).pipe(sequenceEqual(codes)),\n *   ),\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparator] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparator?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n    super(destination);\n    (this.destination as Subscription).add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n    this.unsubscribe();\n  }\n\n  checkValues() {\n    const { _a, _b, comparator } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      try {\n        areEqual = comparator ? comparator(a, b) : a === b;\n      } catch (e) {\n        this.destination.error(e);\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n\n  completeB() {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.completeB();\n    this.unsubscribe();\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../types';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * ![](share.png)\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplayed observable` forever,\n * but an errored source can be retried.\n *\n * ## Why use shareReplay?\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ![](shareReplay.png)\n *\n * ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { shareReplay, take } from 'rxjs/operators';\n *\n * const obs$ = interval(1000);\n * const shared$ = obs$.pipe(\n *   take(4),\n *   shareReplay(3)\n * );\n * shared$.subscribe(x => console.log('source A: ', x));\n * shared$.subscribe(y => console.log('source B: ', y));\n *\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param {Number} [bufferSize=Number.POSITIVE_INFINITY] Maximum element count of the replay buffer.\n * @param {Number} [windowTime=Number.POSITIVE_INFINITY] Maximum time length of the replay buffer in milliseconds.\n * @param {Scheduler} [scheduler] Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return {Observable} An observable sequence that contains the elements of a sequence produced\n * by multicasting the source sequence within a selector function.\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let config: ShareReplayConfig;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    config = configOrBufferSize as ShareReplayConfig;\n  } else {\n    config = {\n      bufferSize: configOrBufferSize as number | undefined,\n      windowTime,\n      refCount: false,\n      scheduler\n    };\n  }\n  return (source: Observable<T>) => source.lift(shareReplayOperator(config));\n}\n\nfunction shareReplayOperator<T>({\n  bufferSize = Number.POSITIVE_INFINITY,\n  windowTime = Number.POSITIVE_INFINITY,\n  refCount: useRefCount,\n  scheduler\n}: ShareReplayConfig) {\n  let subject: ReplaySubject<T> | undefined;\n  let refCount = 0;\n  let subscription: Subscription | undefined;\n  let hasError = false;\n  let isComplete = false;\n\n  return function shareReplayOperation(this: Subscriber<T>, source: Observable<T>) {\n    refCount++;\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next(value) { subject.next(value); },\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete() {\n          isComplete = true;\n          subscription = undefined;\n          subject.complete();\n        },\n      });\n    }\n\n    const innerSub = subject.subscribe(this);\n    this.add(() => {\n      refCount--;\n      innerSub.unsubscribe();\n      if (subscription && !isComplete && useRefCount && refCount === 0) {\n        subscription.unsubscribe();\n        subscription = undefined;\n        subject = undefined;\n      }\n    });\n  };\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { Observer, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emitted.\n *\n * <span class=\"informal\">Like {@link first}, but emit with error notification if there is more than one value.</span>\n * ![](single.png)\n *\n * ## Example\n * emits 'error'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single());\n * numbers.subscribe(x => console.log('never get called'), e => console.log('error'));\n * // result\n * // 'error'\n * ```\n *\n * emits 'undefined'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single(x => x === 10));\n * numbers.subscribe(x => console.log(x));\n * // result\n * // 'undefined'\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * ![](skipLast.png)\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * ## Example\n * Skip the last 2 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { skipLast } from 'rxjs/operators';\n *\n * const many = range(1, 5);\n * const skipLastTwo = many.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic, ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values ​​until the passed in observable emits the first value.\n * This can be particularly useful in combination with user interactions, responses of http requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally the `skipUntil` operator subscribes to the passed in observable (in the following called *notifier*) in order to recognize the emission\n * of its first value. When this happens, the operator unsubscribes from the *notifier* and starts emitting the values of the *source*\n * observable. It will never let the *source* observable emit any values if the *notifier* completes or throws an error without emitting\n * a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values ​​of the interval observable are skipped until the user clicks anywhere within the page.\n *\n * ```ts\n * import { interval, fromEvent } from 'rxjs';\n * import { skipUntil } from 'rxjs/operators';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * const subscribe = emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(destination: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>, notifier: ObservableInput<any>) {\n    super(destination);\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    this.add(innerSubscriber);\n    this.innerSubscription = innerSubscriber;\n    const innerSubscription = subscribeToResult(this, notifier, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      this.add(innerSubscription);\n      this.innerSubscription = innerSubscription;\n    }\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n    if (this.innerSubscription) {\n      this.innerSubscription.unsubscribe();\n    }\n  }\n\n  notifyComplete() {\n    /* do nothing */\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D>(v1: D, scheduler: SchedulerLike): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E>(v1: D, v2: E, scheduler: SchedulerLike): OperatorFunction<T, T | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H | I>;\n\nexport function startWith<T, D>(v1: D): OperatorFunction<T, T | D>;\nexport function startWith<T, D, E>(v1: D, v2: E): OperatorFunction<T, T | D | E>;\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F): OperatorFunction<T, T | D | E | F>;\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G): OperatorFunction<T, T | D | E | F | G>;\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H): OperatorFunction<T, T | D | E | F | G | H>;\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I): OperatorFunction<T, T | D | E | F | G | H | I>;\nexport function startWith<T, D = T>(...array: D[]): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D = T>(...array: Array<D | SchedulerLike>): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Start the chain of emissions with `\"first\"`, `\"second\"`\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * of(\"from source\")\n *   .pipe(startWith(\"first\", \"second\"))\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * //   \"first\"\n * //   \"second\"\n * //   \"from source\"\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T, D>(...array: Array<T | SchedulerLike>): OperatorFunction<T, T | D> {\n  const scheduler = array[array.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    // deprecated path\n    array.pop();\n    return (source: Observable<T>) => concat(array as T[], source, scheduler);\n  } else {\n    return (source: Observable<T>) => concat(array as T[], source);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  /** @nocollapse */\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: SchedulerLike = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  /** @nocollapse */\n  static dispatch<T>(this: SchedulerAction<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: SchedulerLike = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule<DispatchArg<any>>(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n * Given the following code:\n * ```javascript\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3, 4);\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n * This will result in the output of `1 2 3 4 5 6 7 8 9`.\n *\n * But if we instead us the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emited by Observable `a`:\n * ```javascript\n * import { of, merge, asyncScheduler } from 'rxjs';\n * import { subscribeOn } from 'rxjs/operators';\n *\n * const a = of(1, 2, 3, 4).pipe(subscribeOn(asyncScheduler));\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * The output will instead be `5 6 7 8 9 1 2 3 4`.\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param {SchedulerLike} scheduler - The {@link SchedulerLike} to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified {@link SchedulerLike}.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function subscribeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new SubscribeOnOperator<T>(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike,\n              private delay: number) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return new SubscribeOnObservable<T>(\n      source, this.delay, this.scheduler\n    ).subscribe(subscriber);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Generate new Observable according to source Observable values\n * ```typescript\n * import { of } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const switched = of(1, 2, 3).pipe(switchMap((x: number) => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // ... and so on\n * ```\n *\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n      this.destination.next(innerValue);\n  }\n}\n","import {OperatorFunction, ObservableInput} from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function switchAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one.\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchAll, map, tap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map((ev) => interval(1000)));\n *\n * source.pipe(\n *   switchAll()\n * ).subscribe(x => console.log(x));\n *\n /* Output\n *  click\n *  1\n *  2\n *  3\n *  4\n *  ...\n *  click\n *  1\n *  2\n *  3\n *  ...\n *  click\n *  ...\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n */\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return switchMap(identity);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<R>(observable: ObservableInput<R>): OperatorFunction<any, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through the deprecated `resultSelector`)\n * every time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(\n  innerObservable: ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I|R> {\n  return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n * Tick every second until the first click happens\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { takeUntil } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n  seenValue = false;\n\n  constructor(destination: Subscriber<any>, ) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.seenValue = true;\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n * Emit click events only while the clientX property is greater than 200\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { takeWhile } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(\n    predicate: (value: T, index: number) => boolean,\n    inclusive = false): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) =>\n             source.lift(new TakeWhileOperator(predicate, inclusive));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {}\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n        new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(\n      destination: Subscriber<T>,\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      if (this.inclusive) {\n        destination.next(value);\n      }\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: null | undefined, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of an error callback */\nexport function tap<T>(next: null | undefined, error: (error: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: (value: T) => void, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * ![](do.png)\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `tap` is not subscribed, the side effects specified by the\n * Observer will never happen. `tap` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * ## Example\n * Map every click to the clientX position of that click, while also logging the click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(\n *   tap(ev => console.log(ev)),\n *   map(ev => ev.clientX),\n * );\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n * @see {@link Observable#subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.png)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<any>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private _throttled: Subscription;\n  private _sendValue: T;\n  private _hasValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  private send() {\n    const { _hasValue, _sendValue } = this;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n    this._hasValue = false;\n    this._sendValue = null;\n  }\n\n  private throttle(value: T): void {\n    const duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = subscribeToResult(this, duration));\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  private throttlingDone() {\n    const { _throttled, _trailing } = this;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = null;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.throttlingDone();\n  }\n\n  notifyComplete(): void {\n    this.throttlingDone();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * #### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * #### Double Click\n *\n * The following example only emits clicks which happen within a subsequent\n * delay of 400ms of the previous click. This for example can emulate a double\n * click. It makes use of the `trailing` parameter of the throttle configuration.\n *\n * ```ts\n * import { fromEvent, asyncScheduler } from 'rxjs';\n * import { throttleTime, withLatestFrom } from 'rxjs/operators';\n *\n * // defaultThottleConfig = { leading: true, trailing: false }\n * const throttleConfig = {\n *   leading: false,\n *   trailing: true\n * }\n *\n * const click = fromEvent(document, 'click');\n * const doubleClick = click.pipe(\n *   throttleTime(400, asyncScheduler, throttleConfig)\n * );\n *\n * doubleClick.subscribe((throttleValue: Event) => {\n *   console.log(`Double-clicked! Timestamp: ${throttleValue.timeStamp}`);\n * });\n * ```\n *\n * If you enable the `leading` parameter in this example, the output would be the primary click and\n * the double click, but restricts additional clicks within 400ms.\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: SchedulerLike = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule<DispatchArg<T>>(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  }\n\n  protected _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\n\n/**\n *\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeinterval.png)\n *\n * ## Examples\n * Emit inteval between current value with the last value\n *\n * ```ts\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeInterval())\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // {value: 0, interval: 1000}\n * // {value: 1, interval: 1000}\n * // {value: 2, interval: 1000}\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return {Observable<{ interval: number, value: T }>} Observable that emit infomation about value and interval\n * @method timeInterval\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => defer(() => {\n    return source.pipe(\n      // TODO(benlesh): correct these typings.\n      scan(\n        ({ current }, value) => ({ value, current: scheduler.now(), last: current }),\n        { current: scheduler.now(), value: undefined,  last: undefined }\n      ) as any,\n      map<any, TimeInterval<T>>(({ current, last, value }) => new TimeInterval(value, current - last)),\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\n/**\n * @deprecated exposed API, use as interface only.\n */\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {}\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * ![](timeoutWith.png)\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * ## Example\n * Add fallback observable\n * ```ts\n * import { intrerval } from 'rxjs';\n * import { timeoutWith } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const minutes = interval(60 * 1000);\n *\n * seconds.pipe(timeoutWith(900, minutes))\n *   .subscribe(\n *     value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                  // since first value of `seconds` will not arrive fast enough.\n *     err => console.log(err),     // Would be called after 900ms in case of `timeout`,\n *                                  // but here will never be called.\n *   );\n * ```\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: SchedulerLike = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: SchedulerAction<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule<TimeoutWithSubscriber<T, R>>(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * ## Examples\n * Check if ticks are emitted within certain timespan\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeout(1100))      // Let's use bigger timespan to be safe,\n *                                  // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err),     // Will never be called.\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err),     // Will emit error before even first value is emitted,\n *                                  // since it did not arrive within 900ms period.\n * );\n * ```\n *\n * Use Date to check if Observable completed\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(\n *   timeout(new Date(\"December 17, 2020 03:24:00\")),\n * )\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err)      // On December 17, 2020 at 03:24:00 it will emit an error,\n *                                  // since Observable did not complete by then.\n * );\n * ```\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n","\nimport { async } from '../scheduler/async';\nimport { OperatorFunction, SchedulerLike, Timestamp as TimestampInterface } from '../types';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default it uses the *async* scheduler which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the documents click event.\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { timestamp } from 'rxjs/operators';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type {value: MouseEvent, timestamp: number}\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: SchedulerLike = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> implements TimestampInterface<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n *  ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { toArray, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n *\n * ```\n* @return An array from an observable sequence.\n* @method toArray\n* @owner Observable\n*/\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, [] as T[]);\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * ## Example\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { window, mergeAll, map, take } from 'rxjs/operators';\n *\n *  const clicks = fromEvent(document, 'click');\n *  const sec = interval(1000);\n *  const result = clicks.pipe(\n *      window(sec),\n *      map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *      mergeAll(),              // flatten the Observable-of-Observables\n *  );\n *  result.subscribe(x => console.log(x));\n * ```\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n * Ignore every 3rd click event, starting from the first one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, map, mergeAll, skip } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll(),              // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerLike, SchedulerAction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with maxWindowCount instead of take\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // each window has still at most 2 emissions\n *   mergeAll(),                // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: SchedulerLike = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: SchedulerAction<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule<CreationState<T>>(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule<TimeSpanOnlyState<T>>(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: SchedulerAction<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: SchedulerAction<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n * Every other second, emit the click events from the next 500ms\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { windowToggle, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings as any));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n      let closingNotifier;\n      try {\n        const { closingSelector } = this;\n        closingNotifier = closingSelector(innerValue);\n      } catch (e) {\n        return this.error(e);\n      }\n\n      const window = new Subject<T>();\n      const subscription = new Subscription();\n      const context = { window, subscription };\n      this.contexts.push(context);\n      const innerSubscription = subscribeToResult(this, closingNotifier, context as any);\n\n      if (innerSubscription.closed) {\n        this.closeWindow(this.contexts.length - 1);\n      } else {\n        (<any>innerSubscription).context = context;\n        subscription.add(innerSubscription);\n      }\n\n      this.destination.next(window);\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n * Emit only the first two clicks events in every window of [1-5] random seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { windowWhen, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))),     // each window has at most 2 emissions\n *   mergeAll()                         // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (e) {\n      this.destination.error(e);\n      this.window.error(e);\n      return;\n    }\n    this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, R>(source2: O2, project: (v1: T, v2: ObservedValueOf<O2>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v2: O2, v3: O3, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>>(source2: O2): OperatorFunction<T, [T, ObservedValueOf<O2>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v2: O2, v3: O3): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n * On every click event, emit an array with the latest timer event plus the click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { withLatestFrom } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link zip}.\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}","import { ZipOperator } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n","\n/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMap as flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n","module.exports = \":host{display:flex}span{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-family:Unifont;font-size:48px}x-chart{height:200px}\"","import HybridsElement from \"~hybrids-element\";\nimport tabContext, { TabContext } from \"~components/tab-context\";\nimport { Hybrids, parent, Descriptor, render, html, property } from \"hybrids\";\nimport { Observable, merge, Subscription, pipe } from \"rxjs\"\nimport { pairwise, map, bufferCount, tap, share } from \"rxjs/operators\"\nimport { CPUStatGroup, CPUStat } from \"~rpcapi\";\nimport basicCard from \"./basic-card\";\nimport xChart from \"../x-chart\";\nimport css from \"./cpu-usage.css\";\n\ninterface CpuUsage extends HybridsElement {\n  parent: TabContext;\n  utilization: number;\n  data: number[];\n}\n\nfunction getIdle(stat: CPUStat) {\n  return stat.idle + stat.iowait;\n}\n\nfunction getWork(stat: CPUStat) {\n  return stat.user + stat.nice + stat.systm + stat.irq + stat.softirq + stat.steal;\n}\n\nfunction utilization(prev: CPUStat, curr: CPUStat) {\n  const prevIdle = getIdle(prev);\n  const currIdle = getIdle(curr);\n  const prevWork = getWork(prev);\n  const currWork = getWork(curr);\n  const prevTotal = prevIdle + prevWork;\n  const currTotal = currIdle + currWork;\n  const totald = currTotal - prevTotal;\n  const idled = currIdle - prevIdle;\n  return (totald - idled) / totald;\n}\n\nfunction getPercent(num: number) {\n  return (num * 100).toFixed(1)\n}\n\nexport default {\n  parent: parent(x => x == tabContext),\n  utilization: property(0),\n  data: property(Array(10).fill(0)),\n  ex: {\n    connect(host, _, invalidate) {\n      const ob = new Observable<CPUStatGroup>(sub => {\n        const fn = (data: CPUStatGroup) => sub.next(data);\n        const rpc = host.parent.rpc;\n        rpc.on(\"sysinfo.cpustat\", fn);\n        return () => rpc.off(\"sysinfo.cpustat\", fn);\n      });\n      const subscription = new Subscription();\n      const util: Observable<number> = ob.pipe(\n        pairwise(),\n        map(pair => utilization.apply(null, pair.map(x => x.global)) as number),\n        share()\n      );\n      subscription.add(util.subscribe((value: number) => {\n        host.utilization = value;\n        invalidate();\n      }));\n      subscription.add(merge(host.data, util).pipe(\n        bufferCount(10, 1)\n      ).subscribe((data: number[]) => {\n        host.data = data;\n        invalidate();\n      }))\n      return () => subscription.unsubscribe();\n    }\n  } as Descriptor<CpuUsage>,\n  render: render(({ utilization, data }) => html`\n    <basic-card title=\"CPU Utilization\">\n      <span>${getPercent(utilization)}%</span>\n      <x-chart data=${data} color=\"#81d4fa7f\"></x-chart>\n    </basic-card>\n  `.define({ xChart, basicCard }).style(css))\n} as Hybrids<CpuUsage>;","module.exports = \":host{display:flex}span{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-family:Unifont;font-size:48px}x-chart{height:200px}\"","import HybridsElement from \"~hybrids-element\";\nimport tabContext, { TabContext } from \"~components/tab-context\";\nimport { Hybrids, parent, render, html, Descriptor, property } from \"hybrids\";\nimport basicCard from \"./basic-card\";\nimport { Subscription, Observable, merge } from \"rxjs\";\nimport { SYSInfo } from \"~rpcapi\";\nimport xChart from \"../x-chart\";\nimport { map, share, bufferCount } from \"rxjs/operators\";\nimport css from \"./mem-info.css\";\n\ninterface MemInfo extends HybridsElement {\n  parent: TabContext;\n  utilization: number;\n  data: number[];\n}\n\nfunction getPercent(num: number) {\n  return (num * 100).toFixed(1)\n}\n\nexport default {\n  parent: parent(x => x === tabContext),\n  data: property(Array(10).fill(0)),\n  utilization: property(0),\n  hook: {\n    connect(host, _, invalidate) {\n      const subs = new Subscription();\n      const ob = new Observable<SYSInfo>(r => {\n        function handler(info: SYSInfo) {\n          r.next(info);\n        }\n        const rpc = host.parent.rpc;\n        rpc.on(\"sysinfo.sysinfo\", handler);\n        return () => rpc.off(\"sysinfo.sysinfo\", handler);\n      }).pipe(map(info => 1 - (info.freeram / info.totalram)), share())\n      subs.add(ob.subscribe((num) => {\n        host.utilization = num;\n        invalidate();\n      }));\n      subs.add(merge(host.data, ob).pipe(\n        bufferCount(10, 1)\n      ).subscribe(data => {\n        host.data = data;\n        invalidate();\n      }));\n      return () => subs.unsubscribe();\n    }\n  } as Descriptor<MemInfo>,\n  render: render(({ utilization, data }) => html`\n    <basic-card title=\"Memory\">\n      <span>${getPercent(utilization)}%</span>\n      <x-chart data=${data} color=\"#81d4fa7f\"></x-chart>\n    </basic-card>\n  `.define({ xChart, basicCard }).style(css))\n} as Hybrids<MemInfo>;","/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n","/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n  /* jshint strict: false */ /* globals define, module */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See https://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n  // round value for browser zoom. desandro/masonry#928\n  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n  getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n  body.removeChild( div );\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n","/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n","/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'desandro-matches-selector/matches-selector'\n    ], function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) {\n    return [];\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    clearTimeout( timeout );\n\n    var args = arguments;\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n","/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size'\n      ],\n      factory\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      require('ev-emitter'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Outlayer = {};\n    window.Outlayer.Item = factory(\n      window.EvEmitter,\n      window.getSize\n    );\n  }\n\n}( window, function factory( EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\nvar vendorProperties = {\n  transform: transformProperty,\n  transition: transitionProperty,\n  transitionDuration: transitionProperty + 'Duration',\n  transitionProperty: transitionProperty + 'Property',\n  transitionDelay: transitionProperty + 'Delay'\n};\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  var x = parseFloat( xValue );\n  var y = parseFloat( yValue );\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  if ( xValue.indexOf('%') != -1 ) {\n    x = ( x / 100 ) * layoutSize.width;\n  }\n  if ( yValue.indexOf('%') != -1 ) {\n    y = ( y / 100 ) * layoutSize.height;\n  }\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var didNotMove = x == this.position.x && y == this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseFloat( x );\n  this.position.y = parseFloat( y );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto.transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // munge number to millisecond, to match stagger\n  var duration = this.layout.options.transitionDuration;\n  duration = typeof duration == 'number' ? duration + 'ms' : duration;\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: duration,\n    transitionDelay: this.staggerDelay || 0\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: '',\n  transitionDelay: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- stagger ----- //\n\nproto.stagger = function( delay ) {\n  delay = isNaN( delay ) ? 0 : delay;\n  this.staggerDelay = delay + 'ms';\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n","/*!\n * Outlayer v2.1.1\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size',\n        'fizzy-ui-utils/utils',\n        './item'\n      ],\n      function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./item')\n    );\n  } else {\n    // browser global\n    window.Outlayer = factory(\n      window,\n      window.EvEmitter,\n      window.getSize,\n      window.fizzyUIUtils,\n      window.Outlayer.Item\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  this.updateStagger();\n  queue.forEach( function( obj, i ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n  }, this );\n};\n\n// set stagger from option in milliseconds number\nproto.updateStagger = function() {\n  var stagger = this.options.stagger;\n  if ( stagger === null || stagger === undefined ) {\n    this.stagger = 0;\n    return;\n  }\n  this.stagger = getMilliseconds( stagger );\n  return this.stagger;\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant, i ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.stagger( i * this.stagger );\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\nvar msUnits = {\n  ms: 1,\n  s: 1000\n};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\nfunction getMilliseconds( time ) {\n  if ( typeof time == 'number' ) {\n    return time;\n  }\n  var matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n  var num = matches && matches[1];\n  var unit = matches && matches[2];\n  if ( !num.length ) {\n    return 0;\n  }\n  num = parseFloat( num );\n  var mult = msUnits[ unit ] || 1;\n  return num * mult;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n","/*!\n * Masonry v4.2.2\n * Cascading grid layout library\n * https://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer',\n        'get-size/get-size'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Masonry = factory(\n      window.Outlayer,\n      window.getSize\n    );\n  }\n\n}( window, function factory( Outlayer, getSize ) {\n\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  var proto = Masonry.prototype;\n\n  proto._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n    this.horizontalColIndex = 0;\n  };\n\n  proto.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  proto.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  proto._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n    // use horizontal or top column position\n    var colPosMethod = this.options.horizontalOrder ?\n      '_getHorizontalColPosition' : '_getTopColPosition';\n    var colPosition = this[ colPosMethod ]( colSpan, item );\n    // position the brick\n    var position = {\n      x: this.columnWidth * colPosition.col,\n      y: colPosition.y\n    };\n    // apply setHeight to necessary columns\n    var setHeight = colPosition.y + item.size.outerHeight;\n    var setMax = colSpan + colPosition.col;\n    for ( var i = colPosition.col; i < setMax; i++ ) {\n      this.colYs[i] = setHeight;\n    }\n\n    return position;\n  };\n\n  proto._getTopColPosition = function( colSpan ) {\n    var colGroup = this._getTopColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n\n    return {\n      col: colGroup.indexOf( minimumY ),\n      y: minimumY,\n    };\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  proto._getTopColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      colGroup[i] = this._getColGroupY( i, colSpan );\n    }\n    return colGroup;\n  };\n\n  proto._getColGroupY = function( col, colSpan ) {\n    if ( colSpan < 2 ) {\n      return this.colYs[ col ];\n    }\n    // make an array of colY values for that one group\n    var groupColYs = this.colYs.slice( col, col + colSpan );\n    // and get the max value of the array\n    return Math.max.apply( Math, groupColYs );\n  };\n\n  // get column position based on horizontal index. #873\n  proto._getHorizontalColPosition = function( colSpan, item ) {\n    var col = this.horizontalColIndex % this.cols;\n    var isOver = colSpan > 1 && col + colSpan > this.cols;\n    // shift to next row if item can't fit on current row\n    col = isOver ? 0 : col;\n    // don't let zero-size items take up space\n    var hasSize = item.size.outerWidth && item.size.outerHeight;\n    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n\n    return {\n      col: col,\n      y: this._getColGroupY( col, colSpan ),\n    };\n  };\n\n  proto._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  proto._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  proto._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  proto.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n","import HybridsElement from \"~hybrids-element\";\nimport { Hybrids, render, html, Descriptor, parent, property } from \"hybrids\";\n\nimport Masonry from \"masonry-layout\";\nimport tabItem, { TabItem } from \"./tab-item\";\nimport { ref } from \"~utils\";\n\ninterface MasonryLayout extends HybridsElement {\n  width: number;\n  parent: TabItem;\n  masonry: Masonry;\n  container: HTMLSlotElement;\n}\n\nfunction doLayout(host: MasonryLayout) {\n  requestAnimationFrame(() => {\n    host.masonry.reloadItems();\n    host.masonry.layout();\n  });\n}\n\ndoLayout.options = true\n\nexport default {\n  container: ref(\"slot\"),\n  hook: {\n    connect(host, _, invalidate) {\n      host.masonry = new Masonry(host);\n      host.masonry.on(\"layoutComplete\", function () {\n        const x = host.masonry as any\n        const width = x.columnWidth * x.cols;\n        const offset = (x.containerWidth - width) / 2;\n        host.container.style.transform = `translateX(${offset}px)`\n      })\n      const observer = new ResizeObserver(([{ contentRect: { width, height } }]) => {\n        if (width == 0 || height == 0) return;\n        doLayout(host);\n      });\n      observer.observe(host);\n      return () => observer.disconnect();\n    }\n  } as Descriptor<MasonryLayout>,\n  render: render(() => html`\n    <slot onslotchange=${doLayout} onupdate=${doLayout}></slot>\n  `.style(`:host { display: block } slot {display: block; position: absolute; transition: all ease .3s }`))\n} as Hybrids<MasonryLayout>;","module.exports = \":host{display:flex}div{font-family:Unifont;font-size:16px;padding:4px 8px}div:first-of-type{padding-top:12px}\"","\"use strict\";\n\n/**\r\n * filesize\r\n *\r\n * @copyright 2019 Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @license BSD-3-Clause\r\n * @version 6.0.1\r\n */\n(function (global) {\n  var b = /^(b|B)$/,\n      symbol = {\n    iec: {\n      bits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\n      bytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n    },\n    jedec: {\n      bits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\n      bytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    }\n  },\n      fullform = {\n    iec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n    jedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n  };\n  /**\r\n   * filesize\r\n   *\r\n   * @method filesize\r\n   * @param  {Mixed}   arg        String, Int or Float to transform\r\n   * @param  {Object}  descriptor [Optional] Flags\r\n   * @return {String}             Readable file size String\r\n   */\n\n  function filesize(arg) {\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var result = [],\n        val = 0,\n        e = void 0,\n        base = void 0,\n        bits = void 0,\n        ceil = void 0,\n        full = void 0,\n        fullforms = void 0,\n        locale = void 0,\n        localeOptions = void 0,\n        neg = void 0,\n        num = void 0,\n        output = void 0,\n        round = void 0,\n        unix = void 0,\n        separator = void 0,\n        spacer = void 0,\n        standard = void 0,\n        symbols = void 0;\n\n    if (isNaN(arg)) {\n      throw new TypeError(\"Invalid number\");\n    }\n\n    bits = descriptor.bits === true;\n    unix = descriptor.unix === true;\n    base = descriptor.base || 2;\n    round = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\n    locale = descriptor.locale !== void 0 ? descriptor.locale : \"\";\n    localeOptions = descriptor.localeOptions || {};\n    separator = descriptor.separator !== void 0 ? descriptor.separator : \"\";\n    spacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\n    symbols = descriptor.symbols || {};\n    standard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\n    output = descriptor.output || \"string\";\n    full = descriptor.fullform === true;\n    fullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\n    e = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\n    num = Number(arg);\n    neg = num < 0;\n    ceil = base > 2 ? 1000 : 1024; // Flipping a negative number to determine the size\n\n    if (neg) {\n      num = -num;\n    } // Determining the exponent\n\n\n    if (e === -1 || isNaN(e)) {\n      e = Math.floor(Math.log(num) / Math.log(ceil));\n\n      if (e < 0) {\n        e = 0;\n      }\n    } // Exceeding supported length, time to reduce & multiply\n\n\n    if (e > 8) {\n      e = 8;\n    }\n\n    if (output === \"exponent\") {\n      return e;\n    } // Zero is now a special case because bytes divide by 1\n\n\n    if (num === 0) {\n      result[0] = 0;\n      result[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n    } else {\n      val = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\n\n      if (bits) {\n        val = val * 8;\n\n        if (val >= ceil && e < 8) {\n          val = val / ceil;\n          e++;\n        }\n      }\n\n      result[0] = Number(val.toFixed(e > 0 ? round : 0));\n\n      if (result[0] === ceil && e < 8 && descriptor.exponent === void 0) {\n        result[0] = 1;\n        e++;\n      }\n\n      result[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n\n      if (unix) {\n        result[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\n\n        if (b.test(result[1])) {\n          result[0] = Math.floor(result[0]);\n          result[1] = \"\";\n        }\n      }\n    } // Decorating a 'diff'\n\n\n    if (neg) {\n      result[0] = -result[0];\n    } // Applying custom symbol\n\n\n    result[1] = symbols[result[1]] || result[1];\n\n    if (locale === true) {\n      result[0] = result[0].toLocaleString();\n    } else if (locale.length > 0) {\n      result[0] = result[0].toLocaleString(locale, localeOptions);\n    } else if (separator.length > 0) {\n      result[0] = result[0].toString().replace(\".\", separator);\n    } // Returning Array, Object, or String (default)\n\n\n    if (output === \"array\") {\n      return result;\n    }\n\n    if (full) {\n      result[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\n    }\n\n    if (output === \"object\") {\n      return {\n        value: result[0],\n        symbol: result[1]\n      };\n    }\n\n    return result.join(spacer);\n  } // Partial application for functional programming\n\n\n  filesize.partial = function (opt) {\n    return function (arg) {\n      return filesize(arg, opt);\n    };\n  }; // CommonJS, AMD, script tag\n\n\n  if (typeof exports !== \"undefined\") {\n    module.exports = filesize;\n  } else if (typeof define === \"function\" && define.amd !== void 0) {\n    define(function () {\n      return filesize;\n    });\n  } else {\n    global.filesize = filesize;\n  }\n})(typeof window !== \"undefined\" ? window : global);\n","import HybridsElement from \"~hybrids-element\";\nimport tabContext, { TabContext } from \"~components/tab-context\";\nimport { Hybrids, parent, render, html, Descriptor, property, dispatch } from \"hybrids\";\nimport basicCard from \"./basic-card\";\nimport { DiskSpace } from \"~rpcapi\";\nimport css from \"./disk-info.css\";\nimport filesize from \"filesize\";\n\nconst size = filesize.partial({ standard: 'iec' })\n\ninterface DiskInfo extends HybridsElement {\n  parent: TabContext;\n  path: string;\n  info: DiskSpace;\n}\n\nexport default {\n  parent: parent(x => x === tabContext),\n  info: property(undefined),\n  path: property(\"\"),\n  hook: {\n    connect(host, _, invalidate) {\n      let first = true;\n      function handler({ path, info }: { path: string; info: DiskSpace }) {\n        host.path = path;\n        host.info = info;\n        invalidate();\n        if (first) {\n          dispatch(host, 'update');\n          first = false;\n        }\n      }\n      const rpc = host.parent.rpc;\n      rpc.on(\"sysinfo.diskspace\", handler);\n      return () => rpc.off(\"sysinfo.diskspace\", handler);\n    }\n  } as Descriptor<DiskInfo>,\n  render: render(({ path, info }) => html`\n    <basic-card title=\"Disk\">\n      ${info ? html`\n        <div>For ${path}</div>\n        <div>Free ${size(info.free)}</div>\n        <div>Capacity ${size(info.capacity)}</div>\n        <div>Available ${size(info.available)}</div>\n      ` : html`<div>Loading</div>`}\n    </basic-card>\n  `.define({ basicCard }).style(css))\n} as Hybrids<DiskInfo>;","module.exports = \":host{display:flex;background-color:hsla(0,0%,100%,.8);width:fit-content;margin:auto;border-radius:16px}file-list-renderer{display:flex;padding-left:8px;padding-right:8px}folder-renderer{display:contents}.item{height:24px;display:flex;align-items:center;padding:4px}.item>span{margin-left:8px}.folder{display:flex;flex-direction:column}.folder.opened{border-radius:8px;border:2px solid #000;border-top:none;border-bottom:none}.container{display:flex;flex-direction:column;font-family:Unifont;font-size:16px;min-width:200px}.error{width:200px;color:red}\"","module.exports={connect:\"M 19 3 C 17.346 3 16 4.346 16 6 C 16 6.4617584 16.113553 6.8939944 16.300781 7.2851562 L 12.585938 11 L 7.8164062 11 C 7.4021391 9.8387486 6.3016094 9 5 9 C 3.346 9 2 10.346 2 12 C 2 13.654 3.346 15 5 15 C 6.3016094 15 7.4021391 14.161251 7.8164062 13 L 12.585938 13 L 16.300781 16.714844 C 16.113553 17.106006 16 17.538242 16 18 C 16 19.654 17.346 21 19 21 C 20.654 21 22 19.654 22 18 C 22 16.346 20.654 15 19 15 C 18.538242 15 18.106006 15.113553 17.714844 15.300781 L 14.414062 12 L 17.714844 8.6992188 C 18.106006 8.8864466 18.538242 9 19 9 C 20.654 9 22 7.654 22 6 C 22 4.346 20.654 3 19 3 z\",file:\"M13.172,2H6C4.9,2,4,2.9,4,4v16c0,1.1,0.9,2,2,2h12c1.1,0,2-0.9,2-2V8.828c0-0.53-0.211-1.039-0.586-1.414l-4.828-4.828 C14.211,2.211,13.702,2,13.172,2z M18.5,9H13V3.5L18.5,9z\",folder:\"M20,6h-8l-1.414-1.414C10.211,4.211,9.702,4,9.172,4H4C2.9,4,2,4.9,2,6v12c0,1.1,0.9,2,2,2h16c1.1,0,2-0.9,2-2V8 C22,6.9,21.1,6,20,6z\",\"opened-folder\":\"M20,6h-8l-1.414-1.414C10.211,4.211,9.702,4,9.172,4H4C2.9,4,2,4.9,2,6v12c0,1.1,0.9,2,2,2h16c1.1,0,2-0.9,2-2V8 C22,6.9,21.1,6,20,6z M20,18H4V8h16V18z\",plugin:\"M 11.5 0 C 10.119 0 9 1.119 9 2.5 L 9 4 L 5 4 C 3.895 4 3 4.895 3 6 L 3 9 C 3 9.552 3.448 10 4 10 L 4.3574219 10 C 5.6654219 10 6.8553281 10.941188 6.9863281 12.242188 C 7.1363281 13.739187 5.966 15 4.5 15 L 4 15 C 3.448 15 3 15.448 3 16 L 3 19 C 3 20.105 3.895 21 5 21 L 8 21 C 8.552 21 9 20.552 9 20 L 9 19.642578 C 9 18.334578 9.9411875 17.144672 11.242188 17.013672 C 12.739187 16.863672 14 18.034 14 19.5 L 14 20 C 14 20.552 14.448 21 15 21 L 18 21 C 19.105 21 20 20.105 20 19 L 20 15 L 21.5 15 C 22.881 15 24 13.881 24 12.5 C 24 11.119 22.881 10 21.5 10 L 20 10 L 20 6 C 20 4.895 19.105 4 18 4 L 14 4 L 14 2.5 C 14 1.119 12.881 0 11.5 0 z\",link:\"M 19.980469 2.9902344 A 1.0001 1.0001 0 0 0 19.869141 3 L 15 3 A 1.0001 1.0001 0 1 0 15 5 L 17.585938 5 L 8.2929688 14.292969 A 1.0001 1.0001 0 1 0 9.7070312 15.707031 L 19 6.4140625 L 19 9 A 1.0001 1.0001 0 1 0 21 9 L 21 4.1269531 A 1.0001 1.0001 0 0 0 19.980469 2.9902344 z M 5 3 C 3.9069372 3 3 3.9069372 3 5 L 3 19 C 3 20.093063 3.9069372 21 5 21 L 19 21 C 20.093063 21 21 20.093063 21 19 L 21 13 A 1.0001 1.0001 0 1 0 19 13 L 19 19 L 5 19 L 5 5 L 11 5 A 1.0001 1.0001 0 1 0 11 3 L 5 3 z\",add:\"M12,2C6.477,2,2,6.477,2,12s4.477,10,10,10s10-4.477,10-10S17.523,2,12,2z M17,13h-4v4h-2v-4H7v-2h4V7h2v4h4V13z\",unavailable:\"M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003 6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 13.85307 19.369262 15.55056 18.318359 16.904297 L 7.0957031 5.6816406 C 8.4494397 4.6307377 10.14693 4 12 4 z M 5.6816406 7.0957031 L 16.904297 18.318359 C 15.55056 19.369262 13.85307 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 10.14693 4.6307377 8.4494397 5.6816406 7.0957031 z\",disconnect:\"M15.828125 2.0292969C15.0505 2.0291719 14.273531 2.3119062 13.707031 2.8789062L11.5 5.0859375L10.707031 4.2929688L9.2929688 5.7070312L11.085938 7.5L9.2929688 9.2929688L10.707031 10.707031L12.5 8.9140625L15.085938 11.5L13.292969 13.292969L14.707031 14.707031L16.5 12.914062L18.292969 14.707031L19.707031 13.292969L18.914062 12.5L21.121094 10.292969C22.291094 9.1229688 22.291094 7.2207812 21.121094 6.0507812L20.242188 5.171875L21.707031 3.7070312L20.292969 2.2929688L18.828125 3.7578125L17.949219 2.8789062C17.383219 2.3124062 16.60575 2.0294219 15.828125 2.0292969 z M 5.7070312 9.2929688L4.2929688 10.707031L5.0859375 11.5L2.8789062 13.707031C1.7089063 14.877031 1.7089063 16.779219 2.8789062 17.949219L3.7578125 18.828125L2.2929688 20.292969L3.7070312 21.707031L5.171875 20.242188L6.0507812 21.121094C6.6167812 21.687094 7.369875 22 8.171875 22C8.972875 22 9.7269688 21.688094 10.292969 21.121094L12.5 18.914062L13.292969 19.707031L14.707031 18.292969L5.7070312 9.2929688 z\",sync:\"M12 0L8 4L12 8L12 5C15.859 5 19 8.14 19 12C19 12.88 18.82925 13.720094 18.53125 14.496094L20.046875 16.009766C20.651875 14.800766 21 13.442 21 12C21 7.038 16.963 3 12 3L12 0 z M 3.953125 7.9902344C3.348125 9.1992344 3 10.558 3 12C3 16.962 7.037 21 12 21L12 24L16 20L12 16L12 19C8.141 19 5 15.86 5 12C5 11.12 5.17075 10.279906 5.46875 9.5039062L3.953125 7.9902344 z\"};","import res from \"./icons.json\"\nimport { render, svg, property, Hybrids } from \"hybrids\"\nimport HybridsElement from \"~hybrids-element.js\"\n\ninterface SvgTemplate extends HybridsElement {\n  color: string;\n  size: number;\n  data: string;\n}\n\nfunction jsonToSvg(key: keyof (typeof res)) {\n  return {\n    color: property(\"black\"),\n    size: property(24),\n    data: { get: () => res[key] },\n    render: render(({ color, size, data }) =>\n      svg`<svg style=${{ display: \"block\" }} fill=${color} width=${size + \"px\"} height=${size + \"px\"} viewBox=\"0 0 24 24\"><path d=${data}></svg>`, { shadowRoot: false })\n  } as Hybrids<SvgTemplate>;\n}\n\nexport const iconConnect = jsonToSvg(\"connect\");\nexport const iconFile = jsonToSvg(\"file\");\nexport const iconFolder = jsonToSvg(\"folder\");\nexport const iconOpenedFolder = jsonToSvg(\"opened-folder\");\nexport const iconPlugin = jsonToSvg(\"plugin\");\nexport const iconLink = jsonToSvg(\"link\");\nexport const iconAdd = jsonToSvg(\"add\");\nexport const iconUnavailable = jsonToSvg(\"unavailable\");\nexport const iconDisconnect = jsonToSvg(\"disconnect\");\nexport const iconSync = jsonToSvg(\"sync\");","import tabContext, { TabContext } from \"./tab-context\";\nimport { Hybrids, parent, render, property, html, Descriptor, children } from \"hybrids\";\nimport HybridsElement from \"~hybrids-element\";\nimport { FileEntry, FileType } from \"~rpcapi\";\nimport css from \"./file-explorer.css\";\nimport { iconFile, iconFolder, iconOpenedFolder, iconConnect, iconLink, iconPlugin } from \"~res/icons\";\n\ninterface FileExplorer extends HybridsElement {\n  path: string;\n}\ninterface FileListRenderer extends HybridsElement {\n  context: TabContext;\n  filelist: Promise<FileEntry[]>;\n  path: string;\n}\ninterface FolderRenderer extends HybridsElement {\n  opened: boolean;\n  entry: FileEntry;\n  path: string;\n}\n\nfunction renderFileType(type: FileType) {\n  if (type == \"regular\") return html`<icon-file></icon-file>`.define({ iconFile })\n  if (type == \"directory\") return html`<icon-folder></icon-folder>`.define({ iconFolder })\n  if (type == \"socket\") return html`<icon-connect></icon-connect>`.define({ iconConnect })\n  if (type == \"symlink\") return html`<icon-link></icon-link>`.define({ iconLink })\n  return html`<icon-plugin></icon-plugin>`.define({ iconPlugin })\n}\n\nconst renderEntry = (path: string) => (entry: FileEntry) => entry.type == \"directory\"\n  ? html`<folder-renderer entry=${entry} path=${path + \"/\" + entry.name}></folder-renderer>`.key(entry.name).define({ folderRenderer })\n  : html`<div class=\"item\">${renderFileType(entry.type)}<span>${entry.name}</span></div>`.key(entry.name);\n\nfunction renderList(filelist: FileEntry[], path: string) {\n  return filelist.map(renderEntry(path));\n}\n\nfunction toggleFolder(host: FolderRenderer, ev: MouseEvent) {\n  ev.stopPropagation();\n  host.opened = !host.opened;\n}\n\nconst folderRenderer = {\n  entry: property(undefined),\n  path: property(\"/\"),\n  opened: property(false),\n  render: render(({ opened, entry, path }) => html`\n    <div class=${{ folder: true, opened }} onclick=${toggleFolder}>\n      <div class=item>\n        ${opened ? html`<icon-opened-folder></icon-opened-folder>`.define({ iconOpenedFolder }) : html`<icon-folder></icon-folder>`.define({ iconFolder })}\n        <span>${entry.name}</span>\n      </div>${opened && html`<file-list-renderer path=${path}></file-list-renderer>`}</div>\n  `, { shadowRoot: false })\n} as Hybrids<FolderRenderer>;\n\nconst fileListRenderer = {\n  path: property(\"/\"),\n  context: parent(x => x === tabContext),\n  filelist: ({context, path}) => context.api.fs.ls(path),\n  render: render(({ filelist, path }) => html`\n    <div class=container>\n      ${html.resolve(filelist.then(list => html`${renderList(list, path)}`).catch(e => html`<div class=error>${e + \"\"}</div>`), html`<div class=loading>Loading</div>`)}\n    </div>\n  `, { shadowRoot: false })\n} as Hybrids<FileListRenderer>\n\nexport default {\n  path: property(\"/\"),\n  render: render(({ path }) => html`\n    <file-list-renderer path=${path}></file-list-renderer>\n  `.style(css).define({ fileListRenderer }))\n} as Hybrids<FileExplorer>","module.exports = \":host{display:contents;flex-direction:column;font-family:Unifont;font-size:16px}#toolbar{width:calc(100% - 32px);height:32px;background-color:hsla(0,0%,100%,.8);backdrop-filter:blur(10px);border:2px solid #000;border-top:none;border-bottom:none;box-sizing:border-box;padding:0 16px;margin:0 auto 16px;border-radius:8px;display:flex;align-items:center}.padding{flex:1}#empty{background-color:hsla(0,0%,100%,.2);backdrop-filter:blur(10px);border:2px solid #000;border-top:none;border-bottom:none;width:200px;position:relative;height:150px;margin:auto;border-radius:8px}#empty>icon-unavailable,#empty>span{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}#empty>span{width:fit-content}#result{background-color:hsla(0,0%,100%,.2);backdrop-filter:blur(10px);border:2px solid #000;border-top:none;border-bottom:none;width:200px;margin:auto;border-radius:8px;list-style:none;padding:0}#result>li{list-style:none;margin:0;padding:4px 8px}terminal-manager-content-renderer{display:flex;flex-direction:column;height:100%}#error{background-color:hsla(0,0%,100%,.2);backdrop-filter:blur(10px);border:2px solid red;border-top:none;border-bottom:none;width:200px;position:relative;height:150px;margin:auto;border-radius:8px;display:flex;flex-direction:column;align-items:center;justify-content:space-evenly}#error button{background-color:#fff;font-family:Unifont;font-size:16px;padding:2px 8px;border-radius:100px;border:2px solid #000}:focus{outline:none}\"","import HybridsElement from \"~hybrids-element\";\nimport tabContext, { TabContext } from \"./tab-context\";\nimport { Hybrids, parent, render, html, Descriptor, property, dispatch } from \"hybrids\";\nimport xTerm, { XTerm } from \"~xterm\";\nimport { ref } from \"~utils\";\nimport { WebSocketRPCPortView } from \"~wsrpc\";\nimport { IDisposable } from \"xterm\";\n\ninterface TerminalConnection extends HybridsElement {\n  context: TabContext;\n  terminal: XTerm;\n  port: number;\n  _cont: (port: number) => void;\n}\n\nexport default {\n  context: parent(x => x === tabContext),\n  port: {\n    set({ _cont }, port) {\n      _cont(port);\n      return port;\n    }\n  },\n  terminal: ref(\"x-term\"),\n  hook: {\n    connect: (host) => {\n      let disposables: IDisposable[] = [];\n      const encoder = new TextEncoder();\n      const { context: { rpc, api }, terminal: { terminal } } = host;\n      host._cont = port => {\n        const view = rpc.bindPort(port, data => {\n          if (data.byteLength == 0) {\n            dispatch(host, \"done\");\n            return;\n          }\n          terminal.write(new Uint8Array(data))\n        });\n        disposables.push(terminal.onData(data => view.send(encoder.encode(data))));\n        disposables.push(terminal.onBinary(data => view.send(encoder.encode(data))));\n        disposables.push(terminal.onResize(({ rows, cols }) => api.shell.resize(port, rows, cols)));\n        disposables.push({ dispose() { api.shell.unlink(port); } });\n        disposables.push({ dispose() { view.unbind(); } });\n        terminal.focus();\n      }\n      return () => {\n        disposables.forEach(x => x.dispose());\n      };\n    }\n  } as Descriptor<TerminalConnection>,\n  render: render(() => html`\n    <x-term></x-term>\n  `.define({ xTerm }).style(`:host { flex: 1; display: block }`))\n} as Hybrids<TerminalConnection>;","import HybridsElement from \"~hybrids-element\";\nimport tabContext, { TabContext } from \"./tab-context\";\nimport { Hybrids, parent, render, html, property } from \"hybrids\";\nimport css from \"./terminal-manager.css\";\nimport { iconUnavailable, iconSync, iconDisconnect, iconAdd } from \"~res/icons\";\nimport terminalConnection from \"./terminal-connection\";\nimport { delay, connect } from \"~utils\";\n\ninterface TerminalManager extends HybridsElement {\n  context: TabContext;\n  orphanList: number[] | undefined;\n  error: Error | undefined;\n}\n\nconst setError = (host: TerminalManager) => (e: Error) => host.error = e;\nconst getOrphanList = ({ context: { api } }: TerminalManager) => api.shell.get_orphan_list();\nconst refreshOrphanList = (host: TerminalManagerRenderer) => { getOrphanList(host.parent).then(list => host.parent.orphanList = list).catch(setError(host.parent)); };\n\nconst doDisconnect = (host: TerminalManagerRenderer) => {\n  host.activeSession = undefined;\n  setTimeout(() => refreshOrphanList(host));\n};\nconst doConnect = (host: TerminalManagerRenderer) => {\n  host.parent.context.api.shell.open_shell().then(port => {\n    host.activeSession = port;\n  }).catch(setError(host.parent));\n}\n\nconst select = (port: number) => (host: TerminalManagerRenderer) => {\n  console.log(\"select %d\", port);\n  host.activeSession = port;\n  host.parent.context.api.shell.open_id(port).catch(setError(host.parent));\n}\n\ninterface TerminalManagerRenderer extends HybridsElement {\n  parent: TerminalManager;\n  activeSession: number | undefined;\n  list: number[];\n  disable: boolean;\n};\n\nconst terminalManagerContentRenderer: Hybrids<TerminalManagerRenderer> = {\n  parent: parent(x => x === terminalManager),\n  disable: property(false),\n  list: property([]),\n  activeSession: property(undefined),\n  render: render((host) => renderList(host), { shadowRoot: false })\n};\n\nconst handleDone = (host: TerminalManagerRenderer) => {\n  host.activeSession = undefined;\n  refreshOrphanList(host);\n}\n\nconst renderList = (host: TerminalManagerRenderer) => html`\n  <div id=toolbar>\n    <span>Toolbar</span>\n    <div class=padding></div>\n    <icon-sync onclick=${refreshOrphanList}></icon-sync>\n    <icon-disconnect color=${host.activeSession ? \"black\" : \"#0002\"} onclick=${doDisconnect}></icon-disconnect>\n    <icon-add onclick=${doConnect}></icon-add>\n  </div>\n  ${host.activeSession \n    ? html`<terminal-connection port=${host.activeSession} ondone=${handleDone}></terminal-connection>`\n    : host.list.length\n    ? html`\n      <ul id=result>\n        ${host.list.map(id => html`<li onclick=${select(id)}>${id}</li>`.key(id))}\n      </ul>\n    `\n    : html`\n      <div id=empty>\n        <icon-unavailable size=72 color=\"#7777\"></icon-unavailable>\n        <span>No orphaned sessions</span>\n      </div>\n    `}\n`;\n\nconst reloadModule = (host: TerminalManager) => {\n  host.error = null;\n  host.orphanList = null;\n  getOrphanList(host).then(list => host.orphanList = list).catch(setError(host));\n}\n\nconst renderError = (host: TerminalManager) => html`<div id=error>${host.error}<button onclick=${reloadModule}>reload module</button></div>`;\n\nconst loading = html`<div id=loading>Loading...</div>`;\n\nconst terminalManager: Hybrids<TerminalManager> = {\n  context: parent(x => x === tabContext),\n  error: property(undefined),\n  orphanList: connect((host) => {\n    getOrphanList(host).then(list => host.orphanList = list).catch(setError(host));\n  }),\n  render: render(host => html`${host.error\n    ? renderError(host)\n    : host.orphanList\n    ? html`<terminal-manager-content-renderer list=${host.orphanList}></terminal-manager-content-renderer>`\n    : loading}`\n    .define({ iconUnavailable, iconSync, iconDisconnect, iconAdd, terminalManagerContentRenderer, terminalConnection })\n    .style(css))\n};\n\nexport default terminalManager;","import HybridsElement from \"~hybrids-element\";\nimport { Hybrids, property, render, html, Descriptor, parent, dispatch } from \"hybrids\";\nimport { WebSocketRPC, ProxiedAPI } from \"~wsrpc\";\nimport { RPCApi, RPCApiEvent } from \"~rpcapi\";\n\nimport css from \"./tab-context.css\";\nimport tabItem, { TabItem } from \"./tab-item\";\nimport cpuInfo from \"./sysinfo/cpu-info\";\nimport xChart from \"./x-chart\";\nimport cpuUsage from \"./sysinfo/cpu-usage\";\nimport memInfo from \"./sysinfo/mem-info\";\nimport MasonryLayout from \"./masonry-layout\";\nimport diskInfo from \"./sysinfo/disk-info\";\nimport fileExplorer from \"./file-explorer\";\nimport terminalManager from \"./terminal-manager\";\n\nexport interface TabContext extends HybridsElement {\n  parent: TabItem;\n  activeTab: string;\n  address: string;\n  state: \"ready\" | \"connected\" | \"failed\";\n  errmessage?: string;\n  api: ProxiedAPI<RPCApi>;\n  rpc: WebSocketRPC<RPCApi, RPCApiEvent>;\n  _cont?: (address: string) => void;\n}\n\nfunction emitRetry(host: TabContext) {\n  const id = host.parent.id;\n  const title = host.parent.title;\n  const address = host.address;\n  dispatch(host, \"add\", {\n    detail: { id, title, address },\n    bubbles: true\n  });\n}\n\nfunction changeTab(host: TabContext, ev: CustomEvent) {\n  host.activeTab = ev.detail;\n}\n\nfunction buildTree(host: TabContext) {\n  return html`\n    <tab-group class=floating activeItem=${host.activeTab} onchange=${changeTab}>\n      <tab-item slot=\"home\" title=\"Home\">\n        <masonry-layout>\n          <cpu-info></cpu-info>\n          <cpu-usage></cpu-usage>\n          <mem-info></mem-info>\n          <disk-info></disk-info>\n        </masonry-layout>\n      </tab-item>\n      <tab-item slot=\"explorer\" title=\"File Explorer\">\n        <file-explorer path=\"/\"></file-explorer>\n      </tab-item>\n      <tab-item slot=\"terminal\" title=\"Terminal\">\n        <terminal-manager></terminal-manager>\n      </tab-item>\n    </tab-group>\n  `.define({ cpuInfo, xChart, cpuUsage, memInfo, diskInfo, fileExplorer, terminalManager, MasonryLayout });\n}\n\nexport default {\n  parent: parent(tabItem),\n  state: property(\"ready\"),\n  activeTab: property(\"home\"),\n  address: {\n    set(host, address: string, last) {\n      if (!host._cont) throw new Error(\"Unknown state\");\n      host._cont(address);\n      delete host._cont;\n      return address;\n    },\n    connect(host, key, invalidate) {\n      new Promise(resolve => { host._cont = resolve }).then(async (address: string) => {\n        host.rpc = new WebSocketRPC(address);\n        const api = await host.rpc.proxy();\n        host.api = api;\n        await api.ping();\n        await api.rpc.on(\"sysinfo.cpustat\", \"sysinfo.sysinfo\", \"sysinfo.diskspace\");\n        host.state = \"connected\";\n        host.rpc.on(\"close\", e => {\n          host.errmessage = e + \"\";\n          host.state = \"failed\";\n          invalidate();\n        });\n        invalidate();\n      }).catch(e => {\n        host.errmessage = e + \"\";\n        host.state = \"failed\";\n        invalidate();\n      })\n      return () => host.rpc?.close();\n    }\n  } as Descriptor<TabContext>,\n  render: render(host => html`\n    ${host.state === \"ready\" && html`<p class=info id=ready>ready</p>`}\n    ${host.state === \"failed\" && html`<p class=info id=failed>${host.errmessage}<button onclick=${emitRetry}>retry</button></p>`}\n    ${host.state === \"connected\" && buildTree(host)}\n  `.style(css))\n} as Hybrids<TabContext>","import { html, define, Hybrids, property, render } from 'hybrids';\nimport XTerm from '~xterm';\nimport LoginPanel from '~components/login-panel';\n\nimport { Preloader } from '~/preloader';\n\nimport fonts from './fonts/*.woff2';\n\nimport css from './index.css';\nimport appcss from './app.css';\nimport TabGroup from '~components/tab-group';\nimport TabItem from '~components/tab-item';\nimport { ref } from '~utils';\nimport HybridsElement from '~hybrids-element';\nimport TabContext from '~components/tab-context';\n\nconst p = new Preloader()\n\np.preloadFont(new FontFace(\"MineCrafter\", `url(${fonts.minecrafter})`))\np.preloadFont(new FontFace(\"Unifont\", `url(${fonts.unifont})`))\n\ninterface SimpleTab {\n  title: string;\n  id: string;\n  address: string;\n}\n\ninterface App extends HybridsElement {\n  tabs: SimpleTab[];\n  activeTab: string;\n  loginInit: Record<\"address\" | \"label\", string> | undefined;\n  overlayElement: HTMLDivElement\n  overlay: \"none\" | \"login\";\n}\n\nfunction handleAdd(host: App, ev: CustomEvent) {\n  if (ev.detail) {\n    const payload = ev.detail as { address: string, title: string, id: string };\n    host.loginInit = { address: payload.address, label: payload.title };\n    host.overlay = \"login\";\n    host.tabs = host.tabs.filter(x => x.id === payload.id);\n    return;\n  }\n  host.overlay = \"login\";\n}\n\nfunction hideOverlay(host: App) {\n  const target = host.overlayElement;\n  target.style.pointerEvents = 'none';\n  target.animate([{\n    opacity: 1\n  }, {\n    opacity: 0\n  }], { duration: 300 }).onfinish = () => {\n    host.overlay = \"none\";\n    target.style.removeProperty(\"pointer-events\")\n  }\n}\n\nfunction handleCancel(host: App, ev: MouseEvent) {\n  if (ev.target == ev.currentTarget) {\n    hideOverlay(host);\n  }\n}\n\nfunction handleLogin(host: App, ev: CustomEvent) {\n  const data = ev.detail as { label: string, address: string };\n  const id = Math.random().toString(36).slice(2);\n  host.tabs = [...host.tabs, {\n    id,\n    title: data.label,\n    address: data.address\n  }]\n  host.activeTab = id;\n  host.loginInit = undefined;\n  hideOverlay(host);\n}\n\nfunction handleChange(host: App, ev: CustomEvent) {\n  host.activeTab = ev.detail;\n}\n\nconst App: Hybrids<App> = {\n  overlayElement: ref(\".overlay\"),\n  activeTab: property(\"empty\"),\n  overlay: property(\"none\"),\n  tabs: property([]),\n  render: render(({ tabs, overlay, activeTab, loginInit }) => html`\n    ${html.resolve(p.wait().then(assets => html`\n      <tab-group class=${{ aside: true }} onadd=${handleAdd} activeItem=${activeTab} onchange=${handleChange}>\n        ${ tabs.map(({ id, title, address }) => html`\n          <tab-item slot=${id} title=${title}>\n            <tab-context address=${address}></tab-context>\n          </tab-item>\n        `.key(id))}\n        <span slot=\"logo\" id=\"logo\">Bedweb</span>\n      </tab-group>\n      <div class=${{ overlay: true, empty: overlay == \"none\" }} onclick=${handleCancel}>\n        ${overlay == \"login\" && html`<login-panel loginInit=${loginInit} onsubmit=${handleLogin}></login-panel>`}\n      </div>\n    `), html`loading`)}\n  `.define({ XTerm, LoginPanel, TabGroup, TabItem, TabContext }).style(appcss)),\n};\n\ndefine(\"x-app\", App);\n\nconst main = document.createElement('style')\nmain.innerHTML = css;\ndocument.head.appendChild(main)\n\nfunction needFix() {\n  return devicePixelRatio == 1;\n}\n\nfunction fixOdd() {\n  if (needFix()) {\n    document.body.style.setProperty(\"--fix-odd\", `${window.innerWidth % 2}px`);\n  }\n}\nfixOdd();\nwindow.addEventListener(\"resize\", fixOdd, { passive: true });"]}